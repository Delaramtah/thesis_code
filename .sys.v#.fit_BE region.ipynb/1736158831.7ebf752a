{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "fe2b0885",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Signal Yield: 14291.01 ± 172.36\n",
      "Background Yield: 3.63 ± 2.00\n",
      "Background Slope: 0.01 ± 0.01\n",
      "Chi-squared: 141.67\n",
      "Degrees of Freedom: 113\n",
      "Chi-squared per dof: 1.25\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "error value saved to eN_2Ibe4.txt\n",
      "value saved to N_2Ibe4.txt\n"
     ]
    }
   ],
   "source": [
    "###best and final 1 ###\n",
    "\n",
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionBE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_2idpass_BE_hist4;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    # Breit-Wigner (Cauchy PDF)\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    # Gaussian (Normal distribution)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    # Convolution approximation (pointwise multiplication, normalize after)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    # a: Exponential normalization (background yield)\n",
    "    # b: Exponential slope (background decay)\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    # Signal model\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield  # Scale signal by signal yield\n",
    "\n",
    "    # Exponential background model (with varying slope)\n",
    "    background = exponential_background(x, a, b)\n",
    "    \n",
    "    # Combine signal and background\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)  \n",
    "signal_fraction_guess = 0.95  # Increase signal fraction guess (e.g., 0.95 or 0.9)\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters (signal and background yield fixed)\n",
    "initial_params = [\n",
    "    91.1876,  # m: Breit-Wigner mass\n",
    "    2.4952,   # gamma: Breit-Wigner width\n",
    "    91.0,     # mu: Gaussian mean\n",
    "    2.0,      # sigma: Gaussian standard deviation\n",
    "    1.0,      # a: Exponential constant term (background normalization)\n",
    "    -0.01,    # b: Exponential slope (background decay)\n",
    "    signal_yield_guess,   # sig_yield: Signal yield\n",
    "]\n",
    "\n",
    "# Bounds for Parameters (background yield and slope are allowed to vary)\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],  # Lower bounds\n",
    "    [94, 5.5, 94, 5.0, np.inf, 1.0, total_yield * 1.5]  # Upper bounds\n",
    ")\n",
    "\n",
    "# Fit the data\n",
    "popt, pcov = curve_fit(\n",
    "    fit_function, x_data, y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    ")\n",
    "\n",
    "# Extracting the fitted parameters\n",
    "(m, gamma, mu, sigma, a, b, sig_yield) = popt\n",
    "\n",
    "# Compute errors in the fit parameters\n",
    "sig_yield_error = np.sqrt(pcov[6, 6])  # Error for sig_yield (7th parameter)\n",
    "background_error = np.sqrt(pcov[4, 4])  # Error for background (5th parameter)\n",
    "\n",
    "# Print the results\n",
    "print(f\"Signal Yield: {sig_yield:.2f} ± {sig_yield_error:.2f}\")\n",
    "print(f\"Background Yield: {a:.2f} ± {background_error:.2f}\")\n",
    "print(f\"Background Slope: {b:.2f} ± {np.sqrt(pcov[5, 5]):.2f}\")\n",
    "\n",
    "# Generate the signal and background components for plotting\n",
    "signal = convoluted_signal(x_data, m, gamma, mu, sigma)\n",
    "signal *= sig_yield\n",
    "\n",
    "background = exponential_background(x_data, a, b)\n",
    "\n",
    "# Generate the fit curve\n",
    "fit = signal + background\n",
    "\n",
    "# Compute the Chi-squared value\n",
    "residuals = (y_data - fit) / y_errors  # Residuals\n",
    "chi_squared = np.sum(residuals**2)  # Chi-squared value\n",
    "dof = len(x_data) - len(popt)  # Degrees of freedom\n",
    "chi_squared_dof = chi_squared / dof  # Chi-squared per dof\n",
    "\n",
    "# Print Chi-squared and Degrees of Freedom\n",
    "print(f\"Chi-squared: {chi_squared:.2f}\")\n",
    "print(f\"Degrees of Freedom: {dof}\")\n",
    "print(f\"Chi-squared per dof: {chi_squared_dof:.2f}\")\n",
    "\n",
    "# Diagnostic plot of the fit\n",
    "plt.figure(figsize=(8, 6))\n",
    "plt.errorbar(x_data, y_data, yerr=y_errors, fmt='o', label='Data', color='black')\n",
    "plt.plot(x_data, fit, label='Fit', color='red')\n",
    "plt.plot(x_data, signal, '--', label='Signal', color='blue')\n",
    "plt.plot(x_data, background, '--', label='Background', color='green')\n",
    "plt.xlabel(\"Mass\")\n",
    "plt.ylabel(\"Events\")\n",
    "plt.legend()\n",
    "plt.title(\"Signal and Background Fit with Varying Exponential Background Slope\")\n",
    "plt.show()\n",
    "with open(\"eN_2Ibe4.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield_error}\\n\")\n",
    "    print(\"error value saved to eN_2Ibe4.txt\")\n",
    "with open(\"N_2Ibe4.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield}\\n\")\n",
    "    print(\"value saved to N_2Ibe4.txt\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "16bdbe62",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Signal Yield: 12168.89 ± 151.35\n",
      "Background Yield: 3.22 ± 1.62\n",
      "Background Slope: 0.01 ± 0.01\n",
      "Chi-squared: 132.61\n",
      "Degrees of Freedom: 113\n",
      "Chi-squared per dof: 1.17\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "error value saved to eN_2Ibe5.txt\n",
      "value saved to N_2Ibe5.txt\n"
     ]
    }
   ],
   "source": [
    "###best and final 1 ###\n",
    "\n",
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionBE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_2idpass_BE_hist5;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    # Breit-Wigner (Cauchy PDF)\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    # Gaussian (Normal distribution)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    # Convolution approximation (pointwise multiplication, normalize after)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    # a: Exponential normalization (background yield)\n",
    "    # b: Exponential slope (background decay)\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    # Signal model\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield  # Scale signal by signal yield\n",
    "\n",
    "    # Exponential background model (with varying slope)\n",
    "    background = exponential_background(x, a, b)\n",
    "    \n",
    "    # Combine signal and background\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)  \n",
    "signal_fraction_guess = 0.95  # Increase signal fraction guess (e.g., 0.95 or 0.9)\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters (signal and background yield fixed)\n",
    "initial_params = [\n",
    "    91.1876,  # m: Breit-Wigner mass\n",
    "    2.4952,   # gamma: Breit-Wigner width\n",
    "    91.0,     # mu: Gaussian mean\n",
    "    2.0,      # sigma: Gaussian standard deviation\n",
    "    1.0,      # a: Exponential constant term (background normalization)\n",
    "    -0.01,    # b: Exponential slope (background decay)\n",
    "    signal_yield_guess,   # sig_yield: Signal yield\n",
    "]\n",
    "\n",
    "# Bounds for Parameters (background yield and slope are allowed to vary)\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],  # Lower bounds\n",
    "    [94, 5.5, 94, 5.0, np.inf, 1.0, total_yield * 1.5]  # Upper bounds\n",
    ")\n",
    "\n",
    "# Fit the data\n",
    "popt, pcov = curve_fit(\n",
    "    fit_function, x_data, y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    ")\n",
    "\n",
    "# Extracting the fitted parameters\n",
    "(m, gamma, mu, sigma, a, b, sig_yield) = popt\n",
    "\n",
    "# Compute errors in the fit parameters\n",
    "sig_yield_error = np.sqrt(pcov[6, 6])  # Error for sig_yield (7th parameter)\n",
    "background_error = np.sqrt(pcov[4, 4])  # Error for background (5th parameter)\n",
    "\n",
    "# Print the results\n",
    "print(f\"Signal Yield: {sig_yield:.2f} ± {sig_yield_error:.2f}\")\n",
    "print(f\"Background Yield: {a:.2f} ± {background_error:.2f}\")\n",
    "print(f\"Background Slope: {b:.2f} ± {np.sqrt(pcov[5, 5]):.2f}\")\n",
    "\n",
    "# Generate the signal and background components for plotting\n",
    "signal = convoluted_signal(x_data, m, gamma, mu, sigma)\n",
    "signal *= sig_yield\n",
    "\n",
    "background = exponential_background(x_data, a, b)\n",
    "\n",
    "# Generate the fit curve\n",
    "fit = signal + background\n",
    "\n",
    "# Compute the Chi-squared value\n",
    "residuals = (y_data - fit) / y_errors  # Residuals\n",
    "chi_squared = np.sum(residuals**2)  # Chi-squared value\n",
    "dof = len(x_data) - len(popt)  # Degrees of freedom\n",
    "chi_squared_dof = chi_squared / dof  # Chi-squared per dof\n",
    "\n",
    "# Print Chi-squared and Degrees of Freedom\n",
    "print(f\"Chi-squared: {chi_squared:.2f}\")\n",
    "print(f\"Degrees of Freedom: {dof}\")\n",
    "print(f\"Chi-squared per dof: {chi_squared_dof:.2f}\")\n",
    "\n",
    "# Diagnostic plot of the fit\n",
    "plt.figure(figsize=(8, 6))\n",
    "plt.errorbar(x_data, y_data, yerr=y_errors, fmt='o', label='Data', color='black')\n",
    "plt.plot(x_data, fit, label='Fit', color='red')\n",
    "plt.plot(x_data, signal, '--', label='Signal', color='blue')\n",
    "plt.plot(x_data, background, '--', label='Background', color='green')\n",
    "plt.xlabel(\"Mass\")\n",
    "plt.ylabel(\"Events\")\n",
    "plt.legend()\n",
    "plt.title(\"Signal and Background Fit with Varying Exponential Background Slope\")\n",
    "plt.show()\n",
    "with open(\"eN_2Ibe5.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield_error}\\n\")\n",
    "    print(\"error value saved to eN_2Ibe5.txt\")\n",
    "with open(\"N_2Ibe5.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield}\\n\")\n",
    "    print(\"value saved to N_2Ibe5.txt\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "09083788",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Signal Yield: 10538.60 ± 129.64\n",
      "Background Yield: 1.58 ± 0.95\n",
      "Background Slope: 0.02 ± 0.01\n",
      "Chi-squared: 111.08\n",
      "Degrees of Freedom: 113\n",
      "Chi-squared per dof: 0.98\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "error value saved to eN_2Ibe6.txt\n",
      "value saved to N_2Ibe6.txt\n"
     ]
    }
   ],
   "source": [
    "###best and final 1 ###\n",
    "\n",
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionBE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_2idpass_BE_hist6;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    # Breit-Wigner (Cauchy PDF)\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    # Gaussian (Normal distribution)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    # Convolution approximation (pointwise multiplication, normalize after)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    # a: Exponential normalization (background yield)\n",
    "    # b: Exponential slope (background decay)\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    # Signal model\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield  # Scale signal by signal yield\n",
    "\n",
    "    # Exponential background model (with varying slope)\n",
    "    background = exponential_background(x, a, b)\n",
    "    \n",
    "    # Combine signal and background\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)  \n",
    "signal_fraction_guess = 0.95  # Increase signal fraction guess (e.g., 0.95 or 0.9)\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters (signal and background yield fixed)\n",
    "initial_params = [\n",
    "    91.1876,  # m: Breit-Wigner mass\n",
    "    2.4952,   # gamma: Breit-Wigner width\n",
    "    91.0,     # mu: Gaussian mean\n",
    "    2.0,      # sigma: Gaussian standard deviation\n",
    "    1.0,      # a: Exponential constant term (background normalization)\n",
    "    -0.01,    # b: Exponential slope (background decay)\n",
    "    signal_yield_guess,   # sig_yield: Signal yield\n",
    "]\n",
    "\n",
    "# Bounds for Parameters (background yield and slope are allowed to vary)\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],  # Lower bounds\n",
    "    [94, 5.5, 94, 5.0, np.inf, 1.0, total_yield * 1.5]  # Upper bounds\n",
    ")\n",
    "\n",
    "# Fit the data\n",
    "popt, pcov = curve_fit(\n",
    "    fit_function, x_data, y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    ")\n",
    "\n",
    "# Extracting the fitted parameters\n",
    "(m, gamma, mu, sigma, a, b, sig_yield) = popt\n",
    "\n",
    "# Compute errors in the fit parameters\n",
    "sig_yield_error = np.sqrt(pcov[6, 6])  # Error for sig_yield (7th parameter)\n",
    "background_error = np.sqrt(pcov[4, 4])  # Error for background (5th parameter)\n",
    "\n",
    "# Print the results\n",
    "print(f\"Signal Yield: {sig_yield:.2f} ± {sig_yield_error:.2f}\")\n",
    "print(f\"Background Yield: {a:.2f} ± {background_error:.2f}\")\n",
    "print(f\"Background Slope: {b:.2f} ± {np.sqrt(pcov[5, 5]):.2f}\")\n",
    "\n",
    "# Generate the signal and background components for plotting\n",
    "signal = convoluted_signal(x_data, m, gamma, mu, sigma)\n",
    "signal *= sig_yield\n",
    "\n",
    "background = exponential_background(x_data, a, b)\n",
    "\n",
    "# Generate the fit curve\n",
    "fit = signal + background\n",
    "\n",
    "# Compute the Chi-squared value\n",
    "residuals = (y_data - fit) / y_errors  # Residuals\n",
    "chi_squared = np.sum(residuals**2)  # Chi-squared value\n",
    "dof = len(x_data) - len(popt)  # Degrees of freedom\n",
    "chi_squared_dof = chi_squared / dof  # Chi-squared per dof\n",
    "\n",
    "# Print Chi-squared and Degrees of Freedom\n",
    "print(f\"Chi-squared: {chi_squared:.2f}\")\n",
    "print(f\"Degrees of Freedom: {dof}\")\n",
    "print(f\"Chi-squared per dof: {chi_squared_dof:.2f}\")\n",
    "\n",
    "# Diagnostic plot of the fit\n",
    "plt.figure(figsize=(8, 6))\n",
    "plt.errorbar(x_data, y_data, yerr=y_errors, fmt='o', label='Data', color='black')\n",
    "plt.plot(x_data, fit, label='Fit', color='red')\n",
    "plt.plot(x_data, signal, '--', label='Signal', color='blue')\n",
    "plt.plot(x_data, background, '--', label='Background', color='green')\n",
    "plt.xlabel(\"Mass\")\n",
    "plt.ylabel(\"Events\")\n",
    "plt.legend()\n",
    "plt.title(\"Signal and Background Fit with Varying Exponential Background Slope\")\n",
    "plt.show()\n",
    "with open(\"eN_2Ibe6.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield_error}\\n\")\n",
    "    print(\"error value saved to eN_2Ibe6.txt\")\n",
    "with open(\"N_2Ibe6.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield}\\n\")\n",
    "    print(\"value saved to N_2Ibe6.txt\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "455f429a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Signal Yield: 3618.15 ± 107.20\n",
      "Background Yield: 11.34 ± 7.61\n",
      "Background Slope: -0.01 ± 0.01\n",
      "Chi-squared: 131.82\n",
      "Degrees of Freedom: 113\n",
      "Chi-squared per dof: 1.17\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "error value saved to eN_1Ibe4.txt\n",
      "value saved to N_1Ibe4.txt\n"
     ]
    }
   ],
   "source": [
    "###best and final 1 ###\n",
    "\n",
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionBE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_1idpass_BE_hist4;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    # Breit-Wigner (Cauchy PDF)\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    # Gaussian (Normal distribution)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    # Convolution approximation (pointwise multiplication, normalize after)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    # a: Exponential normalization (background yield)\n",
    "    # b: Exponential slope (background decay)\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    # Signal model\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield  # Scale signal by signal yield\n",
    "\n",
    "    # Exponential background model (with varying slope)\n",
    "    background = exponential_background(x, a, b)\n",
    "    \n",
    "    # Combine signal and background\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)  \n",
    "signal_fraction_guess = 0.95  # Increase signal fraction guess (e.g., 0.95 or 0.9)\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters (signal and background yield fixed)\n",
    "initial_params = [\n",
    "    91.1876,  # m: Breit-Wigner mass\n",
    "    2.4952,   # gamma: Breit-Wigner width\n",
    "    91.0,     # mu: Gaussian mean\n",
    "    2.0,      # sigma: Gaussian standard deviation\n",
    "    1.0,      # a: Exponential constant term (background normalization)\n",
    "    -0.01,    # b: Exponential slope (background decay)\n",
    "    signal_yield_guess,   # sig_yield: Signal yield\n",
    "]\n",
    "\n",
    "# Bounds for Parameters (background yield and slope are allowed to vary)\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],  # Lower bounds\n",
    "    [94, 5.5, 94, 5.0, np.inf, 1.0, total_yield * 1.5]  # Upper bounds\n",
    ")\n",
    "\n",
    "# Fit the data\n",
    "popt, pcov = curve_fit(\n",
    "    fit_function, x_data, y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    ")\n",
    "\n",
    "# Extracting the fitted parameters\n",
    "(m, gamma, mu, sigma, a, b, sig_yield) = popt\n",
    "\n",
    "# Compute errors in the fit parameters\n",
    "sig_yield_error = np.sqrt(pcov[6, 6])  # Error for sig_yield (7th parameter)\n",
    "background_error = np.sqrt(pcov[4, 4])  # Error for background (5th parameter)\n",
    "\n",
    "# Print the results\n",
    "print(f\"Signal Yield: {sig_yield:.2f} ± {sig_yield_error:.2f}\")\n",
    "print(f\"Background Yield: {a:.2f} ± {background_error:.2f}\")\n",
    "print(f\"Background Slope: {b:.2f} ± {np.sqrt(pcov[5, 5]):.2f}\")\n",
    "\n",
    "# Generate the signal and background components for plotting\n",
    "signal = convoluted_signal(x_data, m, gamma, mu, sigma)\n",
    "signal *= sig_yield\n",
    "\n",
    "background = exponential_background(x_data, a, b)\n",
    "\n",
    "# Generate the fit curve\n",
    "fit = signal + background\n",
    "\n",
    "# Compute the Chi-squared value\n",
    "residuals = (y_data - fit) / y_errors  # Residuals\n",
    "chi_squared = np.sum(residuals**2)  # Chi-squared value\n",
    "dof = len(x_data) - len(popt)  # Degrees of freedom\n",
    "chi_squared_dof = chi_squared / dof  # Chi-squared per dof\n",
    "\n",
    "# Print Chi-squared and Degrees of Freedom\n",
    "print(f\"Chi-squared: {chi_squared:.2f}\")\n",
    "print(f\"Degrees of Freedom: {dof}\")\n",
    "print(f\"Chi-squared per dof: {chi_squared_dof:.2f}\")\n",
    "\n",
    "# Diagnostic plot of the fit\n",
    "plt.figure(figsize=(8, 6))\n",
    "plt.errorbar(x_data, y_data, yerr=y_errors, fmt='o', label='Data', color='black')\n",
    "plt.plot(x_data, fit, label='Fit', color='red')\n",
    "plt.plot(x_data, signal, '--', label='Signal', color='blue')\n",
    "plt.plot(x_data, background, '--', label='Background', color='green')\n",
    "plt.xlabel(\"Mass\")\n",
    "plt.ylabel(\"Events\")\n",
    "plt.legend()\n",
    "plt.title(\"Signal and Background Fit with Varying Exponential Background Slope\")\n",
    "plt.show()\n",
    "with open(\"eN_1Ibe4.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield_error}\\n\")\n",
    "    print(\"error value saved to eN_1Ibe4.txt\")\n",
    "with open(\"N_1Ibe4.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield}\\n\")\n",
    "    print(\"value saved to N_1Ibe4.txt\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "5892022a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Signal Yield: 2977.79 ± 91.42\n",
      "Background Yield: 3.50 ± 2.80\n",
      "Background Slope: 0.00 ± 0.01\n",
      "Chi-squared: 116.79\n",
      "Degrees of Freedom: 113\n",
      "Chi-squared per dof: 1.03\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "error value saved to eN_1Ibe5.txt\n",
      "value saved to N_1Ibe5.txt\n"
     ]
    }
   ],
   "source": [
    "###best and final 1 ###\n",
    "\n",
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionBE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_1idpass_BE_hist5;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    # Breit-Wigner (Cauchy PDF)\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    # Gaussian (Normal distribution)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    # Convolution approximation (pointwise multiplication, normalize after)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    # a: Exponential normalization (background yield)\n",
    "    # b: Exponential slope (background decay)\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    # Signal model\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield  # Scale signal by signal yield\n",
    "\n",
    "    # Exponential background model (with varying slope)\n",
    "    background = exponential_background(x, a, b)\n",
    "    \n",
    "    # Combine signal and background\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)  \n",
    "signal_fraction_guess = 0.95  # Increase signal fraction guess (e.g., 0.95 or 0.9)\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters (signal and background yield fixed)\n",
    "initial_params = [\n",
    "    91.1876,  # m: Breit-Wigner mass\n",
    "    2.4952,   # gamma: Breit-Wigner width\n",
    "    91.0,     # mu: Gaussian mean\n",
    "    2.0,      # sigma: Gaussian standard deviation\n",
    "    1.0,      # a: Exponential constant term (background normalization)\n",
    "    -0.01,    # b: Exponential slope (background decay)\n",
    "    signal_yield_guess,   # sig_yield: Signal yield\n",
    "]\n",
    "\n",
    "# Bounds for Parameters (background yield and slope are allowed to vary)\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],  # Lower bounds\n",
    "    [94, 5.5, 94, 5.0, np.inf, 1.0, total_yield * 1.5]  # Upper bounds\n",
    ")\n",
    "\n",
    "# Fit the data\n",
    "popt, pcov = curve_fit(\n",
    "    fit_function, x_data, y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    ")\n",
    "\n",
    "# Extracting the fitted parameters\n",
    "(m, gamma, mu, sigma, a, b, sig_yield) = popt\n",
    "\n",
    "# Compute errors in the fit parameters\n",
    "sig_yield_error = np.sqrt(pcov[6, 6])  # Error for sig_yield (7th parameter)\n",
    "background_error = np.sqrt(pcov[4, 4])  # Error for background (5th parameter)\n",
    "\n",
    "# Print the results\n",
    "print(f\"Signal Yield: {sig_yield:.2f} ± {sig_yield_error:.2f}\")\n",
    "print(f\"Background Yield: {a:.2f} ± {background_error:.2f}\")\n",
    "print(f\"Background Slope: {b:.2f} ± {np.sqrt(pcov[5, 5]):.2f}\")\n",
    "\n",
    "# Generate the signal and background components for plotting\n",
    "signal = convoluted_signal(x_data, m, gamma, mu, sigma)\n",
    "signal *= sig_yield\n",
    "\n",
    "background = exponential_background(x_data, a, b)\n",
    "\n",
    "# Generate the fit curve\n",
    "fit = signal + background\n",
    "\n",
    "# Compute the Chi-squared value\n",
    "residuals = (y_data - fit) / y_errors  # Residuals\n",
    "chi_squared = np.sum(residuals**2)  # Chi-squared value\n",
    "dof = len(x_data) - len(popt)  # Degrees of freedom\n",
    "chi_squared_dof = chi_squared / dof  # Chi-squared per dof\n",
    "\n",
    "# Print Chi-squared and Degrees of Freedom\n",
    "print(f\"Chi-squared: {chi_squared:.2f}\")\n",
    "print(f\"Degrees of Freedom: {dof}\")\n",
    "print(f\"Chi-squared per dof: {chi_squared_dof:.2f}\")\n",
    "\n",
    "# Diagnostic plot of the fit\n",
    "plt.figure(figsize=(8, 6))\n",
    "plt.errorbar(x_data, y_data, yerr=y_errors, fmt='o', label='Data', color='black')\n",
    "plt.plot(x_data, fit, label='Fit', color='red')\n",
    "plt.plot(x_data, signal, '--', label='Signal', color='blue')\n",
    "plt.plot(x_data, background, '--', label='Background', color='green')\n",
    "plt.xlabel(\"Mass\")\n",
    "plt.ylabel(\"Events\")\n",
    "plt.legend()\n",
    "plt.title(\"Signal and Background Fit with Varying Exponential Background Slope\")\n",
    "plt.show()\n",
    "with open(\"eN_1Ibe5.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield_error}\\n\")\n",
    "    print(\"error value saved to eN_1Ibe5.txt\")\n",
    "with open(\"N_1Ibe5.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield}\\n\")\n",
    "    print(\"value saved to N_1Ibe5.txt\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "7c78c94a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Signal Yield: 2309.96 ± 76.83\n",
      "Background Yield: 17.09 ± 11.50\n",
      "Background Slope: -0.01 ± 0.01\n",
      "Chi-squared: 154.13\n",
      "Degrees of Freedom: 113\n",
      "Chi-squared per dof: 1.36\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "error value saved to eN_1Ibe6.txt\n",
      "value saved to N_1Ibe6.txt\n"
     ]
    }
   ],
   "source": [
    "###best and final 1 ###\n",
    "\n",
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionBE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_1idpass_BE_hist6;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    # Breit-Wigner (Cauchy PDF)\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    # Gaussian (Normal distribution)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    # Convolution approximation (pointwise multiplication, normalize after)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    # a: Exponential normalization (background yield)\n",
    "    # b: Exponential slope (background decay)\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    # Signal model\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield  # Scale signal by signal yield\n",
    "\n",
    "    # Exponential background model (with varying slope)\n",
    "    background = exponential_background(x, a, b)\n",
    "    \n",
    "    # Combine signal and background\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)  \n",
    "signal_fraction_guess = 0.95  # Increase signal fraction guess (e.g., 0.95 or 0.9)\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters (signal and background yield fixed)\n",
    "initial_params = [\n",
    "    91.1876,  # m: Breit-Wigner mass\n",
    "    2.4952,   # gamma: Breit-Wigner width\n",
    "    91.0,     # mu: Gaussian mean\n",
    "    2.0,      # sigma: Gaussian standard deviation\n",
    "    1.0,      # a: Exponential constant term (background normalization)\n",
    "    -0.01,    # b: Exponential slope (background decay)\n",
    "    signal_yield_guess,   # sig_yield: Signal yield\n",
    "]\n",
    "\n",
    "# Bounds for Parameters (background yield and slope are allowed to vary)\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],  # Lower bounds\n",
    "    [94, 5.5, 94, 4.0, np.inf, 1.0, total_yield * 1.5]  # Upper bounds\n",
    ")\n",
    "\n",
    "# Fit the data\n",
    "popt, pcov = curve_fit(\n",
    "    fit_function, x_data, y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    ")\n",
    "\n",
    "# Extracting the fitted parameters\n",
    "(m, gamma, mu, sigma, a, b, sig_yield) = popt\n",
    "\n",
    "# Compute errors in the fit parameters\n",
    "sig_yield_error = np.sqrt(pcov[6, 6])  # Error for sig_yield (7th parameter)\n",
    "background_error = np.sqrt(pcov[4, 4])  # Error for background (5th parameter)\n",
    "\n",
    "# Print the results\n",
    "print(f\"Signal Yield: {sig_yield:.2f} ± {sig_yield_error:.2f}\")\n",
    "print(f\"Background Yield: {a:.2f} ± {background_error:.2f}\")\n",
    "print(f\"Background Slope: {b:.2f} ± {np.sqrt(pcov[5, 5]):.2f}\")\n",
    "\n",
    "# Generate the signal and background components for plotting\n",
    "signal = convoluted_signal(x_data, m, gamma, mu, sigma)\n",
    "signal *= sig_yield\n",
    "\n",
    "background = exponential_background(x_data, a, b)\n",
    "\n",
    "# Generate the fit curve\n",
    "fit = signal + background\n",
    "\n",
    "# Compute the Chi-squared value\n",
    "residuals = (y_data - fit) / y_errors  # Residuals\n",
    "chi_squared = np.sum(residuals**2)  # Chi-squared value\n",
    "dof = len(x_data) - len(popt)  # Degrees of freedom\n",
    "chi_squared_dof = chi_squared / dof  # Chi-squared per dof\n",
    "\n",
    "# Print Chi-squared and Degrees of Freedom\n",
    "print(f\"Chi-squared: {chi_squared:.2f}\")\n",
    "print(f\"Degrees of Freedom: {dof}\")\n",
    "print(f\"Chi-squared per dof: {chi_squared_dof:.2f}\")\n",
    "\n",
    "# Diagnostic plot of the fit\n",
    "plt.figure(figsize=(8, 6))\n",
    "plt.errorbar(x_data, y_data, yerr=y_errors, fmt='o', label='Data', color='black')\n",
    "plt.plot(x_data, fit, label='Fit', color='red')\n",
    "plt.plot(x_data, signal, '--', label='Signal', color='blue')\n",
    "plt.plot(x_data, background, '--', label='Background', color='green')\n",
    "plt.xlabel(\"Mass\")\n",
    "plt.ylabel(\"Events\")\n",
    "plt.legend()\n",
    "plt.title(\"Signal and Background Fit with Varying Exponential Background Slope\")\n",
    "plt.show()\n",
    "with open(\"eN_1Ibe6.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield_error}\\n\")\n",
    "    print(\"error value saved to eN_1Ibe6.txt\")\n",
    "with open(\"N_1Ibe6.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield}\\n\")\n",
    "    print(\"value saved to N_1Ibe6.txt\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "18800999",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Efficiency_BB_hist4: 0.8876 ± 0.0107\n"
     ]
    }
   ],
   "source": [
    "# eff cal for EE_hist1 #\n",
    "\n",
    "import numpy as np\n",
    "\n",
    "# Given data with uncertainties\n",
    "Nsig1 = 3618.15\n",
    "Nsig1_error = 107.20\n",
    "Nsig2 =  14291.01 \n",
    "Nsig2_error = 172.36\n",
    "\n",
    "# Calculate efficiency\n",
    "efficiency = (2*Nsig2) / ((2*Nsig2) + Nsig1)\n",
    "\n",
    "# Partial derivatives\n",
    "d_eta_d_Nsig1 = -Nsig2 / (Nsig1 + Nsig2)**2\n",
    "d_eta_d_Nsig2 = 1 / (Nsig1 + Nsig2)\n",
    "\n",
    "# Propagated uncertainty\n",
    "efficiency_error = np.sqrt((d_eta_d_Nsig1 * Nsig1_error)**2 + (d_eta_d_Nsig2 * Nsig2_error)**2)\n",
    "\n",
    "print(f\"Efficiency_BB_hist4: {efficiency:.4f} ± {efficiency_error:.4f}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "8b88dedf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Efficiency_BB_hist5: 0.8910 ± 0.0111\n"
     ]
    }
   ],
   "source": [
    "# eff cal for EE_hist2 #\n",
    "\n",
    "import numpy as np\n",
    "\n",
    "# Given data with uncertainties\n",
    "Nsig1 = 2977.79\n",
    "Nsig1_error = 90.99\n",
    "Nsig2 = 12168.89\n",
    "Nsig2_error = 151.05\n",
    "\n",
    "# Calculate efficiency\n",
    "efficiency = (2*Nsig2) / ((2*Nsig2) + Nsig1)\n",
    "\n",
    "# Partial derivatives\n",
    "d_eta_d_Nsig1 = -Nsig2 / (Nsig1 + Nsig2)**2\n",
    "d_eta_d_Nsig2 = 1 / (Nsig1 + Nsig2)\n",
    "\n",
    "# Propagated uncertainty\n",
    "efficiency_error = np.sqrt((d_eta_d_Nsig1 * Nsig1_error)**2 + (d_eta_d_Nsig2 * Nsig2_error)**2)\n",
    "\n",
    "print(f\"Efficiency_BB_hist5: {efficiency:.4f} ± {efficiency_error:.4f}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "2653cbe5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Efficiency_BB_hist6: 0.8202 ± 0.0112\n"
     ]
    }
   ],
   "source": [
    "# eff cal for EE_hist3 #\n",
    "\n",
    "import numpy as np\n",
    "\n",
    "# Given data with uncertainties\n",
    "Nsig1 = 2309.96\n",
    "Nsig1_error = 88.99\n",
    "Nsig2 =  10538.60\n",
    "Nsig2_error = 124.72\n",
    "\n",
    "# Calculate efficiency\n",
    "efficiency = Nsig2 / (Nsig2 + Nsig1)\n",
    "\n",
    "# Partial derivatives\n",
    "d_eta_d_Nsig1 = -Nsig2 / (Nsig1 + Nsig2)**2\n",
    "d_eta_d_Nsig2 = 1 / (Nsig1 + Nsig2)\n",
    "\n",
    "# Propagated uncertainty\n",
    "efficiency_error = np.sqrt((d_eta_d_Nsig1 * Nsig1_error)**2 + (d_eta_d_Nsig2 * Nsig2_error)**2)\n",
    "\n",
    "print(f\"Efficiency_BB_hist6: {efficiency:.4f} ± {efficiency_error:.4f}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "79a274ae",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 5 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionBE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_2idpass_BE_hist4;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    # Breit-Wigner (Cauchy PDF)\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    # Gaussian (Normal distribution)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    # Convolution approximation (pointwise multiplication, normalize after)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    # a: Exponential normalization (background yield)\n",
    "    # b: Exponential slope (background decay)\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    # Signal model\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield  # Scale signal by signal yield\n",
    "\n",
    "    # Exponential background model (with varying slope)\n",
    "    background = exponential_background(x, a, b)\n",
    "    \n",
    "    # Combine signal and background\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)  \n",
    "signal_fraction_guess = 0.95  # Increase signal fraction guess (e.g., 0.95 or 0.9)\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters (signal and background yield fixed)\n",
    "initial_params = [\n",
    "    91.1876,  # m: Breit-Wigner mass\n",
    "    2.4952,   # gamma: Breit-Wigner width\n",
    "    91.0,     # mu: Gaussian mean\n",
    "    2.0,      # sigma: Gaussian standard deviation\n",
    "    1.0,      # a: Exponential constant term (background normalization)\n",
    "    -0.01,    # b: Exponential slope (background decay)\n",
    "    signal_yield_guess,   # sig_yield: Signal yield\n",
    "]\n",
    "\n",
    "# Bounds for Parameters (background yield and slope are allowed to vary)\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],  # Lower bounds\n",
    "    [94, 5.5, 94, 5.0, np.inf, 1.0, total_yield * 1.5]  # Upper bounds\n",
    ")\n",
    "\n",
    "# Plotting histograms for each fit parameter\n",
    "# Number of bootstrap iterations\n",
    "n_bootstrap = 500\n",
    "\n",
    "# Arrays to store fitted parameters\n",
    "signal_params = []  # For signal-related parameters (m, gamma, mu, sigma, sig_yield)\n",
    "background_params = []  # For background-related parameters (a, b)\n",
    "\n",
    "# Perform bootstrapping\n",
    "for _ in range(n_bootstrap):\n",
    "    # Generate a resampled histogram with replacement\n",
    "    resampled_y_data = np.random.poisson(y_data)  # Resample assuming Poisson statistics\n",
    "\n",
    "    try:\n",
    "        # Fit the resampled data\n",
    "        popt_resampled, _ = curve_fit(\n",
    "            fit_function, x_data, resampled_y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    "        )\n",
    "        \n",
    "        # Store signal parameters\n",
    "        signal_params.append(popt_resampled[:5])  # m, gamma, mu, sigma, sig_yield\n",
    "        \n",
    "        # Store background parameters\n",
    "        background_params.append(popt_resampled[4:6])  # a, b\n",
    "    \n",
    "    except RuntimeError:\n",
    "        # Skip fits that fail to converge\n",
    "        continue\n",
    "        \n",
    "        \n",
    "signal_params = np.array(signal_params)\n",
    "background_params = np.array(background_params)\n",
    "\n",
    "\n",
    "# Plotting signal parameter distributions\n",
    "plt.figure(figsize=(12, 8))\n",
    "signal_labels = [\"Mean (m)\", \"Gamma (gamma)\", \"Mu (mu)\", \"Sigma (sigma)\", \"Signal Yield\"]\n",
    "for i, param in enumerate(signal_labels):\n",
    "    plt.subplot(3, 2, i + 1)\n",
    "    plt.hist(signal_params[:, i], bins=30, color='blue', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n",
    "# Plotting background parameter distributions\n",
    "plt.figure(figsize=(12, 4))\n",
    "background_labels = [\"Background Yield (a)\", \"Background Slope (b)\"]\n",
    "for i, param in enumerate(background_labels):\n",
    "    plt.subplot(1, 2, i + 1)\n",
    "    plt.hist(background_params[:, i], bins=30, color='green', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "5fba302d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 5 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA1gAAAEYCAYAAABBWFftAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjguMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/H5lhTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAtKklEQVR4nO3debgkZXn38e+PRRFBFhnIsAwjSlDigjgaDcYNNQQZQRNU4jIqir5m0bjiEoMaI2pi1GiMuI6Ao4gijCZGRNEYFQRkFRQFBGRkBgQBRRG43z+qDvQcztLnTPXps3w/19VXd1XXcledPn33Xc9TVakqJEmSJEkbbqNhByBJkiRJ84UFliRJkiR1xAJLkiRJkjpigSVJkiRJHbHAkiRJkqSOWGBJkiRJUkcssDSuJP+Z5B86WtaSJDcl2bgdPjXJi7pYdru8/06yoqvlTWG9/5TkmiS/mOH1VpL7zeQ6u5DksiRPnMZ8fX8WJ1pHkscluXKS+VclOajPdZ2e5I/6mVZSd8xPfa3X/DQFG5CflrbbvMkg4ppk3U9O8sWe4XH3fZKnJvnMjAW3wFlgLVDtF8nNSW5Mcn2S7yR5aZI7PhNV9dKqelufy5rwS6mqLq+qLarqtg5iPyLJMaOW/+dVtXJDlz3FOHYBXgXsWVV/MMb7j0tye5u4b0ry8yRvmckY54okL05yYZK794y7d5K1Sfbr97PYQRwPBh4CnNjnLP8CvHVwEUkLj/lpw5mfupVk5ySfbwvWXyU5L8nzhx0X8M/Akf1MWFUnAQ9s85wGzAJrYVteVVsCu9L8g74O+FjXKxnGUZ0ZsitwbVWtnWCaq9rEvQXwaODQfltHZsJs+dtU1UeAK4E394x+L/BfVfWVGQzlJcCx1f8d2E8CHp9k8QBjkhYi89OGMT9162jgCpr9em/gecDVwwwoycOBrarqe1OYbRVw2IBCUg8LLFFVv2qPbDwTWJHkgQBJPpnkn9rX2yX5Uns08ZdJ/jfJRkmOBpYAq9ujYK/taS4/NMnlwNfHaUK/b9vF6ldJTkyybbuuu3TjGjkKmWQ/4A3AM9v1ndO+f0eXjjauNyX5WdsC8qkkW7XvjcSxIsnl7dGoN463b5Js1c6/rl3em9rlPxE4GdixjeOTfeznS4HvAHv2LP99Sa5IckOSM5P8ac97Gyd5Q5Kftkdyz2yPSo6O8dHtMh7fDj85yY/a/fofSb7Zs2+en+T/kvxbkl8CR4y3je306x2NHf13bPf729pl3pjkq0m265n+ue0yr51oP7deDLwsyV5JngzsC/x9u5w7Povt8AFJzs6dR7fHPCKX5B7tvNcl+SHw8Eli+HPgmz3z3zfJ19v4r0lybJKtR96vqt8CZwJPnmS5kqbB/GR+miX56eHAJ6vq11V1a1X9oKr+e6wJk+yY5KT2s/iTJC/uee+IJMcn+Wwb01lJHjJq3s+323tpkr+bIKb18lWP/ZNc0n5+3p2ell/gVOApk2yrOmCBpTtU1ek0rQh/Osbbr2rfWwTsQJNEqqqeC1xOc7Rxi6p6V888jwUeAPzZOKt8HvBCYEfgVuD9fcT4FZom8c+263vIGJM9v308HtgN2AL4wKhpHg3sQfMj/s1JHjDOKv8d2KpdzmPbmF9QVV+j+XIbOQL4/MliT7I7sA/Qe7Tp+8BewLbAp4HPJdmsfe+VwCHA/sC9aPbVb0Yt889ojkj9RVV9o00exwOvpznK9iPgT0aF8sfAJcD2wNvH28bJtqfHX7XTbw/cDXh1G9uewIeA59L8je8N7DzeQqrqMpoWrI8DHwZeVlXXjZ4uyd7tNC9pl/lh4KT0dC/s8Y/AfdvHnwHjngeR5J7AfWj22R2jgXe08T8A2AU4YtSsF9J0K5Q0IOanMZmfJtdJfqLZLx9M8qwkSyZZ5yqaz+OOwF8C/5xk3573DwQ+x5379YtJNm0LodXAOcBONH//V7T7cSwPYv18NeJpwDJg73ZdL+x570JgaZJ7TbIN2kAWWBrtKpp/+tF+DywGdq2q31fV//bRjeqI9mjPzeO8f3RVnV9Vvwb+AXhG2pOMN9CzgfdU1SVVdRPNl/mzsv7RybdU1c1VdQ7Nl9ldEmEbyzOB11fVjW0B8K80X8j92jHNUdUbgB8DpwHfHnmzqo6pqmvbI2L/CtydJrECvAh4U1X9qBrnVNW1Pcs+GDgK2L/98QFNsrugqr5QVSM/Ckaf4HxVVf17+/4tHWzjJ6rqx+3f+TiahAxNYvlSVX2rqn5H8ze+fZJlfYDms3Z2VX1xnGleDHy4qk6rqtvacxt+BzxyjGmfAby9qn5ZVVcw8Y+krdvnG0dGVNVPqurkqvpdVa0D3kOT5Hvd2DOvpMExP7XMT33rKj8dDPxvO92laXpQ3KVHRNuK92jgdVX126o6G/joqJjPrKrjq+r3NDllM5r89XBgUVW9tapuqapLgI8Azxonpq3pyVc93tnmvMtputof0vPeyPRbT7Ct6oAFlkbbCfjlGOPfDfwE+Grb9Hx4H8u6Ygrv/wzYFNhunGmnYsd2eb3L3oTmyOaI3i/139AcRRxtO5ojXqOXtdMUYrmqqrauqnvRfKHdDNxxsnOSV6W5uMOvklxPc6RuZB/sAvx0gmW/Ajiuqs7rGbcjPfu1/ZEx+qp5vfu9i20cb1+OjuXXQG8Cvos23guBCyaYbFfgVe0Pg+vb/bZLu77R1ouB9bdztOvb5y1HRiTZPsln0pwAfgNwDHf9jG7ZM6+kwTE/3cn81J9O8lNVXVdVh1fVH9H8rc6maXnKqEl3BH5ZVb2Fz+iYe9d7O3e2du3KnUXvSG57A+t/NnpdR0++Gmv57bp7c+PI9NePs0x1xAJLd2iPxuxEzxGsEe3Ro1dV1W7AcuCVPU3e4x0pnOwIYm9/7SU0RyGvAX4NbN4T18Y0XT/6Xe5VNF9Uvcu+lamfkHpNG9PoZf18issBmnMJaLoDLAdI05/9dTStLNtU1dbAr2i6pUHzJXnfCRZ5MHBQklf0jFtDTzeH9st/dLeH3v032Tau97cA7nI1qgmsoedvnGRzmm4YG+oKmlaprXsem1fVqslioNm2MbUJ9qfAH/aMfgfN/npw+yPkOdz59xnxAJqjzJIGxPx0F+anIeWnqrqG5gqyO3LXFtWrgG2T9BY+o/8uvevdiGYfXEWzTy8dldu2rKr9xwnlXNbPV3dZfrvuq3qGHwBcVlU3jLuB6oQFlkhyryQHAJ8Bjhl1xGlkmgOS3K/9QrwBuK19QJMYdpvGqp+TZM/2i+2twPHVXCb3x8BmSZ6SZFPgTTRdE0ZcTdOHeLzP7yrg75PcJ8kW3Nkn/tapBNfGchzw9iRbJtmVpt/5MRPPObY2lmdxZ+vMljSJdR2wSZI30/RlH/FR4G1Jdk/jwUl6E8BVNH20/y7Jy9pxXwYelOSgtsvJXzNB0uljG88GHpPmPjFb0XRn6dfxwAFpTnK+G83fuIvvnI8AL03yx+1+uWf7WRnrSN5xwOuTbJNkZ+BvJ1n2f7F+F8AtgZuA65PsBLymd+L2vK+H0ZxQLqlj5qexmZ+AGcxPSd6Z5IFJNmlzzf8DfjKqWyRtV/TvAO9IslmaCzAdChzbM9nDkjy93QevoOni/j3gdOCGJK9Lc4Gmjdt1jndxptH5asRr2py3C/By4LM97z0WGPPiHOqWBdbCtjrJjTRHTd5I0xd4vJNHdwe+RvNj87vAf1TVqe177wDe1DZpv3oK6z8a+CRNE/5mwN/BHUfSXkbzBf5zmqNUvd0IPtc+X5vkrDGW+/F22d8CLgV+y+Q/rMfzt+36L6E5cvrpdvn9GrmK0000TfXb0vTBB/gfmi+6H7fv/Zb1m/bfQ5Ncvkrzo+FjwD16F972sd4XeF2SF7VH1g4G3kXT3WFP4AyaL/Apb2NVnUzz5XwuzdXyvtTvhlfVBTQJ9NM0Rwuv467dQaasqs6gOQ/rA+0yf0Jz0vhY3kKzby+l2Y9HT7L4o4Bntz/URubfm+bI7ZeBL4ya/qnAqVV1FZK6ZH6anPlp5vLT5sAJNF3rLqFpVXvqONMeAiylKTJPAP6xjXXEiTTnll1Hc27W09tzB2+jaUHci+azcQ3N52yrcbbhLOBXSf541Fsn0uyPs2nyVu/tDQ6huTCUBiyTnwcqaa5qj6JeCTy7qr4x7HjmgiSfpjl34It9THsacGhVnT/wwCRpHlmI+SnJEcD9quo5HS3vyTRX3D2oj2mXA8+tqmd0sW5NbDbdxE1SB9Jc0vU0mhOWX0PTZ34qNyJc0Krqr6Yw7egjh5KkcZifulVVX6VpRexn2tU0l4HXDLCLoDT/PIrmYg3X0HQ3OKjGvxSxJEkzxfykBcEugpIkSZLUEVuwJEmSJKkjc+IcrO22266WLl067DAkSTPkzDPPvKaqFk0+5exhrpKkhWW8XDUnCqylS5dyxhlnDDsMSdIMSfKzYccwVeYqSVpYxstVdhGUJEmSpI5YYEmSJElSRyywJEmSJKkjFliSJEmS1BELLEmSJEnqiAWWJEmSJHXEAkuSJEmSOmKBJUmSJEkdscCSJEmSpI5sMuwA1K3lq5ZPafrVh6weUCSSJGkhmMpvD393aCGwBUuSJEmSOmKBJUmSJEkdsYvgEMymbnw260uSJEndsQVLkiRJkjpigSVJkiRJHbHAkiRJkqSOWGBJkiRJUkcssCRJkiSpIxZYkiRJktSRgRZYSbZOcnySi5JcmORRSbZNcnKSi9vnbQYZgyRJkiTNlEG3YL0P+EpV3R94CHAhcDhwSlXtDpzSDkuSJEnSnDewAivJvYDHAB8DqKpbqup64EBgZTvZSuCgQcUgSZIkSTNpkC1YuwHrgE8k+UGSjya5J7BDVa0BaJ+3H2vmJIclOSPJGevWrRtgmJIkSZLUjUEWWJsAewMfqqqHAr9mCt0Bq+qoqlpWVcsWLVo0qBglSZIkqTODLLCuBK6sqtPa4eNpCq6rkywGaJ/XDjAGSZIkSZoxmwxqwVX1iyRXJNmjqn4E7Av8sH2sAI5sn08cVAzzxfJVy4cdgiRJkqQ+DKzAav0tcGySuwGXAC+gaTU7LsmhwOXAwQOOQZIkSZJmxEALrKo6G1g2xlv7DnK9kiRJkjQMg74PliRJkiQtGBZYkqQFLcnG7e1EvtQOb5vk5CQXt8/bDDtGSdLcYYElSVroXg5c2DN8OHBKVe0OnMIUbjEiSZIFliRpwUqyM/AU4KM9ow8EVravVwIHzXBYkqQ5zAJLkrSQvRd4LXB7z7gdqmoNQPu8/XgzJzksyRlJzli3bt1AA5UkzQ0WWJKkBSnJAcDaqjpzusuoqqOqallVLVu0aFGH0UmS5qpB3wdLkqTZah/gqUn2BzYD7pXkGODqJIurak2SxcDaoUYpSZpTbMGSJC1IVfX6qtq5qpYCzwK+XlXPAU4CVrSTrQBOHFKIkqQ5yAJLkqT1HQk8KcnFwJPaYUmS+mIXQUnSgldVpwKntq+vBfYdZjySpLnLFixJkiRJ6ogFliRJkiR1xAJLkiRJkjriOViSJEmaEctXLZ/S9KsPWT0rli1NhS1YkiRJktQRCyxJkiRJ6ogFliRJkiR1xAJLkiRJkjriRS4kSZJ0h6leLELS+mzBkiRJkqSOWGBJkiRJUkcssCRJkiSpIxZYkiRJktSRgV7kIsllwI3AbcCtVbUsybbAZ4GlwGXAM6rqukHGIUmSJEkzYSZasB5fVXtV1bJ2+HDglKraHTilHZYkSZKkOW8YXQQPBFa2r1cCBw0hBkmSJEnq3KALrAK+muTMJIe143aoqjUA7fP2A45BkiRJkmbEoG80vE9VXZVke+DkJBf1O2NbkB0GsGTJkkHF1wlvyCdJkiQJBtyCVVVXtc9rgROARwBXJ1kM0D6vHWfeo6pqWVUtW7Ro0SDDlCRJkqRODKzASnLPJFuOvAaeDJwPnASsaCdbAZw4qBgkSZIkaSYNsovgDsAJSUbW8+mq+kqS7wPHJTkUuBw4eIAxSJIkSdKMGViBVVWXAA8ZY/y1wL6DWq8kSZIkDcugL3IhSZKkjk3lAlurD1k9wEgGywuJaS4axn2wJEmSJGlessCSJEmSpI5YYEmSJElSRyywJEmSJKkjXuRCkiRJmsBUL7Yxly8sog1nC5YkSZIkdcQCS5IkSZI6YoElSZIkSR2xwJIkSZKkjlhgSZIkSVJHLLAkSZIkqSMWWJIkSZLUEQssSZIkSeqIBZYkSZIkdcQCS5K0YCXZLMnpSc5JckGSt7Tjt01ycpKL2+dthh2rJGlusMCSJC1kvwOeUFUPAfYC9kvySOBw4JSq2h04pR2WJGlSFliSpAWrGje1g5u2jwIOBFa241cCB818dJKkuWiTYQcgSdIwJdkYOBO4H/DBqjotyQ5VtQagqtYk2X6ceQ8DDgNYsmTJTIUsqQPLVy0fdgiap2zBkiQtaFV1W1XtBewMPCLJA6cw71FVtayqli1atGhgMUqS5g4LLEmSgKq6HjgV2A+4OsligPZ57fAikyTNJRZYkqQFK8miJFu3r+8BPBG4CDgJWNFOtgI4cSgBSpLmHM/BkiQtZIuBle15WBsBx1XVl5J8FzguyaHA5cDBwwxSkjR3WGBJkhasqjoXeOgY468F9p35iCRJc93Auwgm2TjJD5J8qR325o2SJEmS5qW+CqypXFFpDC8HLuwZ9uaNkqTObWCukiSpE/22YP1nktOTvGzkZOB+JNkZeArw0Z7R3rxRkjQI08pVkiR1qa8Cq6oeDTwb2AU4I8mnkzypj1nfC7wWuL1n3Ho3bwTGvXljkjOSnLFu3bp+wpQkLWAbkKskSepM3+dgVdXFwJuA1wGPBd6f5KIkTx9r+iQHAGur6szpBObNGyVJUzXVXCVJUtf6uopgkgcDL6Dp7ncysLyqzkqyI/Bd4AtjzLYP8NQk+wObAfdKcgztzRurao03b5QkdWWauUqSpE7124L1AeAs4CFV9ddVdRZAVV1Fc6TwLqrq9VW1c1UtBZ4FfL2qnoM3b5QkDcaUc5UkSV3r9z5Y+wM3V9VtAEk2Ajarqt9U1dFTXOeRePNGSVL3usxVkiRNS78F1teAJwI3tcObA18F/qSfmavqVODU9rU3b5QkDcIG5SppmJavWj7sECR1pN8ugptV1UjCon29+WBCkiRpWsxVkqSh67fA+nWSvUcGkjwMuHkwIUmSNC3mKknS0PXbRfAVwOeSXNUOLwaeOZCIJEmanldgrpIkDVlfBVZVfT/J/YE9gAAXVdXvBxqZJElTYK6SJM0G/bZgATwcWNrO89AkVNWnBhKVJEnTY66SJA1VvzcaPhq4L3A2cFs7ugCTliRpVjBXSZJmg35bsJYBe1ZVDTIYSZI2gLlKkjR0/V5F8HzgDwYZiCRJG8hcJUkaun5bsLYDfpjkdOB3IyOr6qkDiUqSpKkzV0mShq7fAuuIQQYhSVIHjhh2AJIEsHzV8oEte/Uhqwe2bHWj38u0fzPJrsDuVfW1JJsDGw82NEmS+meukiTNBn2dg5XkxcDxwIfbUTsBXxxQTJIkTZm5SpI0G/R7kYu/BvYBbgCoqouB7QcVlCRJ02CukiQNXb8F1u+q6paRgSSb0NxbRJKk2cJcJUkaun4vcvHNJG8A7pHkScDLAM+wW2CmesKmJ2FKmmHmKknS0PXbgnU4sA44D3gJ8F/AmwYVlCRJ02CukiQNXb9XEbwd+Ej7kCRp1jFXSZJmg74KrCSXMkY/9qrarfOIJEmaBnOVJGk26PccrGU9rzcDDga27T4cSZKmzVwlSRq6vs7Bqqprex4/r6r3Ak8YbGiSJPXPXCVJmg367SK4d8/gRjRHCbccSESSJE2DuUqSNBv020XwX3te3wpcBjyj82gkSZo+c5Ukaej6vYrg4wcdiCRJG8JcJUmaDfrtIvjKid6vqvd0E44kSdNjrpLGtnzV8mGHIC0oU7mK4MOBk9rh5cC3gCvGmyHJZu00d2/Xc3xV/WOSbYHPAktpu29U1XXTCX6Q/DKSpDlnyrlKkqSu9VtgbQfsXVU3AiQ5AvhcVb1ognl+Bzyhqm5Ksinw7ST/DTwdOKWqjkxyOHA48Lppb4EkSY3p5CpJkjrV12XagSXALT3Dt9C0QI2rGje1g5u2jwIOBFa241cCB/UZgyRJE5lyrpIkqWv9tmAdDZye5ASaIulpwKcmmynJxsCZwP2AD1bVaUl2qKo1AFW1Jsn248x7GHAYwJIlS/oMU5K0gE0rV0mS1KV+ryL49rZ735+2o15QVT/oY77bgL2SbA2ckOSB/QZWVUcBRwEsW7as+p1PkrQwTTdXSZLUpX67CAJsDtxQVe8Drkxyn35nrKrrgVOB/YCrkywGaJ/XTiEGSZImMqVclWSXJN9IcmGSC5K8vB2/bZKTk1zcPm8zE8FLkua+fi/T/o80V2faA/gEzflUxwD7TDDPIuD3VXV9knsATwTeSXN1pxXAke3ziRuyAZq9BnklxtWHrB7YsiXNTdPJVTQ3JH5VVZ2VZEvgzCQnA8/HCzJJkqah33OwngY8FDgLoKquahPRRBYDK9vzsDYCjquqLyX5LnBckkOBy4GDpxe6JEnrmXKuas8JHjkv+MYkFwI70VyQ6XHtZCtpemFYYEmSJtVvgXVLVVWSAkhyz8lmqKpzaRLd6PHXAvtOKUpJkiY35VzVK8lSmrx1GuAFmSRJ09LvOVjHJfkwsHWSFwNfAz4yuLAkSZqyaeeqJFsAnwdeUVU39LvCqjqqqpZV1bJFixZNK2hJ0vwyaQtWkgCfBe4P3EDTt/3NVXXygGOTJKkvG5KrkmxKU1wdW1VfaEdfnWRx23rlBZkkSX2btMBqu1t8saoeBlhUSZJmnenmqrYw+xhwYVW9p+ctL8gkSZqWfrsIfi/JwwcaiSRJG2Y6uWof4LnAE5Kc3T72pymsnpTkYuBJ7bAkSZPq9yIXjwdemuQy4NdAaA4YPnhQgUmSNEVTzlVV9e12urF4QSZJ0pRNWGAlWVJVlwN/PkPxSJI0JeYqSdJsMlkL1heBvavqZ0k+X1V/MQMxSZI0FV/EXCVJmiUmOwert9vEboMMRJKkaTJXSZJmjclasGqc15IkzRbmKs1Ky1ctH3YIkoZgsgLrIUluoDk6eI/2Ndx54vC9BhqdJEmTM1dJkmaNCQusqtp4pgKRJGk6zFWSpNmk3/tgSZIkSZImYYElSZIkSR2xwJIkSZKkjlhgSZIkSVJHLLAkSZIkqSMWWJIkSZLUEQssSZIkSeqIBZYkSZIkdcQCS5IkSZI6YoElSZIkSR2xwJIkSZKkjmwy7AAkSZIk9Wf5quVTmn71IasHFInGM7ACK8kuwKeAPwBuB46qqvcl2Rb4LLAUuAx4RlVdN6g4ND/55SJJkqTZaJBdBG8FXlVVDwAeCfx1kj2Bw4FTqmp34JR2WJIkSZLmvIEVWFW1pqrOal/fCFwI7AQcCKxsJ1sJHDSoGCRJkiRpJs3IRS6SLAUeCpwG7FBVa6ApwoDtZyIGSZIkSRq0gV/kIskWwOeBV1TVDUn6ne8w4DCAJUuWDC5ASZKkPkz1/F9JC9NAW7CSbEpTXB1bVV9oR1+dZHH7/mJg7VjzVtVRVbWsqpYtWrRokGFKkiRJUicGVmClaar6GHBhVb2n562TgBXt6xXAiYOKQZIkSZJm0iC7CO4DPBc4L8nZ7bg3AEcCxyU5FLgcOHiAMUjA1Lp1eEl3SZIkTdfACqyq+jYw3glX+w5qvZIkSZIaHmSeeTNyFUFJkiRJWggssCRJkiSpIxZYkiRJktQRCyxJkiRJ6sjAbzQ8W3hzQEmSJEmDZguWJEmSJHXEAkuSJEmSOmKBJUmSJEkdscCSJEmSpI5YYEmSJElSRyywJEkLVpKPJ1mb5PyecdsmOTnJxe3zNsOMUZI0t1hgSZIWsk8C+40adzhwSlXtDpzSDkuS1BcLLEnSglVV3wJ+OWr0gcDK9vVK4KCZjEmSNLctmBsNS5LUpx2qag1AVa1Jsv14EyY5DDgMYMmSJTMUniQNxvJVy6c0/epDVg8okrnNFixJkqapqo6qqmVVtWzRokXDDkeSNAtYYEmStL6rkywGaJ/XDjkeSdIcYoElSdL6TgJWtK9XACcOMRZJ0hxjgSVJWrCSrAK+C+yR5MokhwJHAk9KcjHwpHZYkqS+eJELSdKCVVWHjPPWvjMaiIZmqif1S9JkbMGSJEmSpI5YYEmSJElSRyywJEmSJKkjFliSJEmS1BELLEmSJEnqyMAKrCQfT7I2yfk947ZNcnKSi9vnbQa1fkmSJEmaaYNswfoksN+ocYcDp1TV7sAp7bAkSZIkzQsDK7Cq6lvAL0eNPhBY2b5eCRw0qPVLkiRJ0kyb6XOwdqiqNQDt8/bjTZjksCRnJDlj3bp1MxagJEmSJE3XrL3IRVUdVVXLqmrZokWLhh2OJEmSJE1qpgusq5MsBmif187w+iVJkiRpYGa6wDoJWNG+XgGcOMPrlyRJkqSBGeRl2lcB3wX2SHJlkkOBI4EnJbkYeFI7LEmSJEnzwiaDWnBVHTLOW/sOap2SJEmSZsbyVcsHtuzVh6we2LIHbdZe5EKSJEmS5hoLLEmSJEnqiAWWJEmSJHXEAkuSJEmSOjKwi1xIkiRJ0nRM9QIas+miGLZgSZIkSVJHLLAkSZIkqSN2EZQ20FSasGdT87UkSZK6Z4ElSZLmjUHe+FSS+mEXQUmSJEnqiAWWJEmSJHXEAkuSJEmSOmKBJUmSJEkd8SIXkiRpRnkhCknzmQWWNIPm8l3JJUmSNDm7CEqSJElSRyywJEmSJKkjdhGURvHcAEmSJE2XBZYkSdogHpiSNGxT+R4a9DnudhGUJEmSpI7YgiXNI7PlKLJXP5QkSQuVLViSJEmS1BFbsCRJmiVm0zkEs6VFXJLmGluwJEmSJKkjQ2nBSrIf8D5gY+CjVXXkMOKQZjuPIGs2mOrncL6cg2eukiRNx4y3YCXZGPgg8OfAnsAhSfac6TgkSRqPuUqSNF3D6CL4COAnVXVJVd0CfAY4cAhxSJI0HnOVJGlahtFFcCfgip7hK4E/Hj1RksOAw9rBm5L8aAZim6rtgGuGHcSAzNdtm6/bBbNo2/JX6XqRs2bbBmDebVv799/Q7dq1m2imbdbnqin+n827z1nH3D8Tc/9MzP0zuVm1jzr8nTJmrhpGgTXWFtVdRlQdBRw1+HCmL8kZVbVs2HEMwnzdtvm6XeC2zVXzddvmwXbNm1wF8+LvMVDun4m5fybm/pncQttHw+gieCWwS8/wzsBVQ4hDkqTxmKskSdMyjALr+8DuSe6T5G7As4CThhCHJEnjMVdJkqZlxrsIVtWtSf4G+B+aS99+vKoumOk4OjLru4VsgPm6bfN1u8Btm6vm67bN6e2aZ7kK5vjfYwa4fybm/pmY+2dyC2ofpeouXcolSZIkSdMwjC6CkiRJkjQvWWBJkiRJUkcssKYhyS5JvpHkwiQXJHn5sGPqUpKNk/wgyZeGHUuXkmyd5PgkF7V/u0cNO6auJPn79rN4fpJVSTYbdkzTleTjSdYmOb9n3LZJTk5ycfu8zTBjnI5xtuvd7efx3CQnJNl6iCFO21jb1vPeq5NUku2GEdt8lGS/JD9K8pMkh4/xfpK8v33/3CR7TzbvfPgf6zWgfXREkp8nObt97D9T29O1Ddw/Y/6/z6fP0ID2z4L//GSC38/z6fMDQFX5mOIDWAzs3b7eEvgxsOew4+pw+14JfBr40rBj6Xi7VgIval/fDdh62DF1tF07AZcC92iHjwOeP+y4NmB7HgPsDZzfM+5dwOHt68OBdw47zo6268nAJu3rd87F7Rpv29rxu9BcJOJnwHbDjnM+PGguuPFTYLf2e+yc0fkH2B/4b5p7eT0SOG2yeefD/9gM7KMjgFcPe/uGuX/a98b7f58Xn6EB7p8F//lhgt/P8+XzM/KwBWsaqmpNVZ3Vvr4RuJDmR+6cl2Rn4CnAR4cdS5eS3IvmS+9jAFV1S1VdP9SgurUJcI8kmwCbM4fv11NV3wJ+OWr0gTQFMu3zQTMZUxfG2q6q+mpV3doOfo/mXktzzjh/M4B/A17LGDfo1bQ9AvhJVV1SVbcAn6H5/+h1IPCpanwP2DrJ4knmnfP/Yz0GtY/miw3ZPxP9v8+Xz9Cg9s98Me39M8nv5/ny+QHsIrjBkiwFHgqcNuRQuvJemh9Etw85jq7tBqwDPpGm++NHk9xz2EF1oap+DvwLcDmwBvhVVX11uFF1boeqWgPNAQ5g+yHHMwgvpDniNy8keSrw86o6Z9ixzDM7AVf0DF/JXQ/wjTfNRPPOp/+xQe0jgL9puzx9fA53YdqQ/TOR+fIZGtT+AT8/dxjj9/N8+fwAFlgbJMkWwOeBV1TVDcOOZ0MlOQBYW1VnDjuWAdiEpsn+Q1X1UODXNE3Qc177JX0gcB9gR+CeSZ4z3Kg0FUneCNwKHDvsWLqQZHPgjcCbhx3LPJQxxo1uIRxvmn7mnQ8GtY8+BNwX2IvmYNa/TjO+YduQ/bMQDGr/+PkZeXOe/X4eiwXWNCXZlObDcWxVfWHY8XRkH+CpSS6jafJ9QpJjhhtSZ64ErqyqkSMlx9MUXPPBE4FLq2pdVf0e+ALwJ0OOqWtXj3S/aJ/XDjmeziRZARwAPLvazufzwH1pCv5z2u+TnYGzkvzBUKOaH66kObdtxM7ctUvweNNMNO98+h8byD6qqqur6raquh34CE1XqbloQ/bPRObLZ2gg+8fPTzPNBL+f58vnB7DAmpYkoTmX58Kqes+w4+lKVb2+qnauqqXAs4CvV9W8aAmpql8AVyTZox21L/DDIYbUpcuBRybZvP1s7kvTr3k+OQlY0b5eAZw4xFg6k2Q/4HXAU6vqN8OOpytVdV5VbV9VS9vvkytpTmz+xZBDmw++D+ye5D5J7kbzXX3SqGlOAp7XXsnrkTTdhtdMMu98+h8byD4a+fHXehpwl6tmzhEbsn8mMl8+QwPZP35+as0kv5/ny+enMZNX1JgvD+DRNE2d5wJnt4/9hx1Xx9v4OObfVQT3As5o/25fBLYZdkwdbttbgItovrCPBu4+7Jg2YFtW0XSf+D3ND/NDgXsDpwAXt8/bDjvOjrbrJzT91Ee+R/5z2HF2tW2j3r8MryLY5f7en+bqWz8F3tiOeynw0vZ1gA+2758HLJto3nb8nP8fm4F9dHQ77bk0PwYXD3s7h7R/xvx/n0+foQHtnwX/+WGC38/z6fNTVaTdKEmSJEnSBrKLoCRJkiR1xAJLkiRJkjpigSVJkiRJHbHAkiRJkqSOWGBJkiRJUkcssDTvJLktydlJzklyVpJp3XQ3ySeT/GXX8W2oJI9L8qVR47ZPcmnvjVyT/EeSw5O8NckTJ1nmmNs61rp63ntoko9OstwHJfnkhBskSQvIQsxR7fjNkxyb5Lwk5yf5dpIt2vdumoG43pvkMe3ry5JsN8Y0f5PkBYOORfPfJsMOQBqAm6tqL4Akfwa8A3jsTAaQZJOqunWm1ldVa5O8E/gX4DlJ9qa538TDqur3A1rtG4B/miSu85LsnGRJVV0+oDgkaS5ZcDmq9XLg6qp6UBvDHjT3ihq4JNsCj6yqV0wy6ceB/wM+MfCgNK/ZgqX57l7AdQBJtkhySnvE8LwkB45MlOR5Sc5tjygePXohSd7WHi3cKMn+SS5qj769f+RIXZIjkhyV5KvAp5Ls2q7v3PZ5STvdekcdR47ctUf9Tk1yfLv8Y9u7npNkv5F1Ak8fZ1uPAu6b5PHAB4C/qarf964vycOSfDPJmUn+Z9Sd5UfimXRdSbYEHlxV57TDj0jynSQ/aJ/36Jl8Nc2d3iVJ61tIOWox8PORgar6UVX9btR2JMm72xau85I8s2fd30pyQpIfJvnPJBu17z05yXfb/fa5tK1io/wl8JVR416T5PT2cb82pt8AlyV5xDjbIPXFFizNR/dIcjawGc0X+hPa8b8FnlZVN6TpGvC9JCcBewJvBPapqmvaI113SPIuYCvgBcDdgQ8Dj6mqS5OsGrXuhwGPrqqbk6wGPlVVK5O8EHg/cNAksT8U+CPgKpqjaPskOQP4SLsdPwE+O9aMVXV7kv8HfB04qaq+NWo7NgX+HTiwqta1ievtwAt7ptmsn3UBy4Dze4Yvotknt6bpjvjPwF+0750BHA68a5Jtl6SFYEHmKJrWoa+2xdspwMqqunjUNE8H9gIeAmwHfD/JSC57RLsvfkZTLD09yanAm4AnVtWvk7wOeCXw1lHL3Qc4ftS4G6rqEUmeB7wXOKAdfwbwp8DpE+4JaQK2YGk+urmq9qqq+wP70RypCxDgn5OcC3wN2AnYgSYpHF9V1wBU1S97lvUPwNZV9ZKqKuD+wCVVdWn7/ujkdVJV3dy+fhTw6fb10TRd9iZzelVdWVW3A2cDS9t1XlpVF7cxHDPezFV1Nk3h8x9jvL0H8EDg5Da5vwnYedQ0/a5rMbCuZ3gr4HNJzgf+jSYBj1gL7DhezJK0wCzIHNXmp92AdwPb0hRPDxg12aOBVVV1W1VdDXwTeHjPui+pqtva7Xo08Eiaouv/2ry2Ath1jNWPzllw575ZRbMvRpiztMFswdK8VlXfbY8ELgL2b58f1nadu4zmCGKAGmcR3wcelmTbNqllklX+eqJw2udbaQ9utEn1bj3T9HaXuI07/0fHi28st7eP0QJcUFWPGuO9seKcyM00+27E24BvVNXTkiwFTu15b7N2eklSj4WWo6rqJuALwBeS3E6zzRf2TDJR/KPXUe30J1fVIZOsenTOGr283tfmLG0wW7A0ryW5P7AxcC1NK8vaNnE9njuPcp0CPCPJvdt5ertffAU4Evhye97RRcBubREB8MwJVv8d7jz36NnAt9vXl9F00wA4ENh0ks24CLhPkvu2w5MlkvH8CFiU5FHQdBlM8kejpul3XRcC9+sZ3oo7+9Y/f9S0f8j63QklSSysHJVknyTbtK/vxp3d/Xp9C3hmko2TLAIew51d9R6R5D7tuVfPbOP9Hk03xfu1y908yR+OsfrROQvu3DfPBL7bM96cpQ1mC5bmo5H+7dAc3VpRVbclORZY3fYXP5smKVBVFyR5O/DNJLcBP6CnSKiqz7WJ6ySao20vA76S5Bom7qP9d8DHk7yGpmvCyKVfPwKcmOR0msQ50RFFquq3SQ6jSaDX0CSVB/a1J9Zfzi1t3/f3J9mK5v//vcAFU11XVV2UZKskW1bVjTTnV61M8kqac8B6PR748lTjlaR5aqHmqPsCH2pbxTaiyQufHzXNCTTd9c6haVV6bVX9oi1Ev0tTTD6IphA7oT33+PnAqiR3b5fxJuDHo5b7ZeAlQO+tRe6e5LQ2lt6icB/gLRNtszSZNN1lJfUryRZVdVObJD4IXFxV/zbsuGZakr8Hbqyqce+F1Sa8b9KcVD3TlwSWpAVnPuaoJI8DXl1VB0wy6UTL+DZwQFVdP8E0DwVeWVXPne56JLCLoDQdL26PPl5A06Xjw8MNZ2g+xPr98ceyBDjc4kqSZow5amyvoslJE9mO5sIh0gaxBUuSJEmSOmILliRJkiR1xAJLkiRJkjpigSVJkiRJHbHAkiRJkqSOWGBJkiRJUkf+P+dmMloao651AAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 864x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionBE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_2idpass_BE_hist5;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    # Breit-Wigner (Cauchy PDF)\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    # Gaussian (Normal distribution)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    # Convolution approximation (pointwise multiplication, normalize after)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    # a: Exponential normalization (background yield)\n",
    "    # b: Exponential slope (background decay)\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    # Signal model\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield  # Scale signal by signal yield\n",
    "\n",
    "    # Exponential background model (with varying slope)\n",
    "    background = exponential_background(x, a, b)\n",
    "    \n",
    "    # Combine signal and background\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)  \n",
    "signal_fraction_guess = 0.95  # Increase signal fraction guess (e.g., 0.95 or 0.9)\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters (signal and background yield fixed)\n",
    "initial_params = [\n",
    "    91.1876,  # m: Breit-Wigner mass\n",
    "    2.4952,   # gamma: Breit-Wigner width\n",
    "    91.0,     # mu: Gaussian mean\n",
    "    2.0,      # sigma: Gaussian standard deviation\n",
    "    1.0,      # a: Exponential constant term (background normalization)\n",
    "    -0.01,    # b: Exponential slope (background decay)\n",
    "    signal_yield_guess,   # sig_yield: Signal yield\n",
    "]\n",
    "\n",
    "# Bounds for Parameters (background yield and slope are allowed to vary)\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],  # Lower bounds\n",
    "    [94, 5.5, 94, 5.0, np.inf, 1.0, total_yield * 1.5]  # Upper bounds\n",
    ")\n",
    "\n",
    "# Plotting histograms for each fit parameter\n",
    "# Number of bootstrap iterations\n",
    "n_bootstrap = 500\n",
    "\n",
    "# Arrays to store fitted parameters\n",
    "signal_params = []  # For signal-related parameters (m, gamma, mu, sigma, sig_yield)\n",
    "background_params = []  # For background-related parameters (a, b)\n",
    "\n",
    "# Perform bootstrapping\n",
    "for _ in range(n_bootstrap):\n",
    "    # Generate a resampled histogram with replacement\n",
    "    resampled_y_data = np.random.poisson(y_data)  # Resample assuming Poisson statistics\n",
    "\n",
    "    try:\n",
    "        # Fit the resampled data\n",
    "        popt_resampled, _ = curve_fit(\n",
    "            fit_function, x_data, resampled_y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    "        )\n",
    "        \n",
    "        # Store signal parameters\n",
    "        signal_params.append(popt_resampled[:5])  # m, gamma, mu, sigma, sig_yield\n",
    "        \n",
    "        # Store background parameters\n",
    "        background_params.append(popt_resampled[4:6])  # a, b\n",
    "    \n",
    "    except RuntimeError:\n",
    "        # Skip fits that fail to converge\n",
    "        continue\n",
    "        \n",
    "        \n",
    "signal_params = np.array(signal_params)\n",
    "background_params = np.array(background_params)\n",
    "\n",
    "\n",
    "# Plotting signal parameter distributions\n",
    "plt.figure(figsize=(12, 8))\n",
    "signal_labels = [\"Mean (m)\", \"Gamma (gamma)\", \"Mu (mu)\", \"Sigma (sigma)\", \"Signal Yield\"]\n",
    "for i, param in enumerate(signal_labels):\n",
    "    plt.subplot(3, 2, i + 1)\n",
    "    plt.hist(signal_params[:, i], bins=30, color='blue', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n",
    "# Plotting background parameter distributions\n",
    "plt.figure(figsize=(12, 4))\n",
    "background_labels = [\"Background Yield (a)\", \"Background Slope (b)\"]\n",
    "for i, param in enumerate(background_labels):\n",
    "    plt.subplot(1, 2, i + 1)\n",
    "    plt.hist(background_params[:, i], bins=30, color='green', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "3cee3338",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 5 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionBE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_2idpass_BE_hist6;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    # Breit-Wigner (Cauchy PDF)\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    # Gaussian (Normal distribution)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    # Convolution approximation (pointwise multiplication, normalize after)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    # a: Exponential normalization (background yield)\n",
    "    # b: Exponential slope (background decay)\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    # Signal model\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield  # Scale signal by signal yield\n",
    "\n",
    "    # Exponential background model (with varying slope)\n",
    "    background = exponential_background(x, a, b)\n",
    "    \n",
    "    # Combine signal and background\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)  \n",
    "signal_fraction_guess = 0.95  # Increase signal fraction guess (e.g., 0.95 or 0.9)\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters (signal and background yield fixed)\n",
    "initial_params = [\n",
    "    91.1876,  # m: Breit-Wigner mass\n",
    "    2.4952,   # gamma: Breit-Wigner width\n",
    "    91.0,     # mu: Gaussian mean\n",
    "    2.0,      # sigma: Gaussian standard deviation\n",
    "    1.0,      # a: Exponential constant term (background normalization)\n",
    "    -0.01,    # b: Exponential slope (background decay)\n",
    "    signal_yield_guess,   # sig_yield: Signal yield\n",
    "]\n",
    "\n",
    "# Bounds for Parameters (background yield and slope are allowed to vary)\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],  # Lower bounds\n",
    "    [94, 5.5, 94, 5.0, np.inf, 1.0, total_yield * 1.5]  # Upper bounds\n",
    ")\n",
    "\n",
    "# Plotting histograms for each fit parameter\n",
    "# Number of bootstrap iterations\n",
    "n_bootstrap = 500\n",
    "\n",
    "# Arrays to store fitted parameters\n",
    "signal_params = []  # For signal-related parameters (m, gamma, mu, sigma, sig_yield)\n",
    "background_params = []  # For background-related parameters (a, b)\n",
    "\n",
    "# Perform bootstrapping\n",
    "for _ in range(n_bootstrap):\n",
    "    # Generate a resampled histogram with replacement\n",
    "    resampled_y_data = np.random.poisson(y_data)  # Resample assuming Poisson statistics\n",
    "\n",
    "    try:\n",
    "        # Fit the resampled data\n",
    "        popt_resampled, _ = curve_fit(\n",
    "            fit_function, x_data, resampled_y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    "        )\n",
    "        \n",
    "        # Store signal parameters\n",
    "        signal_params.append(popt_resampled[:5])  # m, gamma, mu, sigma, sig_yield\n",
    "        \n",
    "        # Store background parameters\n",
    "        background_params.append(popt_resampled[4:6])  # a, b\n",
    "    \n",
    "    except RuntimeError:\n",
    "        # Skip fits that fail to converge\n",
    "        continue\n",
    "        \n",
    "        \n",
    "signal_params = np.array(signal_params)\n",
    "background_params = np.array(background_params)\n",
    "\n",
    "\n",
    "# Plotting signal parameter distributions\n",
    "plt.figure(figsize=(12, 8))\n",
    "signal_labels = [\"Mean (m)\", \"Gamma (gamma)\", \"Mu (mu)\", \"Sigma (sigma)\", \"Signal Yield\"]\n",
    "for i, param in enumerate(signal_labels):\n",
    "    plt.subplot(3, 2, i + 1)\n",
    "    plt.hist(signal_params[:, i], bins=30, color='blue', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n",
    "# Plotting background parameter distributions\n",
    "plt.figure(figsize=(12, 4))\n",
    "background_labels = [\"Background Yield (a)\", \"Background Slope (b)\"]\n",
    "for i, param in enumerate(background_labels):\n",
    "    plt.subplot(1, 2, i + 1)\n",
    "    plt.hist(background_params[:, i], bins=30, color='green', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "be40fe0a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 5 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 864x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionBE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_1idpass_BE_hist4;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    # Breit-Wigner (Cauchy PDF)\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    # Gaussian (Normal distribution)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    # Convolution approximation (pointwise multiplication, normalize after)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    # a: Exponential normalization (background yield)\n",
    "    # b: Exponential slope (background decay)\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    # Signal model\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield  # Scale signal by signal yield\n",
    "\n",
    "    # Exponential background model (with varying slope)\n",
    "    background = exponential_background(x, a, b)\n",
    "    \n",
    "    # Combine signal and background\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)  \n",
    "signal_fraction_guess = 0.95  # Increase signal fraction guess (e.g., 0.95 or 0.9)\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters (signal and background yield fixed)\n",
    "initial_params = [\n",
    "    91.1876,  # m: Breit-Wigner mass\n",
    "    2.4952,   # gamma: Breit-Wigner width\n",
    "    91.0,     # mu: Gaussian mean\n",
    "    2.0,      # sigma: Gaussian standard deviation\n",
    "    1.0,      # a: Exponential constant term (background normalization)\n",
    "    -0.01,    # b: Exponential slope (background decay)\n",
    "    signal_yield_guess,   # sig_yield: Signal yield\n",
    "]\n",
    "\n",
    "# Bounds for Parameters (background yield and slope are allowed to vary)\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],  # Lower bounds\n",
    "    [94, 5.5, 94, 5.0, np.inf, 1.0, total_yield * 1.5]  # Upper bounds\n",
    ")\n",
    "\n",
    "# Plotting histograms for each fit parameter\n",
    "# Number of bootstrap iterations\n",
    "n_bootstrap = 500\n",
    "\n",
    "# Arrays to store fitted parameters\n",
    "signal_params = []  # For signal-related parameters (m, gamma, mu, sigma, sig_yield)\n",
    "background_params = []  # For background-related parameters (a, b)\n",
    "\n",
    "# Perform bootstrapping\n",
    "for _ in range(n_bootstrap):\n",
    "    # Generate a resampled histogram with replacement\n",
    "    resampled_y_data = np.random.poisson(y_data)  # Resample assuming Poisson statistics\n",
    "\n",
    "    try:\n",
    "        # Fit the resampled data\n",
    "        popt_resampled, _ = curve_fit(\n",
    "            fit_function, x_data, resampled_y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    "        )\n",
    "        \n",
    "        # Store signal parameters\n",
    "        signal_params.append(popt_resampled[:5])  # m, gamma, mu, sigma, sig_yield\n",
    "        \n",
    "        # Store background parameters\n",
    "        background_params.append(popt_resampled[4:6])  # a, b\n",
    "    \n",
    "    except RuntimeError:\n",
    "        # Skip fits that fail to converge\n",
    "        continue\n",
    "        \n",
    "        \n",
    "signal_params = np.array(signal_params)\n",
    "background_params = np.array(background_params)\n",
    "\n",
    "\n",
    "# Plotting signal parameter distributions\n",
    "plt.figure(figsize=(12, 8))\n",
    "signal_labels = [\"Mean (m)\", \"Gamma (gamma)\", \"Mu (mu)\", \"Sigma (sigma)\", \"Signal Yield\"]\n",
    "for i, param in enumerate(signal_labels):\n",
    "    plt.subplot(3, 2, i + 1)\n",
    "    plt.hist(signal_params[:, i], bins=30, color='blue', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n",
    "# Plotting background parameter distributions\n",
    "plt.figure(figsize=(12, 4))\n",
    "background_labels = [\"Background Yield (a)\", \"Background Slope (b)\"]\n",
    "for i, param in enumerate(background_labels):\n",
    "    plt.subplot(1, 2, i + 1)\n",
    "    plt.hist(background_params[:, i], bins=30, color='green', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "8d5c0759",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 5 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionBE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_1idpass_BE_hist5;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    # Breit-Wigner (Cauchy PDF)\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    # Gaussian (Normal distribution)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    # Convolution approximation (pointwise multiplication, normalize after)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    # a: Exponential normalization (background yield)\n",
    "    # b: Exponential slope (background decay)\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    # Signal model\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield  # Scale signal by signal yield\n",
    "\n",
    "    # Exponential background model (with varying slope)\n",
    "    background = exponential_background(x, a, b)\n",
    "    \n",
    "    # Combine signal and background\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)  \n",
    "signal_fraction_guess = 0.95  # Increase signal fraction guess (e.g., 0.95 or 0.9)\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters (signal and background yield fixed)\n",
    "initial_params = [\n",
    "    91.1876,  # m: Breit-Wigner mass\n",
    "    2.4952,   # gamma: Breit-Wigner width\n",
    "    91.0,     # mu: Gaussian mean\n",
    "    2.0,      # sigma: Gaussian standard deviation\n",
    "    1.0,      # a: Exponential constant term (background normalization)\n",
    "    -0.01,    # b: Exponential slope (background decay)\n",
    "    signal_yield_guess,   # sig_yield: Signal yield\n",
    "]\n",
    "\n",
    "# Bounds for Parameters (background yield and slope are allowed to vary)\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],  # Lower bounds\n",
    "    [94, 5.5, 94, 5.0, np.inf, 1.0, total_yield * 1.5]  # Upper bounds\n",
    ")\n",
    "\n",
    "# Plotting histograms for each fit parameter\n",
    "# Number of bootstrap iterations\n",
    "n_bootstrap = 500\n",
    "\n",
    "# Arrays to store fitted parameters\n",
    "signal_params = []  # For signal-related parameters (m, gamma, mu, sigma, sig_yield)\n",
    "background_params = []  # For background-related parameters (a, b)\n",
    "\n",
    "# Perform bootstrapping\n",
    "for _ in range(n_bootstrap):\n",
    "    # Generate a resampled histogram with replacement\n",
    "    resampled_y_data = np.random.poisson(y_data)  # Resample assuming Poisson statistics\n",
    "\n",
    "    try:\n",
    "        # Fit the resampled data\n",
    "        popt_resampled, _ = curve_fit(\n",
    "            fit_function, x_data, resampled_y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    "        )\n",
    "        \n",
    "        # Store signal parameters\n",
    "        signal_params.append(popt_resampled[:5])  # m, gamma, mu, sigma, sig_yield\n",
    "        \n",
    "        # Store background parameters\n",
    "        background_params.append(popt_resampled[4:6])  # a, b\n",
    "    \n",
    "    except RuntimeError:\n",
    "        # Skip fits that fail to converge\n",
    "        continue\n",
    "        \n",
    "        \n",
    "signal_params = np.array(signal_params)\n",
    "background_params = np.array(background_params)\n",
    "\n",
    "\n",
    "# Plotting signal parameter distributions\n",
    "plt.figure(figsize=(12, 8))\n",
    "signal_labels = [\"Mean (m)\", \"Gamma (gamma)\", \"Mu (mu)\", \"Sigma (sigma)\", \"Signal Yield\"]\n",
    "for i, param in enumerate(signal_labels):\n",
    "    plt.subplot(3, 2, i + 1)\n",
    "    plt.hist(signal_params[:, i], bins=30, color='blue', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n",
    "# Plotting background parameter distributions\n",
    "plt.figure(figsize=(12, 4))\n",
    "background_labels = [\"Background Yield (a)\", \"Background Slope (b)\"]\n",
    "for i, param in enumerate(background_labels):\n",
    "    plt.subplot(1, 2, i + 1)\n",
    "    plt.hist(background_params[:, i], bins=30, color='green', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "3dacef6e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 5 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionBE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_1idpass_BE_hist6;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    # Breit-Wigner (Cauchy PDF)\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    # Gaussian (Normal distribution)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    # Convolution approximation (pointwise multiplication, normalize after)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    # a: Exponential normalization (background yield)\n",
    "    # b: Exponential slope (background decay)\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    # Signal model\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield  # Scale signal by signal yield\n",
    "\n",
    "    # Exponential background model (with varying slope)\n",
    "    background = exponential_background(x, a, b)\n",
    "    \n",
    "    # Combine signal and background\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)  \n",
    "signal_fraction_guess = 0.95  # Increase signal fraction guess (e.g., 0.95 or 0.9)\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters (signal and background yield fixed)\n",
    "initial_params = [\n",
    "    91.1876,  # m: Breit-Wigner mass\n",
    "    2.4952,   # gamma: Breit-Wigner width\n",
    "    91.0,     # mu: Gaussian mean\n",
    "    2.0,      # sigma: Gaussian standard deviation\n",
    "    1.0,      # a: Exponential constant term (background normalization)\n",
    "    -0.01,    # b: Exponential slope (background decay)\n",
    "    signal_yield_guess,   # sig_yield: Signal yield\n",
    "]\n",
    "\n",
    "# Bounds for Parameters (background yield and slope are allowed to vary)\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],  # Lower bounds\n",
    "    [94, 5.5, 94, 5.0, np.inf, 1.0, total_yield * 1.5]  # Upper bounds\n",
    ")\n",
    "\n",
    "# Plotting histograms for each fit parameter\n",
    "# Number of bootstrap iterations\n",
    "n_bootstrap = 500\n",
    "\n",
    "# Arrays to store fitted parameters\n",
    "signal_params = []  # For signal-related parameters (m, gamma, mu, sigma, sig_yield)\n",
    "background_params = []  # For background-related parameters (a, b)\n",
    "\n",
    "# Perform bootstrapping\n",
    "for _ in range(n_bootstrap):\n",
    "    # Generate a resampled histogram with replacement\n",
    "    resampled_y_data = np.random.poisson(y_data)  # Resample assuming Poisson statistics\n",
    "\n",
    "    try:\n",
    "        # Fit the resampled data\n",
    "        popt_resampled, _ = curve_fit(\n",
    "            fit_function, x_data, resampled_y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    "        )\n",
    "        \n",
    "        # Store signal parameters\n",
    "        signal_params.append(popt_resampled[:5])  # m, gamma, mu, sigma, sig_yield\n",
    "        \n",
    "        # Store background parameters\n",
    "        background_params.append(popt_resampled[4:6])  # a, b\n",
    "    \n",
    "    except RuntimeError:\n",
    "        # Skip fits that fail to converge\n",
    "        continue\n",
    "        \n",
    "        \n",
    "signal_params = np.array(signal_params)\n",
    "background_params = np.array(background_params)\n",
    "\n",
    "\n",
    "# Plotting signal parameter distributions\n",
    "plt.figure(figsize=(12, 8))\n",
    "signal_labels = [\"Mean (m)\", \"Gamma (gamma)\", \"Mu (mu)\", \"Sigma (sigma)\", \"Signal Yield\"]\n",
    "for i, param in enumerate(signal_labels):\n",
    "    plt.subplot(3, 2, i + 1)\n",
    "    plt.hist(signal_params[:, i], bins=30, color='blue', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n",
    "# Plotting background parameter distributions\n",
    "plt.figure(figsize=(12, 4))\n",
    "background_labels = [\"Background Yield (a)\", \"Background Slope (b)\"]\n",
    "for i, param in enumerate(background_labels):\n",
    "    plt.subplot(1, 2, i + 1)\n",
    "    plt.hist(background_params[:, i], bins=30, color='green', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "94230476",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
