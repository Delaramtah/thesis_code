{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "34d26018",
   "metadata": {},
   "outputs": [],
   "source": [
    "# We can use the Run 361971 from LHC Fill 8387 see (requires certificate) https://cmsoms.cern.ch/cms/fills/report?cms_fill=8387\n",
    "# we need these files: https://cmsweb.cern.ch/das/request?view=list&limit=50&instance=prod%2Fglobal&input=file+dataset%3D%2FEGamma%2FRun2022F-22Sep2023-v1%2FNANOAOD+run%3D361971\n",
    "# I got the filelist by running within a CMSSW envirnonment on lxplus\n",
    "#   voms-proxy-init --voms cms\n",
    "#   dasgoclient --query=\"file dataset=/EGamma/Run2022F-22Sep2023-v1/NANOAOD run=361971\"\n",
    "\n",
    "## Run2022C, run=357442 Fill=8124 Recorded Lumi = 309.53 pb-1\n",
    "\n",
    "filelist = [\n",
    "    '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/50000/3c15f464-10bd-4ab8-9064-a509a3470c8a.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/ac8e9d83-82a8-4d80-af0e-c8ada661a3b2.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/f80a5b95-fe62-4f0d-a944-5241fb60aed8.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/94b4307d-743e-43ba-aacb-e24d62976a0c.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/fe30838d-340e-4b6d-8a9d-dbf48b0769f0.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/2c381ce9-cebb-4ac2-bd86-fec266ae32ab.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/ac146ab1-4c62-4e59-9e47-97a0f27296c0.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/91770f25-c595-417d-af06-0294ce83a54a.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/b63f1a53-2f1c-49c1-9030-9cf128774737.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/617c9322-aa7b-4ab4-a76b-754aa976d193.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/8a38772c-3521-4d31-b890-182129ec27a4.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/77aae102-b491-4b59-b805-81756e10f9c9.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/6120064a-8510-4c71-9e6d-f561acda3104.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/89bebe36-6b23-4425-936a-4736e2c5a7a2.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/c1638809-d776-48ad-a636-086b3ad888e5.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/fdfef697-4d08-47d9-adf4-96a5b57d53ba.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/0709d59f-9ebb-4322-b6a4-5ac5b0920c46.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/8774f467-3552-46ea-8cdb-bdc8e0325d72.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/254a37c2-b758-4ef6-9304-1483cb86bc00.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/b3ed630c-4607-4c01-b43a-70a821a82e29.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/f13df640-b2bb-455a-b12e-591bdcf478c9.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/2c7d3206-8253-4c71-aec1-a9c2ba306bd0.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/50000/64624550-d985-4dce-9a65-84d5c9f177b7.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/50000/42521add-a1f8-45bb-9428-1bfaa9fb9552.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/48736d9f-ff08-4011-bae4-158a7a410dc3.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/91e83c4b-8163-434a-a834-49ca0447769a.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/9c0e14d2-1dbd-46e0-b526-aadea8772b37.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/774adccc-2030-4081-b2dd-d419d596e5c2.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/5f345cbf-ac95-4b40-9d65-0ed2e731a671.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/c7888cb2-a9bf-46a2-8d70-030087226d2e.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/a6f13e9e-3018-46a3-a1bc-9c44ef3745bd.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/76d420f7-3069-4862-bd48-9b0fcb2957a4.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/90c94494-d854-41dc-8ef3-829950fca9c5.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/bf7612bb-d5a8-427b-9c3b-6227e956e07c.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/4e7f4cab-c543-40cf-9962-d0467f51017c.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/edc968c5-c8ae-4646-abde-94797f8f37bc.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/060a2b92-8317-4633-b167-bf4a8f9bfe72.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/8c41e42e-7e98-4eb5-8f80-9a674b86bfdc.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/4d17c297-6026-4dd7-b95c-82bab3e5b82c.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/9327925d-b457-4af2-908c-0c2633b4c2ff.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/52684bad-d9f1-4ddb-a949-fa5d692d4773.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/6dc6095c-7e75-44f5-adf8-24672304c683.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/ebde7b7f-8855-41fb-ac15-d223c8451d56.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/44b6df71-9516-42db-bb32-463e45d58b06.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/cbf47164-81b5-47a2-ae31-d68c7f5e722a.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/5fff0893-868e-41f7-8156-37e04c22bf9b.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/995e6556-488b-4c78-aa5c-ebe61964d265.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/0a668c2a-b08e-4b29-b26d-b3e8fcb5b57b.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/55d5cc8e-6ff6-41ef-82fb-ff03220d1949.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/53d8b7cc-9394-4e14-b9a7-5fa9dc475ebd.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/5ed16adc-ac33-4632-b758-44dfc29ed491.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/510000/61ef47ab-8a9e-464b-8702-1cffa353639b.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/50000/6acb7c3c-fd21-41e0-9d2b-c2aa7163395c.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/c29ec79c-3311-4c04-80ca-288c90fc7295.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/081192ec-f6f8-4f68-a9e2-2f2496ad8f85.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/7ced153b-2121-4754-9bce-e34d89b25c4c.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/8ee8ed5b-d529-4673-bd87-3b8e458b2731.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/98ca33fd-9157-430d-a13b-4974b5dea4df.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/c1e52356-dcba-40f7-92c1-e4c1f0a64335.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/149e3cf1-87bc-4ce9-b8d2-3c2fa97dfe3d.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/bc4b2934-339d-4765-8b6f-3e06467309da.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/236d332c-2c11-4906-9b67-54dc3db89f56.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/b062eb78-b422-4e07-bb61-0b4616fbc161.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/0f21827a-b6fa-4511-a5c2-9bc8916096fe.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/38c2ddcf-5d7c-41e6-a0a9-6bfa25ad103d.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/fe1fee55-8d10-41ad-9e8e-50063e1640c0.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/bc20e209-8af5-4310-8891-274f56fd900c.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/b016544c-5379-434a-b76b-2ca9dcfb8c9e.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/f5c6ef9a-a623-44be-ad5b-bd537972572d.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/2579b84e-e72a-40e6-8171-e49c69ff6e77.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/1499bb13-3cb7-4d2a-9501-f1b058b03d9f.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/24354e75-d99b-4956-9ce7-f8787351bfd9.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/50000/344a5e80-338c-472d-bdf4-933e66f9b658.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/50000/f48fecb3-769e-49c0-9379-4c07fa52223d.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/1f3d4880-1d32-4683-9394-1433fe5952c0.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/15f76c07-c6fb-4ef9-bef8-28532c8b8077.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/d4c8236d-c92b-4f3c-976d-af4b8266b4b1.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/dc5bd126-de1b-43ce-afc7-fb720a79d16b.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/7ba028e4-8c25-40bb-ad00-6e9afb25b71d.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/f8499e1c-dff2-464f-a0f9-f7b4f32cef97.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/5a7724d2-c759-4946-9c16-fdcdd5fedb56.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/2a026df0-ba28-4e5e-8baf-2a01559d87f0.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/6f7be9a4-58c6-405b-85f7-473ea868ae58.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/1864bc31-46c6-4db7-8821-a3e365ea3eec.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/f1321844-176c-49cc-83c8-215c7507c636.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/da1b734f-e837-42ea-9b56-13a1a196b285.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/5332c4f1-783c-4f1e-86ca-7588aaff7bdc.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/da0097c7-c9be-4ec4-bd60-145dfece59ed.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/6cb37c6e-9994-4af2-a4f9-025511ae90d2.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/5c2eda6b-ede4-4c06-bb65-57dbe4e53427.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/c3e17de8-65be-4d2b-a9d8-b1e5c913d733.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/61aa820e-c1a5-4d13-9782-dc9545eb24f0.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/89e12e24-1410-470c-9944-5a877c5b31b7.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/2ba08682-4b77-4c44-99b6-1b69d82e7dbb.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/68cb8e58-64f8-48bc-a22e-1e9ce62b527f.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/76309f98-5cf4-41dd-9889-c10b04438a0c.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/9a8535b5-0ec1-44b9-a5cd-8f210404e3af.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/4d7911c8-1024-422b-a3df-657fb95e3be4.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/af4d17e5-b002-4148-8bf8-45689424d140.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/26541a02-8ad4-4ae9-959b-ba0ed5f70eda.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/a89888f2-4aaf-457e-8ac1-72613bd7bd93.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/1d0edbfd-15cd-42b3-9396-76486bcc6b29.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/3d927b61-0e71-4778-a3c1-d438b44c4bd5.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/eddec031-eaea-4f00-a40e-fd875ed76e7f.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/6782e123-eaba-4aa8-924f-0db889a4f706.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/49cecabe-851d-4b13-ae4e-2f0891abf851.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/6a642882-ad9d-48bb-bca1-c0fdd2bd5cbd.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/020979ca-5879-4ace-bfc3-7893bdea4d37.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/f3c4420c-dc5a-4d56-8f05-29174ff1b924.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/9b4a8982-fae2-4824-ab20-b954aa89400c.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/f23c8368-51bd-4cb6-83b1-71ac89d4b878.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/bf49ad32-4f36-4364-aa27-6de1f75fd63a.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/b21feb7b-87c0-4e97-be99-d97cc07a76bf.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/1c0532fc-4697-4e1c-9555-6334bd5e2659.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/b2a83b11-af6e-4bd2-b872-f5306093144e.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/a930bd63-be2f-41cf-b4e5-0df1720c9ebc.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/506e75cb-b256-412d-a32d-cebb0982830f.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/a97687a8-83f6-4ad5-824a-d84e25bd53ec.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/ac53464f-c3f3-4377-8665-5af26b7b7fe7.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/881ae5f4-e500-4f62-a509-ae253f0799c8.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/440504bf-8a2f-48a0-9d5f-1f31d63ba63d.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/50000/e9dcd001-1a52-4a1b-b251-1cead74883a5.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/50000/7769ec43-5822-4efe-8b4e-c04ca3348bd4.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/046aaab1-dbcc-4c1d-a23a-b69030e8429e.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/f21c1492-5db8-40e0-a509-dca139bc95d9.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/a1c4135c-be53-49c0-a403-55c3c94f7e1a.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/4f8a6067-c61b-4743-9c81-db3274f237e8.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/4e05992f-fc60-4348-a53d-ba93672d2eaf.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/7b4542f7-2652-4ab4-9f28-25f030c30715.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/10e47a7b-79cb-4b83-82c1-d8d18620a644.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/03419313-fa3a-4906-9da4-1f8803279411.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/89b78ecf-799c-428c-b50c-3f676657f940.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/44a30e06-3ab9-4cf6-8523-95fc5aa22f6b.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/59350a73-7bdf-4294-8369-37f79ca41f72.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/140d0bcf-3b08-45ec-af9a-e86c01c3749d.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/811279b2-bcbf-4300-bd32-1a3690558ef3.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/46965eaa-bbeb-48dd-85b0-dd6f3b9f5346.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/b45a8ff9-def1-41e6-975a-98875d0ee52f.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/bc8aa637-b568-4f34-a180-d5aa05c29670.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/242a1386-13b4-47f4-8d62-2a1262c73fea.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/5d371a1f-192a-4a85-9738-1c7142873add.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/4481615d-30ad-4f45-a5b4-005380357a90.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/d8f2d4f7-eec5-4d3a-a89b-961a25ad5128.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/1048d798-d931-44fb-b7cd-88ea399ab489.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/3ddb0ae7-8b09-4abf-ab40-251be6a64fdb.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/04782e6d-aadb-4235-ab82-e2fbbb96f2f0.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/b67759be-629f-4d05-bf02-a565dc3ffbb6.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/0dd102e1-ff7f-4b80-8727-e4a41a224451.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/e7d9bb3b-a424-4319-a62b-207f23b188b9.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/50000/ce823b4f-ab9b-43ed-9668-5e6a7c3bccfe.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/50000/7c150ab1-2683-4163-8aac-94e5f8b7463e.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/50000/38df5d5b-053a-48ae-aa7a-432e45a9fb8b.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/94d30e15-a3e7-492e-ac94-a0db126928a4.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/c2353203-6985-4da5-933f-427f144d1fc1.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/8f276d6b-ac83-49ef-9bcd-e5ea05324421.root',\n",
    " '/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/66b33d30-22a5-40dc-9b7c-ed75bed20cd1.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/12471af8-4bf7-451c-ad25-961ce12d7cb4.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/cbbf11e2-fd0c-4ef2-b90f-f6446a110cb4.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/22ba6863-13b7-46b0-9a3c-c6e9dcd9ea08.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/62e33648-d9a2-43f2-8998-f7c1cad4d1b5.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/31d38704-5fc7-4d06-b3ed-0eb69bc3462f.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/77a0cec8-44c9-407c-94d6-90361ca37e39.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/8cf222eb-e51b-4837-bad3-b832409d0b1a.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/d18625b5-bd53-466c-a2f4-0fd279f5dea4.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/c06a4f3e-5cac-49ee-adbd-e886639943aa.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/523fe910-31a6-4bfb-9919-c3b7d1307224.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/0cb8a0d7-9784-4174-bbbb-a0fd3ad71a0d.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/de27da55-5362-4dd0-a97d-ddbe6eb38d8a.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/a60a4c07-6cdb-4f01-bf80-56c496880d8f.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/af4dc5db-0f77-41d9-a445-c575485211a2.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/be8f49be-6bee-47b7-bb3f-55f30276192b.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/90f667e4-6eb4-4a4d-ac1f-026deb15d109.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/27b4e094-3e65-4b67-a159-38aff32115c1.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/067923a5-b66d-4249-bbd3-890e127ab3f7.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/379f4e11-b6ce-4a11-901c-7f1dcdb472dd.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/33021012-3916-463b-bb69-785135216b98.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/5861a96d-29e8-4927-b698-890e5cf1bc02.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/ae364dcf-bfff-4aba-ad12-a1c311d9d44f.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/edb5e9ed-cda9-4d8a-aef0-641e3080e4f8.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/8a1f94bc-d623-4107-a54f-bc8f7532a757.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/207abcfc-1f92-4bb4-a556-916ab5dc2346.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/f2c2d092-dab9-4fcb-b50d-30611bc2e9b0.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/64d1dbdc-dff6-4fd2-8f7e-b0e33989459b.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/009c166b-3848-4ad8-8278-ced132ce7dbc.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/316461ea-3ed0-424d-b4a0-7cbd15dcde34.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/a4352f79-71da-4005-9998-8bd157904e82.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/c5ffe1c2-50d9-4bb7-a5a2-9792ad0fe7c8.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/3642f1a8-d56f-4b4f-9f6b-d2a0e851b409.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/eaf2ff77-6c3f-4941-a0fb-fab97da165c8.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/c259c9a6-5635-4fd0-8054-adea7d395e11.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/c57ccf4a-199c-4848-9350-a6ec6f4794da.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/21045470-94a3-417d-8e4e-483eca3ab939.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/c910f58b-3454-49bb-b90d-77fc75460e52.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/aa7f2a8c-5cc7-495a-ad11-249ec3e9e470.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/33330782-17e1-45ae-a6bf-d0b60a4761ce.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/2530000/307f6a83-aaf3-4973-89b6-ff3fa88e1c3b.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/f9e9872e-435c-480f-b0f7-06b3427d865e.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/274bc486-3504-479c-aa74-0204bbc6e2f7.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/15d0e8df-d78d-4d35-b3b7-3c66f87e3584.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/8058917a-537a-49dd-b487-e6bf588202a2.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/aef56106-5f52-447b-bc19-85f6ef55caec.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/32a1df92-559d-4420-832f-c6d9cb6c65ac.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/9de92d13-754f-4a88-968a-8a740e2eeca3.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/976c5678-a9e8-4645-a86f-b48631eb7612.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/1576cd91-b003-4e7c-b77a-a96c6e62051b.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/bee350b6-d811-453c-a7ee-97d426dd7540.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/76c8ca25-1e61-4bcd-bd83-1c654cad69f1.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/c5857e5f-f9ec-4963-b863-368732f93438.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/b393d21c-4373-4883-8689-4b6a1cc9b3ad.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/7ef19857-1f58-42be-bd8f-281d831fc24c.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/fd0c6ff9-0e84-4b0c-8834-2886941b3740.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/2b352fcc-854f-416e-9fe3-40651da3af81.root',\n",
    "'/store/data/Run2022C/EGamma/NANOAOD/22Sep2023-v1/40000/5f621841-1ed2-47b2-8e5a-8d6beb98e5c7.root'\n",
    "]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "34c299e9",
   "metadata": {},
   "outputs": [],
   "source": [
    "# use xrootd to browse/open files on cern eos\n",
    "import XRootD.client\n",
    "import random"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "4cb671d8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "path = \"root://eoscms.cern.ch/\"\n",
    "xrdurl =  XRootD.client.URL(path)\n",
    "xrdfs = XRootD.client.FileSystem(xrdurl.hostid)\n",
    "xrdpath = xrdurl.path\n",
    "print(xrdpath)\n",
    "\n",
    "num_clients = 16 # number of xroord clients to load files\n",
    "xrd_filelist = [f\"{xrdfs.url.protocol}://user_{random.randrange(num_clients)}@{xrdfs.url.hostname}:{xrdfs.url.port}/{file}\" for file in filelist]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "9ba82107",
   "metadata": {},
   "outputs": [],
   "source": [
    "import uproot # see https://uproot.readthedocs.io/en/latest/index.html \n",
    "import awkward as ak\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import pdb\n",
    "import vector\n",
    "import hist\n",
    "from hist import Hist\n",
    "import os"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "8fd589da",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Now at run 357442\n",
      "Have a batch with 1019 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 982 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 402 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2151 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2014 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2076 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2040 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2073 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1990 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1697 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1494 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 396 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 804 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 838 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1263 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1982 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 833 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2103 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2065 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 638 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1364 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2126 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1865 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 408 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2130 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1436 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1793 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 568 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 493 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2147 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 347 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 786 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2077 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2136 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2183 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1528 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1644 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 997 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1515 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 273 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 40 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2009 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2048 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 19 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1201 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 475 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1394 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1368 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 676 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 578 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2111 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2107 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2106 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 321 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1465 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2073 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2109 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1027 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 833 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1307 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 384 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 829 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1074 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1062 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1086 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 322 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 744 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2033 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1146 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1655 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 636 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 639 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2069 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1462 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1304 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2089 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1990 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 734 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1316 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1157 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 727 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1745 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 272 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2057 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1533 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1255 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 655 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 44 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 827 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 759 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2115 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 753 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1348 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1272 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1376 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2084 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2150 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2044 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2060 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1946 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 804 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 436 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 53 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 454 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1553 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 436 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2021 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 18 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1315 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 795 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1031 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1923 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1046 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1194 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1991 events\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 301 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 581 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 88 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1733 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1599 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 898 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 406 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 392 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1764 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 890 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 686 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1808 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2064 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 267 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1312 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 717 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 936 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2075 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2055 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2085 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2067 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1680 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 788 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2081 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2011 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1319 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1465 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 950 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1391 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 586 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1667 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 919 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2101 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2084 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1088 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1098 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2116 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1343 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 613 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1979 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2064 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 232 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1396 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1794 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1984 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2007 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2017 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1932 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1879 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 176 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1382 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 731 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2197 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2163 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2102 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2105 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1021 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 710 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2073 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 31 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 703 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1576 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2185 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 464 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1298 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 706 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 829 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2106 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1326 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 992 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2048 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1221 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1107 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2153 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2053 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1060 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 857 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2160 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1106 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 698 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1961 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2007 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1962 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1920 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 560 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 443 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2211 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2128 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1281 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 469 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 932 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1420 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2050 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 661 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 120 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2058 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2058 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1983 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1707 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1368 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 770 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 880 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2238 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 794 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1664 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 126 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 696 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1114 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 445 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1380 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1965 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1921 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1877 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1859 events\n",
      "Results saved to ./output_resultshlt.root\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Have a batch with 1886 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 803 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2082 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1987 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2059 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2002 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 361 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 879 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2129 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1449 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 823 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1019 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 28 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1927 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1878 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1865 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1163 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1547 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 26 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 825 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 303 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1323 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1994 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2050 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 797 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1498 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 593 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2095 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 411 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1356 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2149 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 275 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1752 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1993 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 416 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1882 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 7 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 603 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 323 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2076 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 482 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 684 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2125 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 549 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1842 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1961 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2009 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1981 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 382 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 788 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 709 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1132 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 995 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 841 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2067 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2083 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 927 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 582 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 443 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1497 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1152 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 642 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 984 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1057 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 221 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2009 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1961 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1915 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1870 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1885 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 133 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 583 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 575 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1411 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 955 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 960 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 121 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2196 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1728 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 881 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2010 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1735 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2103 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2150 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1200 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 816 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 940 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1453 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2064 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 744 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 901 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1800 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 89 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1532 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 419 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 494 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2126 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2132 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2162 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1926 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1822 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2084 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2067 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 72 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 755 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2162 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2118 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2188 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2162 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2151 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 885 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 927 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2129 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2116 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1997 events\n",
      "Results saved to ./output_resultshlt.root\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Have a batch with 543 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 58 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2018 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 672 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1907 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1343 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2218 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 257 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 115 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2207 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 42 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 718 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 601 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 496 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1607 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1096 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1959 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1502 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1945 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 295 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 858 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1065 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 43 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 765 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2132 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2140 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1848 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 824 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2099 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1094 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2067 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1892 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1183 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1831 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 353 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1769 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1354 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2025 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2080 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1965 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 927 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 695 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1756 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1287 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 936 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1575 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2041 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 333 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 201 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1429 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 694 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2100 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2128 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 224 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1508 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2019 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 82 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1299 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2103 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2132 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 870 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 403 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2058 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1992 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2043 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1908 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 173 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1680 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1655 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 638 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 394 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1887 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1324 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1753 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2072 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 918 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1464 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 948 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1580 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 590 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 129 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 414 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 27 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2232 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1883 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 969 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 619 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2147 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2057 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2080 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1346 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 714 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 517 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 618 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 270 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1027 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1135 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1607 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1995 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1725 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1137 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2079 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2022 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1984 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1903 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1846 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1932 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1993 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1934 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 169 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 890 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 532 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1877 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1822 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1273 events\n",
      "Results saved to ./output_resultshlt.root\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Have a batch with 270 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1955 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1850 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1939 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1877 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1698 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 286 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1252 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 635 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2039 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2035 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1972 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 600 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 477 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1529 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 658 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1248 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 79 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2105 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1470 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1844 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2110 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2096 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2018 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 108 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 573 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1729 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1594 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1352 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 175 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2163 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 371 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 947 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1081 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1795 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1118 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1789 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 323 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2138 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 563 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 565 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2159 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2170 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 779 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 672 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2152 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1939 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 121 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2087 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2020 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1255 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 871 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2073 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1027 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2041 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 963 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 572 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1340 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1135 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 395 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 326 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 275 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1365 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 895 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 90 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1131 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 170 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 425 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1104 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 581 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1603 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1895 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1900 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1940 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1818 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 908 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1257 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2218 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1934 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 580 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 918 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 579 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2022 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 188 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1949 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 242 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 497 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 730 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1140 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 919 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 2116 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1237 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1645 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 542 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1793 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 439 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 538 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 594 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 273 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1719 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 220 events\n",
      "Results saved to ./output_resultshlt.root\n",
      "Have a batch with 1517 events\n",
      "Results saved to ./output_resultshlt.root\n"
     ]
    }
   ],
   "source": [
    "import argparse\n",
    "import sys\n",
    "\n",
    "sys.argv=['']\n",
    "del sys\n",
    "\n",
    "parser = argparse.ArgumentParser(prog='./hlt_fitn')\n",
    "parser.add_argument(\n",
    "    '-i', '--input', nargs='+',\n",
    "    help='specify input ntuple root files'\n",
    ")\n",
    "parser.add_argument(\n",
    "    '-o', '--output', default='./',\n",
    "    help='specify output directory'\n",
    ")\n",
    "parser.add_argument(\n",
    "    '--runs', nargs='*', default=None,\n",
    "    help='specify runs to be processed'\n",
    ")\n",
    "args = parser.parse_args()\n",
    "\n",
    "# acceptance cuts\n",
    "ptCut = 30\n",
    "etaCut = 2.5\n",
    "\n",
    "#mass binning \n",
    "mass_low = 76\n",
    "mass_hi = 106\n",
    "mass_nBins = 120         \n",
    "\n",
    "#lumisection binning \n",
    "lumi_nBins = 120\n",
    "lumi_low = 0.5\n",
    "lumi_hi = 1300.5\n",
    "\n",
    "#binning for histogram of number of primary ver\n",
    "pv_nBins = 100\n",
    "pv_low = 0.5 \n",
    "pv_hi = 100.5\n",
    "\n",
    "electronmass = 0.510998946\n",
    "etaBound = 0.9 \n",
    "\n",
    "dirOut = args.output\n",
    "\n",
    "if not os.path.isdir(dirOut):\n",
    "    print(f\"create output directory {dirOut}\")\n",
    "    os.mkdir(dirOut)\n",
    "    \n",
    "branches_electron = [\n",
    "    \"Electron_pt\",\"Electron_eta\",\"Electron_phi\",\"Electron_charge\",\"Electron_cutBased\"\n",
    "]\n",
    "\n",
    "branches_trigger = [\n",
    "    \"TrigObj_id\",\"TrigObj_pt\",\"TrigObj_filterBits\",\"TrigObj_phi\",\"TrigObj_eta\"\n",
    "]\n",
    "branches_event = [\"luminosityBlock\",\"PV_npvs\"]\n",
    "\n",
    "aliases = {\n",
    "\n",
    "}\n",
    "\n",
    "# processing the event in batches to avoid using too much memory \n",
    "\n",
    "xrd_filelist = {f : \"Events\" for f in xrd_filelist}\n",
    "\n",
    "full_collection = None\n",
    "\n",
    "runs = [357442]\n",
    "\n",
    "# Function to calculate ΔR\n",
    "def delta_r(eta1, phi1, eta2, phi2):\n",
    "    # Calculate Δφ and account for periodicity\n",
    "    dphi = np.abs(phi1 - phi2)\n",
    "    dphi = np.where(dphi > np.pi, 2 * np.pi - dphi, dphi)\n",
    "    # Calculate ΔR\n",
    "    return np.sqrt((eta1 - eta2)**2 + dphi**2)\n",
    "\n",
    "for run in runs:\n",
    "    print(f\"Now at run {run}\")\n",
    "    hists = dict()\n",
    "    xx_h1 = np.array([])\n",
    "    yy_h1 = np.array([])\n",
    "    \n",
    "    histograms = {\n",
    "    \"h_mass_1hlt_BB\": hist.Hist(\n",
    "        hist.axis.Regular(120, 0.5, 1300.5, name=\"lumisec\"),\n",
    "        hist.axis.Regular(120, 76, 106, name=\"mass\")\n",
    "    ,),\n",
    "    \"h_mass_1hlt_BE\": hist.Hist(\n",
    "        hist.axis.Regular(120, 0.5, 1300.5, name=\"lumisec\"),\n",
    "        hist.axis.Regular(120, 76, 106, name=\"mass\")\n",
    "    ,),\n",
    "    \"h_mass_1hlt_EE\": hist.Hist(\n",
    "        hist.axis.Regular(120, 0.5, 1300.5, name=\"lumisec\"),\n",
    "        hist.axis.Regular(120, 76, 106, name=\"mass\")\n",
    "    ,),\n",
    "    \"h_mass_2hlt_BB\": hist.Hist(\n",
    "        hist.axis.Regular(120, 0.5, 1300.5, name=\"lumisec\"),\n",
    "        hist.axis.Regular(120, 76, 106, name=\"mass\")\n",
    "    ,),\n",
    "    \"h_mass_2hlt_BE\": hist.Hist(\n",
    "        hist.axis.Regular(120, 0.5, 1300.5, name=\"lumisec\"),\n",
    "        hist.axis.Regular(120, 76, 106, name=\"mass\")\n",
    "    ,),\n",
    "    \"h_mass_2hlt_EE\": hist.Hist(\n",
    "        hist.axis.Regular(120, 0.5, 1300.5, name=\"lumisec\"),\n",
    "        hist.axis.Regular(120, 76, 106, name=\"mass\")\n",
    "    ,)\n",
    "}\n",
    "    \n",
    "        \n",
    "    # Loop through the data in batches\n",
    "    for batch in uproot.iterate(xrd_filelist ,[\"luminosityBlock\", \"Electron_pt\", \"Electron_eta\", \"Electron_phi\", \"Electron_charge\",\"Electron_cutBased\", \"PV_npvs\", \"TrigObj_id\", \"TrigObj_pt\", \"TrigObj_eta\", \"TrigObj_phi\", \"TrigObj_filterBits\"],step_size=\"1 MB\",aliases=aliases,filter_name=branches_event + branches_electron + branches_trigger,cut=\"(run==357442) & HLT_Ele32_WPTight_Gsf & (nElectron>=2)\"):\n",
    "        if len(batch) == 0:\n",
    "            continue\n",
    "        print(f\"Have a batch with {len(batch)} events\")    \n",
    "        \n",
    "        events = batch[branches_event]\n",
    "        \n",
    "        xx_h1 = np.append(xx_h1,events[\"luminosityBlock\"].to_numpy())\n",
    "        \n",
    "        yy_h1 = np.append(yy_h1,events[\"PV_npvs\"].to_numpy())\n",
    "        \n",
    "    # electron objects\n",
    "        electrons = batch[branches_electron]\n",
    "    \n",
    "    # rename\n",
    "    \n",
    "        electrons[\"pt\"] = electrons[\"Electron_pt\"]\n",
    "        electrons[\"eta\"] = electrons[\"Electron_eta\"]\n",
    "        electrons[\"phi\"] = electrons[\"Electron_phi\"]\n",
    "        electrons[\"charge\"] = electrons[\"Electron_charge\"]\n",
    "        electrons[\"cut\"] = electrons[\"Electron_cutBased\"]\n",
    "\n",
    "    # index of the electron within the event (needed to disambiguate)\n",
    "    \n",
    "        electrons[\"index\"] = ak.local_index(electrons[\"Electron_pt\"])\n",
    "    \n",
    "     # Prepare electron objects\n",
    "        electrons = ak.zip({\n",
    "            \"pt\": batch[\"Electron_pt\"],\n",
    "            \"eta\": batch[\"Electron_eta\"],\n",
    "            \"phi\": batch[\"Electron_phi\"],\n",
    "            \"charge\": batch[\"Electron_charge\"],\n",
    "            \"cut\": batch[\"Electron_cutBased\"],\n",
    "        })\n",
    "\n",
    "    # Prepare trigger objects\n",
    "        triggers = ak.zip({\n",
    "            \"pt\": batch[\"TrigObj_pt\"],\n",
    "            \"eta\": batch[\"TrigObj_eta\"],\n",
    "            \"phi\": batch[\"TrigObj_phi\"],\n",
    "            \"id\": batch[\"TrigObj_id\"],\n",
    "            \"filterBits\": batch[\"TrigObj_filterBits\"],\n",
    "        })\n",
    "\n",
    "    # Electrons that pass ID criteria\n",
    "        id_pass = electrons[(electrons[\"pt\"] > ptCut) &(np.abs(electrons[\"eta\"]) < etaCut) &(electrons[\"cut\"] >= 3) ]\n",
    "\n",
    "    # Good HLT objects\n",
    "        goodHLTObj = triggers[(triggers[\"pt\"] > 27) & (triggers[\"id\"] == 11) & ((triggers[\"filterBits\"] & 2) != 0)]\n",
    "\n",
    "    # Calculate ΔR between id_pass and goodHLTObj\n",
    "        delta_R_matrix = delta_r(\n",
    "        electrons[\"eta\"][:, None],  # Broadcasting: Expand id_pass[\"eta\"] along a new axis\n",
    "        electrons[\"phi\"][:, None],\n",
    "        goodHLTObj[\"eta\"],\n",
    "        goodHLTObj[\"phi\"]\n",
    "    )\n",
    "\n",
    "\n",
    "    # Example: Find minimum ΔR for each electron\n",
    "        min_delta_R = ak.min(delta_R_matrix, axis=1)\n",
    "        \n",
    "    # collection of electrons that pass ID and hlt\n",
    "        \n",
    "        hlt_pass = electrons[(electrons[\"pt\"] > ptCut) & (abs(electrons[\"eta\"]) < etaCut) &(electrons[\"cut\"] >= 3) & (min_delta_R < 0.1)]\n",
    "\n",
    "    # collection of electrons that pass ID and fail hlt\n",
    "        \n",
    "        hlt_fail = electrons[(electrons[\"pt\"] > ptCut) & (abs(electrons[\"eta\"]) < etaCut) &(electrons[\"cut\"] >= 3) & (min_delta_R > 0.1)]\n",
    "        \n",
    "        def produce(name, tags, probes=None, disambiguate=False):\n",
    "            \n",
    "            BB = []\n",
    "            BE = []\n",
    "            EE = []\n",
    "            \n",
    "            # 1.) build pairs\n",
    "            if probes is None:\n",
    "                p_charge = ak.combinations(tags[\"charge\"], 2)        \n",
    "                lefts, rights = ak.unzip(p_charge)\n",
    "                mask_p = lefts*rights == -1\n",
    "\n",
    "                p_pt = ak.combinations(tags[\"pt\"], 2)[mask_p]\n",
    "                p_eta = ak.combinations(tags[\"eta\"], 2)[mask_p]\n",
    "                p_phi = ak.combinations(tags[\"phi\"], 2)[mask_p]\n",
    "            \n",
    "            else:              \n",
    "                p_charge = ak.cartesian([tags[\"charge\"], probes[\"charge\"]])        \n",
    "                l_charge , r_charge = ak.unzip(p_charge)\n",
    "                mask_p = l_charge*r_charge == -1\n",
    "                if disambiguate:\n",
    "                    p_idx = ak.cartesian([tags[\"index\"], probes[\"index\"]])\n",
    "                    l_idx, r_idx = ak.unzip(p_idx)\n",
    "                    mask_p = mask_p & (l_idx != r_idx)\n",
    "\n",
    "                p_pt = ak.cartesian([tags[\"pt\"],probes[\"pt\"]])[mask_p]\n",
    "                p_eta = ak.cartesian([tags[\"eta\"],probes[\"eta\"]])[mask_p]\n",
    "                p_phi = ak.cartesian([tags[\"phi\"],probes[\"phi\"]])[mask_p]\n",
    "            l_eta, r_eta = ak.unzip(p_eta)\n",
    "\n",
    "            l_pt , r_pt = ak.unzip(p_pt)\n",
    "\n",
    "            \n",
    "            l_phi, r_phi = ak.unzip(p_phi)\n",
    "\n",
    "            ele1 = vector.obj(pt=l_pt, phi=l_phi, eta=l_eta, mass=l_pt*0+electronmass)\n",
    "            ele2 = vector.obj(pt=r_pt, phi=r_phi, eta=r_eta, mass=r_pt*0+electronmass)\n",
    "\n",
    "            masses = (ele1 + ele2).mass\n",
    "            mask_mass = (masses > mass_low) & (masses < mass_hi)\n",
    "        \n",
    "        \n",
    "        # 3.) Fill histograms    \n",
    "            \n",
    "            for region, mask_eta in (\n",
    "                (\"BB\", (abs(l_eta) < etaBound) & (abs(r_eta) < etaBound)),\n",
    "                (\"BE\", (abs(l_eta) < etaBound) != (abs(r_eta) < etaBound)),\n",
    "                (\"EE\", (abs(l_eta) >= etaBound) & (abs(r_eta) >= etaBound))\n",
    "             ):\n",
    "\n",
    "                \n",
    "                yy = masses[mask_eta & mask_mass]   # select tag and probe pairs in eta and mass range\n",
    "                xx = events[\"luminosityBlock\"]\n",
    "              \n",
    "                # bring the event by event array into the same dimension\n",
    "                if len(xx) > 0:\n",
    "                \n",
    "                    xx = ak.unflatten(xx,counts=1)\n",
    "                # bring the arrays into the same form\n",
    "                    xx, yy = ak.broadcast_arrays(xx,yy)\n",
    "                 \n",
    "                    xx = ak.flatten(xx).to_numpy()\n",
    "                \n",
    "                    yy = ak.flatten(yy).to_numpy()\n",
    "                    \n",
    "                    pairs = np.column_stack((xx, yy))\n",
    "                    \n",
    "                    if region == \"BB\":\n",
    "                        BB.extend(pairs)\n",
    "                    elif region == \"BE\":\n",
    "                        BE.extend(pairs)\n",
    "                    elif region == \"EE\":\n",
    "                        EE.extend(pairs)\n",
    "\n",
    "\n",
    "            BB, BE, EE = map(lambda x: np.array(x).reshape(-1, 2), (BB, BE, EE))\n",
    "\n",
    "            \n",
    "            for region_data , region_name in zip([BB,BE,EE],[\"BB\",\"BE\",\"EE\"]):\n",
    "                if len(region_data)>0 :\n",
    "                    xx_region = region_data[:,0] \n",
    "                    yy_region = region_data[:,1]\n",
    "                \n",
    "                \n",
    "                    specific_name = f\"h_mass_{name}_{region_name}\"\n",
    "    \n",
    "    \n",
    "                    histograms[specific_name].fill(xx_region, yy_region)\n",
    "        \n",
    "\n",
    "            return histograms\n",
    "                \n",
    "\n",
    "        produce(\"1hlt\", hlt_pass,hlt_fail) \n",
    "        produce(\"2hlt\",hlt_pass)\n",
    "        \n",
    "        # Save histograms\n",
    "        h1 = hist.Hist(hist.axis.Regular(120, 0.5, 1300.5, name=\"lumisec\"), hist.axis.Regular(100, 0.5, 100.5, name=\"Npv\"),)\n",
    "        h1.fill(np.array(xx_h1), np.array(yy_h1))\n",
    "        \n",
    "        \n",
    "        file_path = os.path.join(dirOut, \"output_resultshlt.root\")\n",
    "        with uproot.recreate(file_path) as root_file:\n",
    "            root_file[\"histnpv\"] = h1\n",
    "            for name, hist_obj in histograms.items():\n",
    "                 root_file[name] = hist_obj\n",
    "        \n",
    "        print(f\"Results saved to {file_path}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "713bdd84",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Processed h_mass_2hlt_EE\n",
      "Projected values 1: [ 15.   8.  11.  15.  10.   9.  17.  15.  22.  18.  17.  20.  16.  17.\n",
      "  16.  26.  29.  24.  33.  22.  28.  31.  49.  42.  37.  34.  52.  55.\n",
      "  71.  62.  64.  65.  91.  69. 105.  82.  98. 105. 112. 153. 121. 150.\n",
      " 140. 155. 172. 208. 198. 196. 216. 260. 297. 258. 267. 295. 296. 300.\n",
      " 302. 327. 298. 299. 332. 325. 305. 285. 275. 297. 273. 251. 207. 207.\n",
      " 191. 171. 149. 156. 111. 145. 110. 103.  88.  75.  75.  61.  64.  56.\n",
      "  45.  46.  38.  23.  43.  30.  23.  20.  20.  23.  21.  14.  21.  13.\n",
      "  14.  15.  15.  12.  14.   9.   6.   6.  11.   7.   6.   7.   9.  13.\n",
      "   8.  16.   8.   8.  12.   6.   8.   7.]\n",
      "Projected values 2: [  7.   9.   7.  11.  11.  16.   9.   5.   9.  19.   9.  21.  11.  12.\n",
      "  22.  31.  19.  22.  29.  29.  26.  27.  46.  40.  32.  30.  32.  49.\n",
      "  61.  47.  63.  59.  62.  56.  78.  84.  82.  97. 102. 120. 116. 120.\n",
      " 140. 158. 177. 175. 176. 197. 194. 200. 244. 222. 258. 228. 224. 270.\n",
      " 260. 281. 264. 273. 299. 254. 276. 262. 256. 237. 208. 220. 214. 188.\n",
      " 163. 166. 152. 121. 118. 126.  87.  94.  79.  84.  58.  59.  45.  36.\n",
      "  50.  43.  24.  43.  30.  23.  21.  23.  20.  12.  16.  19.  23.  14.\n",
      "  13.  12.  15.   7.   9.   9.   8.  10.   6.   7.   6.   6.  10.   3.\n",
      "   3.   7.   6.  10.   1.   6.  10.   5.]\n",
      "Projected values 3: [  4.   6.   9.   9.   8.   6.  13.  11.   8.  16.  20.  10.  11.  14.\n",
      "  19.  16.  20.  18.  15.  21.  27.  31.  32.  22.  36.  32.  35.  48.\n",
      "  52.  39.  56.  48.  49.  68.  61.  62.  81.  77.  79.  97.  87.  96.\n",
      " 113. 122. 149. 150. 147. 146. 154. 175. 186. 189. 207. 217. 223. 243.\n",
      " 228. 227. 254. 294. 223. 252. 224. 189. 188. 218. 197. 175. 162. 159.\n",
      " 156. 130. 122. 119.  92.  90.  81.  78.  58.  58.  66.  51.  36.  31.\n",
      "  27.  37.  29.  23.  23.  27.  25.  23.  22.  19.  20.  10.  15.  10.\n",
      "  12.  10.  11.  14.  10.   3.  10.  11.   4.  10.   8.   6.   7.   4.\n",
      "   3.   5.   6.   6.  10.   3.   8.   6.]\n",
      "Processed h_mass_1hlt_EE\n",
      "Projected values 1: [  6.   5.   3.  15.   2.   6.   7.  10.  10.  11.   6.  11.   7.  14.\n",
      "  14.   9.  13.  14.  12.  26.   7.  16.  16.  19.  21.  30.  17.  26.\n",
      "  32.  33.  31.  37.  33.  27.  35.  34.  37.  49.  36.  59.  67.  50.\n",
      "  64.  61.  56.  58.  76.  84.  88.  79.  76.  79.  78.  92.  81. 107.\n",
      " 108. 108.  97. 109.  98.  86. 110.  88.  89.  70.  67.  62.  73.  61.\n",
      "  50.  66.  54.  40.  39.  31.  36.  28.  24.  31.  14.  19.  20.  20.\n",
      "  19.  14.   9.  15.   8.   4.  12.   7.   3.  10.   6.   8.   5.  11.\n",
      "   5.   1.   2.   3.   2.   3.   4.   2.   7.   4.   1.   1.   3.   0.\n",
      "   3.   6.   2.   1.   5.   1.   3.   1.]\n",
      "Projected values 2: [  4.   6.   6.   7.   6.   4.   6.   6.   8.  15.  13.   8.  10.   7.\n",
      "   6.  10.   6.  13.  18.  13.   6.  13.  15.  16.  13.  14.  17.  18.\n",
      "  12.  32.  14.  29.  29.  25.  25.  39.  37.  32.  36.  49.  54.  37.\n",
      "  60.  62.  60.  74.  50.  59.  81.  77.  87.  74.  75.  74. 104.  78.\n",
      "  80.  79.  93.  85.  67.  81.  77.  70.  77.  55.  83.  54.  69.  67.\n",
      "  50.  34.  38.  47.  35.  27.  29.  26.  25.  24.  22.  24.  13.  15.\n",
      "  14.  14.  16.   5.  11.   8.   9.  11.   7.   5.   5.   7.   5.   7.\n",
      "   4.   4.   9.   3.   2.   4.   1.   3.   5.   2.   0.   3.   1.   1.\n",
      "   3.   2.   3.   2.   3.   4.   3.   0.]\n",
      "Projected values 3: [ 5.  6.  2.  4.  8.  6.  6.  4.  7.  2.  6. 10.  7. 10.  4.  8.  6. 15.\n",
      "  8.  9.  8. 14. 11. 18. 19. 15. 19. 17. 26. 24. 20. 19. 19. 18. 35. 21.\n",
      " 27. 30. 47. 37. 43. 46. 40. 56. 41. 56. 53. 54. 58. 71. 56. 63. 64. 69.\n",
      " 70. 77. 70. 71. 69. 76. 70. 60. 76. 67. 70. 80. 60. 57. 49. 46. 49. 52.\n",
      " 45. 30. 28. 25. 25. 24. 14. 24. 24. 14.  9. 15.  5. 10. 14.  5.  8. 10.\n",
      "  7.  4.  4. 11.  4.  4.  8.  6.  1.  2.  2.  7.  1.  3.  3.  2.  3.  4.\n",
      "  2.  2.  4.  1.  0.  4.  0.  2.  2.  1.  2.  1.]\n",
      "All histograms processed and saved.\n"
     ]
    }
   ],
   "source": [
    "import ROOT\n",
    "import numpy as np\n",
    "import uproot\n",
    "import hist\n",
    "import os\n",
    "import awkward as ak  \n",
    "\n",
    "# Define the list of histogram names want to process\n",
    "hist_names = [\"h_mass_2hlt_EE\", \"h_mass_1hlt_EE\"]\n",
    "\n",
    "# Open the ROOT file\n",
    "demo_file = \"output_resultshlt.root\"\n",
    "\n",
    "# Define an output dictionary to store the processed results for each histogram\n",
    "processed_results = {}\n",
    "\n",
    "with uproot.open(demo_file) as root_file_2:\n",
    "    # Iterate over each histogram name\n",
    "    for hist_name in hist_names:\n",
    "        # Access the histogram data for the current component\n",
    "        uproot_hist = root_file_2[hist_name]\n",
    "        values, edges_lumisec, edges_mass = uproot_hist.to_numpy()\n",
    "\n",
    "        # Define bin ranges for slicing\n",
    "        x_bin_start1 = 1    # This is the first bin in  first selection (first bin in ROOT convention)\n",
    "        x_bin_end1 = 41\n",
    "\n",
    "        x_bin_start2 = 41  # This is the first bin in  second selection (second bin in ROOT convention)\n",
    "        x_bin_end2 = 81\n",
    "        \n",
    "        x_bin_start3 = 81   # This is the first bin in  third selection (third bin in ROOT convention)\n",
    "        x_bin_end3 = 119\n",
    "\n",
    "        # Slice and project the data based on the bin ranges\n",
    "        sliced_values1 = values[x_bin_start1:x_bin_end1 + 1, :]\n",
    "        sliced_values2 = values[x_bin_start2:x_bin_end2 + 1, :]\n",
    "        sliced_values3 = values[x_bin_start3:x_bin_end3 + 1, :]\n",
    "\n",
    "        projected_values1 = sliced_values1.sum(axis=0)\n",
    "        projected_values2 = sliced_values2.sum(axis=0)\n",
    "        projected_values3 = sliced_values3.sum(axis=0)\n",
    "\n",
    "        # Define y-axis bin edges, which remain the same\n",
    "        y_bin_edges = edges_mass\n",
    "\n",
    "        # Create a fresh histogram for each `hist_name` to avoid reusing\n",
    "        myHist1 = hist.Hist(hist.axis.Regular(120, 76, 106, name=\"mass\"))\n",
    "        myHist1.view()[()] = projected_values1\n",
    "        \n",
    "        myHist2 = hist.Hist(hist.axis.Regular(120, 76, 106, name=\"mass\"))\n",
    "        myHist2.view()[()] = projected_values2\n",
    "        \n",
    "        myHist3 = hist.Hist(hist.axis.Regular(120, 76, 106, name=\"mass\"))\n",
    "        myHist3.view()[()] = projected_values3\n",
    "\n",
    "        # Store processed projections and histograms in the results dictionary\n",
    "        processed_results[hist_name] = {\n",
    "            \"projected_values1\": projected_values1,\n",
    "            \"projected_values2\": projected_values2,\n",
    "            \"projected_values3\": projected_values3,\n",
    "            \"histogram1\": myHist1,\n",
    "            \"histogram2\": myHist2,\n",
    "            \"histogram3\": myHist3,\n",
    "        }\n",
    "\n",
    "        # Optionally print for each histogram\n",
    "        print(f\"Processed {hist_name}\")\n",
    "        print(\"Projected values 1:\", projected_values1)\n",
    "        print(\"Projected values 2:\", projected_values2)\n",
    "        print(\"Projected values 3:\", projected_values3)\n",
    "\n",
    "# Example of saving to a new ROOT file\n",
    "dirOut = \"mass_regionEE_hlt.root\"  # Specify output directory\n",
    "# os.makedirs(dirOut, exist_ok=True)\n",
    "file_path = os.path.join(dirOut)\n",
    "# Write processed histograms and projections to the ROOT file\n",
    "with uproot.recreate(file_path) as root_file:\n",
    "    for hist_name, result in processed_results.items():  \n",
    "        # Save each histogram separately\n",
    "        root_file[f\"{hist_name}_hist1\"] = result[\"histogram1\"]\n",
    "        root_file[f\"{hist_name}_hist2\"] = result[\"histogram2\"]\n",
    "        root_file[f\"{hist_name}_hist3\"] = result[\"histogram3\"]\n",
    "\n",
    "print(\"All histograms processed and saved.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "43d8a331",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Processed h_mass_2hlt_BE\n",
      "Projected values 4: [  6.   5.   5.   7.   7.   9.   9.   7.  15.   7.  13.   9.  10.   8.\n",
      "   9.  19.  15.  15.  17.  16.  12.  34.  28.  19.  35.  32.  36.  41.\n",
      "  42.  51.  46.  60.  69.  46.  78.  72.  80.  78. 101. 118. 115. 145.\n",
      " 148. 144. 167. 192. 217. 224. 237. 216. 282. 289. 328. 327. 305. 328.\n",
      " 416. 385. 387. 348. 411. 356. 375. 347. 334. 321. 293. 240. 240. 196.\n",
      " 181. 188. 178. 154. 132. 108. 103.  79.  86.  79.  61.  57.  58.  39.\n",
      "  40.  56.  37.  44.  29.  31.  26.  24.  24.  27.  17.  23.  22.  20.\n",
      "  24.  19.  17.  19.  13.  16.  16.  12.  16.  12.   8.  13.   9.   9.\n",
      "  10.   9.   8.   8.   8.   6.   3.  14.]\n",
      "Projected values 5: [  7.   7.   5.   4.  11.   3.   5.   8.   4.   8.  12.  13.  10.   8.\n",
      "   6.   9.  16.  19.  17.  16.  11.  20.  21.  22.  23.  29.  28.  34.\n",
      "  22.  23.  48.  42.  40.  51.  61.  64.  67.  67.  92. 103.  82. 114.\n",
      " 117. 103. 131. 122. 180. 176. 182. 218. 230. 241. 266. 298. 291. 297.\n",
      " 341. 338. 313. 337. 314. 329. 328. 312. 286. 265. 254. 224. 220. 186.\n",
      " 152. 146. 142. 126.  97.  88.  98.  90.  75.  74.  66.  53.  52.  37.\n",
      "  46.  35.  37.  22.  36.  28.  23.  20.  21.  21.  13.  12.  16.  23.\n",
      "  15.  21.  17.  13.  12.  11.  12.  14.  10.  16.  12.   7.   7.  14.\n",
      "  10.  10.  14.   9.   7.   7.   4.   7.]\n",
      "Projected values 6: [  4.   2.   5.   7.   5.   4.   2.   6.   7.  11.   5.   7.   7.   6.\n",
      "  10.  11.  13.   9.  25.  10.  22.  17.  19.  23.  21.  22.  28.  22.\n",
      "  31.  28.  36.  39.  43.  54.  48.  45.  69.  63.  84.  67.  91.  77.\n",
      "  97. 115. 132. 120. 139. 154. 169. 180. 197. 212. 242. 228. 258. 248.\n",
      " 264. 279. 261. 244. 309. 263. 259. 237. 242. 238. 197. 214. 187. 150.\n",
      " 144. 132. 126. 126. 102.  80.  74.  83.  60.  57.  39.  43.  37.  46.\n",
      "  32.  25.  29.  27.   9.  28.  19.  18.  15.  20.  16.  22.  17.  15.\n",
      "   8.  16.  12.   6.  15.  11.  10.   8.   5.   9.  14.   6.   7.   7.\n",
      "  11.   9.   4.   7.   4.  11.   6.   5.]\n",
      "Processed h_mass_1hlt_BE\n",
      "Projected values 4: [  1.   4.   7.   6.   2.   3.   2.   3.   7.   4.   4.   6.   2.   9.\n",
      "   6.   8.   9.   5.   3.   4.   9.   8.  11.   9.  12.  14.  11.  18.\n",
      "  14.  21.  26.  27.  25.  36.  25.  37.  27.  32.  38.  52.  47.  48.\n",
      "  54.  48.  53.  62.  73.  80.  95.  88.  90.  82.  90. 101. 116.  92.\n",
      " 117. 129. 111. 130. 124. 126. 118.  99. 105. 105.  92.  91.  75.  72.\n",
      "  58.  59.  58.  62.  54.  42.  33.  33.  25.  17.  22.  19.  22.  19.\n",
      "  22.  17.  13.  12.   7.  15.  10.  12.   6.  10.   4.   6.   4.   5.\n",
      "   8.   7.   7.   1.   8.   2.   7.   6.   5.   2.   4.   4.   4.   2.\n",
      "   2.   6.   0.   3.   2.   2.   7.   1.]\n",
      "Projected values 5: [  1.   2.   0.   2.   7.   4.   2.   3.   6.   4.   4.   7.   4.   4.\n",
      "   6.   5.   8.   7.   7.   5.   9.   5.  10.   9.  12.  12.  11.  12.\n",
      "  16.  20.  19.  16.  15.  28.  32.  23.  22.  31.  25.  32.  30.  42.\n",
      "  39.  49.  57.  55.  67.  55.  65.  83.  88.  91.  80.  82. 119. 115.\n",
      " 107. 127. 128.  88.  93.  88. 102.  98. 101.  88.  81.  76.  67.  64.\n",
      "  49.  57.  42.  39.  36.  31.  30.  27.  34.  25.  20.  15.  15.  23.\n",
      "  10.  16.  11.   6.  11.   8.   7.   7.   7.   6.   3.   3.  10.   6.\n",
      "   7.   4.   4.   6.   3.   5.   0.   3.   5.   2.   6.   7.   4.   2.\n",
      "   3.   4.   4.   3.   0.   3.   2.   2.]\n",
      "Projected values 6: [  0.   3.   2.   4.   2.   0.   4.   2.   5.   1.   4.   5.   4.   4.\n",
      "   2.   4.   6.   6.   8.   5.  10.   5.   6.   9.   9.  11.  12.  15.\n",
      "  14.   7.  13.  13.  20.  24.  20.  25.  13.  26.  25.  30.  22.  43.\n",
      "  45.  48.  39.  47.  53.  65.  55.  73.  73.  68.  87.  95.  83.  91.\n",
      "  85. 101.  89. 114.  86.  84.  90.  68.  82.  65.  67.  62.  52.  63.\n",
      "  43.  54.  43.  35.  37.  38.  26.  23.  17.  17.  16.  14.  13.  14.\n",
      "  12.  10.  10.   8.  13.   6.   7.   6.   4.   6.   6.   5.   2.   7.\n",
      "   3.   5.   3.   1.   5.   6.   5.   3.   5.   5.   3.   2.   1.   3.\n",
      "   4.   2.   1.   3.   3.   2.   3.   3.]\n",
      "All histograms processed and saved.\n"
     ]
    }
   ],
   "source": [
    "import ROOT\n",
    "import numpy as np\n",
    "import uproot\n",
    "import hist\n",
    "import os\n",
    "import awkward as ak  \n",
    "\n",
    "# Define the list of histogram names want to process\n",
    "hist_names = [\"h_mass_2hlt_BE\", \"h_mass_1hlt_BE\"]\n",
    "\n",
    "# Open the ROOT file\n",
    "demo_file = \"output_resultshlt.root\"\n",
    "\n",
    "# Define an output dictionary to store the processed results for each histogram\n",
    "processed_results = {}\n",
    "\n",
    "with uproot.open(demo_file) as root_file_2:\n",
    "    # Iterate over each histogram name\n",
    "    for hist_name in hist_names:\n",
    "        # Access the histogram data for the current component\n",
    "        uproot_hist = root_file_2[hist_name]\n",
    "        values, edges_lumisec, edges_mass = uproot_hist.to_numpy()\n",
    "\n",
    "        # Define bin ranges for slicing\n",
    "        x_bin_start4 = 1    # This is the first bin in first selection (first bin in ROOT convention)\n",
    "        x_bin_end4 = 41\n",
    "\n",
    "        x_bin_start5 = 41   # This is the first bin in second selection (second bin in ROOT convention)\n",
    "        x_bin_end5 = 81\n",
    "        \n",
    "        x_bin_start6 = 81   # This is the first bin in third selection (third bin in ROOT convention)\n",
    "        x_bin_end6 = 119\n",
    "\n",
    "        # Slice and project the data based on the bin ranges\n",
    "        sliced_values4 = values[x_bin_start4:x_bin_end4 + 1, :]\n",
    "        sliced_values5 = values[x_bin_start5:x_bin_end5 + 1, :]\n",
    "        sliced_values6 = values[x_bin_start6:x_bin_end6 + 1, :]\n",
    "\n",
    "        projected_values4 = sliced_values4.sum(axis=0)\n",
    "        projected_values5 = sliced_values5.sum(axis=0)\n",
    "        projected_values6 = sliced_values6.sum(axis=0)\n",
    "\n",
    "        # Define y-axis bin edges, which remain the same\n",
    "        y_bin_edges = edges_mass\n",
    "\n",
    "        # Create a fresh histogram for each `hist_name` to avoid reusing\n",
    "        myHist4 = hist.Hist(hist.axis.Regular(120, 76, 106, name=\"mass\"))\n",
    "        myHist4.view()[()] = projected_values4\n",
    "        \n",
    "        myHist5 = hist.Hist(hist.axis.Regular(120, 76, 106, name=\"mass\"))\n",
    "        myHist5.view()[()] = projected_values5\n",
    "        \n",
    "        myHist6 = hist.Hist(hist.axis.Regular(120, 76, 106, name=\"mass\"))\n",
    "        myHist6.view()[()] = projected_values6\n",
    "\n",
    "        # Store processed projections and histograms in the results dictionary\n",
    "        processed_results[hist_name] = {\n",
    "            \"projected_values4\": projected_values4,\n",
    "            \"projected_values5\": projected_values5,\n",
    "            \"projected_values6\": projected_values6,\n",
    "            \"histogram4\": myHist4,\n",
    "            \"histogram5\": myHist5,\n",
    "            \"histogram6\": myHist6,\n",
    "        }\n",
    "\n",
    "        # Optionally print for each histogram\n",
    "        print(f\"Processed {hist_name}\")\n",
    "        print(\"Projected values 4:\", projected_values4)\n",
    "        print(\"Projected values 5:\", projected_values5)\n",
    "        print(\"Projected values 6:\", projected_values6)\n",
    "\n",
    "# Example of saving to a new ROOT file\n",
    "dirOut = \"mass_regionBE_hlt.root\"  # Specify output directory\n",
    "# os.makedirs(dirOut, exist_ok=True)\n",
    "file_path = os.path.join(dirOut)\n",
    "# Write processed histograms and projections to the ROOT file\n",
    "with uproot.recreate(file_path) as root_file:\n",
    "    for hist_name, result in processed_results.items():  \n",
    "        # Save each histogram separately\n",
    "        root_file[f\"{hist_name}_hist4\"] = result[\"histogram4\"]\n",
    "        root_file[f\"{hist_name}_hist5\"] = result[\"histogram5\"]\n",
    "        root_file[f\"{hist_name}_hist6\"] = result[\"histogram6\"]\n",
    "\n",
    "print(\"All histograms processed and saved.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "56fb1bcb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Processed h_mass_2hlt_BB\n",
      "Projected values 7: [  7.  12.   9.   2.   8.   7.  10.   9.   3.   8.   6.  10.  11.  11.\n",
      "  14.   8.   9.  16.  13.  12.  14.  18.  20.  16.  14.  33.  25.  24.\n",
      "  25.  24.  30.  37.  25.  40.  45.  48.  46.  48.  55.  60.  71.  83.\n",
      "  78. 106. 118. 119. 136. 152. 185. 201. 224. 242. 244. 283. 297. 310.\n",
      " 338. 355. 395. 389. 407. 367. 340. 353. 326. 251. 270. 222. 195. 177.\n",
      " 146. 116. 111.  86.  83.  82.  63.  52.  49.  40.  43.  36.  36.  43.\n",
      "  24.  27.  25.  28.  26.  16.  17.  13.  14.  12.  10.   8.   6.  15.\n",
      "  11.  11.   9.  11.  10.  21.  14.  12.   8.   6.  15.   3.   6.   7.\n",
      "   4.   6.   5.   5.   6.   2.   7.   5.]\n",
      "Projected values 8: [  8.   6.   7.   6.   5.   8.  10.   7.   8.  10.   8.  11.   9.   7.\n",
      "   8.  15.  15.  12.  11.   8.  17.  19.  14.  13.  13.  12.  23.  19.\n",
      "  17.  15.  27.  21.  22.  33.  27.  38.  36.  47.  44.  63.  52.  65.\n",
      "  72.  81.  82. 106. 125. 114. 139. 166. 167. 189. 207. 244. 270. 284.\n",
      " 257. 337. 340. 336. 340. 316. 344. 298. 254. 256. 217. 167. 159. 143.\n",
      " 109. 114.  85.  89.  63.  60.  43.  51.  39.  40.  60.  32.  27.  28.\n",
      "  26.  22.  20.  22.  18.  18.  22.  17.  11.  11.  13.  15.  11.  10.\n",
      "  12.   3.   9.   9.   8.  12.   5.   9.   7.   5.   4.   3.   3.   7.\n",
      "   2.   3.   6.   2.   4.   3.   3.   5.]\n",
      "Projected values 9: [  8.   4.   3.   7.   6.   6.   8.  13.   7.   6.   8.   6.   7.   4.\n",
      "   6.   6.  10.  10.  11.   7.  13.  15.  16.   8.  16.  16.   9.  17.\n",
      "  16.  21.  18.  25.  18.  30.  27.  36.  40.  37.  49.  56.  61.  61.\n",
      "  52.  62.  82.  73.  95. 104. 129. 121. 140. 166. 180. 173. 215. 240.\n",
      " 243. 238. 240. 292. 295. 236. 238. 274. 217. 227. 164. 142. 126. 143.\n",
      " 103.  89.  77.  66.  63.  44.  49.  50.  43.  41.  28.  28.  19.  22.\n",
      "  15.  15.  12.  16.  13.  13.  16.  18.  10.   7.  10.  12.  10.  13.\n",
      "  11.   7.   8.   9.   9.   5.   3.   7.   4.   7.   4.   4.   4.   4.\n",
      "   6.   3.   1.   5.   2.   3.   8.   4.]\n",
      "Processed h_mass_1hlt_BB\n",
      "Projected values 7: [  3.   1.   4.   2.   2.   4.   2.   3.   6.   4.   6.   7.   2.   7.\n",
      "   6.   7.   3.   6.   3.   6.   7.   6.   8.  10.   8.  10.  12.  10.\n",
      "  10.  10.   8.  16.  17.  11.  16.  13.  18.  19.  24.  18.  21.  26.\n",
      "  21.  37.  48.  43.  42.  44.  48.  59.  70.  77.  79.  75.  87.  93.\n",
      " 101. 108. 126. 126. 100. 109. 130. 118.  91.  82.  87.  68.  42.  56.\n",
      "  43.  39.  35.  32.  32.  27.  15.  25.  19.  16.  13.  11.   9.   8.\n",
      "   8.   6.  11.   7.   5.   9.   7.   6.   3.   7.   4.   8.   6.   1.\n",
      "   5.   4.   2.   5.   1.   4.   5.   2.   0.   1.   3.   0.   1.   0.\n",
      "   5.   1.   2.   1.   1.   1.   1.   1.]\n",
      "Projected values 8: [  1.   1.   1.   3.   0.   6.   1.   3.   5.   3.   1.   5.   2.   1.\n",
      "   5.   2.   1.   5.   3.   2.   8.   4.   7.   4.   1.   5.   9.  10.\n",
      "  11.  14.   6.   9.  10.  12.  18.  12.  18.  21.  21.  25.  21.  22.\n",
      "  29.  33.  31.  31.  49.  52.  49.  51.  59.  73.  69.  74.  76.  91.\n",
      "  93.  99. 100. 106. 123.  87.  99.  79.  86.  89.  58.  64.  45.  45.\n",
      "  50.  43.  41.  31.  25.  19.  11.  25.  16.  10.  15.   7.   9.   6.\n",
      "   8.   9.   3.   7.   2.   6.   6.   3.   5.   5.   4.   1.   5.   3.\n",
      "   4.   2.   2.   4.   2.   2.   3.   1.   2.   1.   3.   3.   4.   2.\n",
      "   5.   2.   2.   2.   0.   2.   1.   2.]\n",
      "Projected values 9: [  1.   3.   1.   2.   5.   0.   3.   1.   3.   3.   2.   1.   3.   3.\n",
      "   3.   3.   2.   6.   2.   4.   6.   5.   5.   3.   7.   9.   4.   6.\n",
      "   8.  11.   9.   9.  11.   6.  14.  17.  12.  11.  15.  18.  21.  22.\n",
      "  24.  24.  24.  35.  37.  43.  42.  41.  43.  51.  56.  63.  73.  79.\n",
      "  81.  91. 100.  82.  76.  84.  85.  70.  60.  51.  66.  66.  39.  40.\n",
      "  39.  37.  22.  28.  13.  22.  12.  16.  14.   7.   7.   6.   9.   7.\n",
      "   6.   7.   3.   6.   3.   3.   7.   3.   4.   7.   0.   4.   5.   5.\n",
      "   2.   1.   2.   1.   0.   3.   2.   0.   1.   1.   2.   3.   0.   1.\n",
      "   1.   0.   2.   1.   0.   2.   1.   2.]\n",
      "All histograms processed and saved.\n"
     ]
    }
   ],
   "source": [
    "import ROOT\n",
    "import numpy as np\n",
    "import uproot\n",
    "import hist\n",
    "import os\n",
    "import awkward as ak  \n",
    "\n",
    "# Define the list of histogram names want to process\n",
    "hist_names = [\"h_mass_2hlt_BB\", \"h_mass_1hlt_BB\"]\n",
    "\n",
    "# Open the ROOT file\n",
    "demo_file = \"output_resultshlt.root\"\n",
    "\n",
    "# Define an output dictionary to store the processed results for each histogram\n",
    "processed_results = {}\n",
    "\n",
    "with uproot.open(demo_file) as root_file_2:\n",
    "    # Iterate over each histogram name\n",
    "    for hist_name in hist_names:\n",
    "        # Access the histogram data for the current component\n",
    "        uproot_hist = root_file_2[hist_name]\n",
    "        values, edges_lumisec, edges_mass = uproot_hist.to_numpy()\n",
    "\n",
    "        # Define bin ranges for slicing\n",
    "        x_bin_start7 = 1    # This is the first bin in yourselection (second bin in ROOT convention)\n",
    "        x_bin_end7 = 41\n",
    "\n",
    "        x_bin_start8 = 41  # This is the second bin in your second selection (second bin in ROOT convention)\n",
    "        x_bin_end8 = 81\n",
    "        \n",
    "        x_bin_start9 = 81   # This is the third bin in your third selection (second bin in ROOT convention)\n",
    "        x_bin_end9 = 119\n",
    "\n",
    "        # Slice and project the data based on the bin ranges\n",
    "        sliced_values7 = values[x_bin_start7:x_bin_end7 + 1, :]\n",
    "        sliced_values8 = values[x_bin_start8:x_bin_end8 + 1, :]\n",
    "        sliced_values9 = values[x_bin_start9:x_bin_end9 + 1, :]\n",
    "\n",
    "        projected_values7 = sliced_values7.sum(axis=0)\n",
    "        projected_values8 = sliced_values8.sum(axis=0)\n",
    "        projected_values9 = sliced_values9.sum(axis=0)\n",
    "\n",
    "        # Define y-axis bin edges, which remain the same\n",
    "        y_bin_edges = edges_mass\n",
    "\n",
    "        # Create a fresh histogram for each `hist_name` to avoid reusing\n",
    "        myHist7 = hist.Hist(hist.axis.Regular(120, 76, 106, name=\"mass\"))\n",
    "        myHist7.view()[()] = projected_values7\n",
    "        \n",
    "        myHist8 = hist.Hist(hist.axis.Regular(120, 76, 106, name=\"mass\"))\n",
    "        myHist8.view()[()] = projected_values8\n",
    "        \n",
    "        myHist9 = hist.Hist(hist.axis.Regular(120, 76, 106, name=\"mass\"))\n",
    "        myHist9.view()[()] = projected_values9\n",
    "\n",
    "        # Store processed projections and histograms in the results dictionary\n",
    "        processed_results[hist_name] = {\n",
    "            \"projected_values7\": projected_values7,\n",
    "            \"projected_values8\": projected_values8,\n",
    "            \"projected_values9\": projected_values9,\n",
    "            \"histogram7\": myHist7,\n",
    "            \"histogram8\": myHist8,\n",
    "            \"histogram9\": myHist9,\n",
    "        }\n",
    "\n",
    "        # Optionally print for each histogram\n",
    "        print(f\"Processed {hist_name}\")\n",
    "        print(\"Projected values 7:\", projected_values7)\n",
    "        print(\"Projected values 8:\", projected_values8)\n",
    "        print(\"Projected values 9:\", projected_values9)\n",
    "\n",
    "# Example of saving to a new ROOT file\n",
    "dirOut = \"mass_regionBB_hlt.root\"  # Specify your output directory\n",
    "# os.makedirs(dirOut, exist_ok=True)\n",
    "file_path = os.path.join(dirOut)\n",
    "# Write processed histograms and projections to the ROOT file\n",
    "with uproot.recreate(file_path) as root_file:\n",
    "    for hist_name, result in processed_results.items():  \n",
    "        # Save each histogram separately\n",
    "        root_file[f\"{hist_name}_hist7\"] = result[\"histogram7\"]\n",
    "        root_file[f\"{hist_name}_hist8\"] = result[\"histogram8\"]\n",
    "        root_file[f\"{hist_name}_hist9\"] = result[\"histogram9\"]\n",
    "\n",
    "print(\"All histograms processed and saved.\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "427038ca",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
