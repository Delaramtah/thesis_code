{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "f3153cb6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Signal Yield: 14091.75 ± 210.84\n",
      "Background Yield: 14.34 ± 13.45\n",
      "ID efficiency : 0.7774 ± 0.0112\n",
      "Background Slope: -0.00 ± 0.01\n",
      "Chi-squared: 107.88\n",
      "Degrees of Freedom: 113\n",
      "Chi-squared per dof: 0.95\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 504x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "error value saved to eN_2Iee1.txt\n",
      "value saved to N_2Iee1.txt\n"
     ]
    }
   ],
   "source": [
    "###best and final 1 ###\n",
    "\n",
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionEE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_2idpass_EE_hist1;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    # Breit-Wigner (Cauchy PDF)\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    # Gaussian (Normal distribution)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    # Convolution approximation (pointwise multiplication, normalize after)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    # a: Exponential normalization (background yield)\n",
    "    # b: Exponential slope (background decay)\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    # Signal model\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield  # Scale signal by signal yield\n",
    "\n",
    "    # Exponential background model (with varying slope)\n",
    "    background = exponential_background(x, a, b)\n",
    "    \n",
    "    # Combine signal and background\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)  \n",
    "signal_fraction_guess = 0.95  # Increase signal fraction guess (e.g., 0.95 or 0.9)\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters (signal and background yield fixed)\n",
    "initial_params = [\n",
    "    91.1876,  # m: Breit-Wigner mass\n",
    "    2.4952,   # gamma: Breit-Wigner width\n",
    "    91.0,     # mu: Gaussian mean\n",
    "    2.0,      # sigma: Gaussian standard deviation\n",
    "    1.0,      # a: Exponential constant term (background normalization)\n",
    "    -0.01,    # b: Exponential slope (background decay)\n",
    "    signal_yield_guess,   # sig_yield: Signal yield\n",
    "]\n",
    "\n",
    "# Bounds for Parameters (background yield and slope are allowed to vary)\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],  # Lower bounds\n",
    "    [94, 5.5, 94, 7.0, np.inf, 1.0, total_yield * 1.5]  # Upper bounds\n",
    ")\n",
    "\n",
    "# Fit the data\n",
    "popt, pcov = curve_fit(\n",
    "    fit_function, x_data, y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    ")\n",
    "\n",
    "# Extracting the fitted parameters\n",
    "(m, gamma, mu, sigma, a, b, sig_yield) = popt\n",
    "\n",
    "# Compute errors in the fit parameters\n",
    "sig_yield_error = np.sqrt(pcov[6, 6])  # Error for sig_yield (7th parameter)\n",
    "background_error = np.sqrt(pcov[4, 4])  # Error for background (5th parameter)\n",
    "\n",
    "# Print the results\n",
    "print(f\"Signal Yield: {sig_yield:.2f} ± {sig_yield_error:.2f}\")\n",
    "print(f\"Background Yield: {a:.2f} ± {background_error:.2f}\")\n",
    "print(f\"ID efficiency : 0.7774 ± 0.0112\")\n",
    "print(f\"Background Slope: {b:.2f} ± {np.sqrt(pcov[5, 5]):.2f}\")\n",
    "\n",
    "# Generate the signal and background components for plotting\n",
    "signal = convoluted_signal(x_data, m, gamma, mu, sigma)\n",
    "signal *= sig_yield\n",
    "\n",
    "background = exponential_background(x_data, a, b)\n",
    "\n",
    "# Generate the fit curve\n",
    "fit = signal + background\n",
    "\n",
    "# Compute the Chi-squared value\n",
    "residuals = (y_data - fit) / y_errors  # Residuals\n",
    "chi_squared = np.sum(residuals**2)  # Chi-squared value\n",
    "dof = len(x_data) - len(popt)  # Degrees of freedom\n",
    "chi_squared_dof = chi_squared / dof  # Chi-squared per dof\n",
    "\n",
    "# Print Chi-squared and Degrees of Freedom\n",
    "print(f\"Chi-squared: {chi_squared:.2f}\")\n",
    "print(f\"Degrees of Freedom: {dof}\")\n",
    "print(f\"Chi-squared per dof: {chi_squared_dof:.2f}\")\n",
    "\n",
    "\n",
    "\n",
    "# Diagnostic plot of the fit\n",
    "plt.figure(figsize=(7, 6))\n",
    "plt.errorbar(x_data, y_data, yerr=y_errors, fmt='o', label='Data', color='black')\n",
    "plt.plot(x_data, fit, label='Fit', color='red')\n",
    "plt.plot(x_data, signal, '--', label='Signal', color='blue')\n",
    "plt.plot(x_data, background, '--', label='Background', color='green')\n",
    "\n",
    "plt.xlabel(\"Mass (GeV)\" , fontsize=15)\n",
    "plt.ylabel(\"Events\" , fontsize=15)\n",
    "plt.legend()\n",
    "plt.show()\n",
    "with open(\"eN_2Iee1.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield_error}\\n\")\n",
    "    print(\"error value saved to eN_2Iee1.txt\")\n",
    "with open(\"N_2Iee1.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield}\\n\")\n",
    "    print(\"value saved to N_2Iee1.txt\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "e89771e3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Signal Yield: 12274.78 ± 177.34\n",
      "Background Yield: 40.38 ± 29.05\n",
      "Background Slope: -0.02 ± 0.01\n",
      "Chi-squared: 121.36\n",
      "Degrees of Freedom: 113\n",
      "Chi-squared per dof: 1.07\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "error value saved to eN_2Iee2.txt\n",
      "value saved to N_2Iee2.txt\n"
     ]
    }
   ],
   "source": [
    "###best and final 2 ###\n",
    "\n",
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionEE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_2idpass_EE_hist2;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    # Breit-Wigner (Cauchy PDF)\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    # Gaussian (Normal distribution)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    # Convolution approximation (pointwise multiplication, normalize after)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    # a: Exponential normalization (background yield)\n",
    "    # b: Exponential slope (background decay)\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    # Signal model\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield  # Scale signal by signal yield\n",
    "\n",
    "    # Exponential background model (with varying slope)\n",
    "    background = exponential_background(x, a, b)\n",
    "    \n",
    "    # Combine signal and background\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)  \n",
    "signal_fraction_guess = 0.95  # Increase signal fraction guess (e.g., 0.95 or 0.9)\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters (signal and background yield fixed)\n",
    "initial_params = [\n",
    "    91.1876,  # m: Breit-Wigner mass\n",
    "    2.4952,   # gamma: Breit-Wigner width\n",
    "    91.0,     # mu: Gaussian mean\n",
    "    2.0,      # sigma: Gaussian standard deviation\n",
    "    1.0,      # a: Exponential constant term (background normalization)\n",
    "    -0.01,    # b: Exponential slope (background decay)\n",
    "    signal_yield_guess,   # sig_yield: Signal yield\n",
    "]\n",
    "\n",
    "# Bounds for Parameters (background yield and slope are allowed to vary)\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],  # Lower bounds\n",
    "    [94, 10.5, 94, 7.0, np.inf, 1.0, total_yield * 1.5]  # Upper bounds\n",
    ")\n",
    "\n",
    "# Fit the data\n",
    "popt, pcov = curve_fit(\n",
    "    fit_function, x_data, y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    ")\n",
    "\n",
    "# Extracting the fitted parameters\n",
    "(m, gamma, mu, sigma, a, b, sig_yield) = popt\n",
    "\n",
    "# Compute errors in the fit parameters\n",
    "sig_yield_error = np.sqrt(pcov[6, 6])  # Error for sig_yield (7th parameter)\n",
    "background_error = np.sqrt(pcov[4, 4])  # Error for background (5th parameter)\n",
    "\n",
    "# Print the results\n",
    "print(f\"Signal Yield: {sig_yield:.2f} ± {sig_yield_error:.2f}\")\n",
    "print(f\"Background Yield: {a:.2f} ± {background_error:.2f}\")\n",
    "print(f\"Background Slope: {b:.2f} ± {np.sqrt(pcov[5, 5]):.2f}\")\n",
    "\n",
    "# Generate the signal and background components for plotting\n",
    "signal = convoluted_signal(x_data, m, gamma, mu, sigma)\n",
    "signal *= sig_yield\n",
    "\n",
    "background = exponential_background(x_data, a, b)\n",
    "\n",
    "# Generate the fit curve\n",
    "fit = signal + background\n",
    "\n",
    "# Compute the Chi-squared value\n",
    "residuals = (y_data - fit) / y_errors  # Residuals\n",
    "chi_squared = np.sum(residuals**2)  # Chi-squared value\n",
    "dof = len(x_data) - len(popt)  # Degrees of freedom\n",
    "chi_squared_dof = chi_squared / dof  # Chi-squared per dof\n",
    "\n",
    "# Print Chi-squared and Degrees of Freedom\n",
    "print(f\"Chi-squared: {chi_squared:.2f}\")\n",
    "print(f\"Degrees of Freedom: {dof}\")\n",
    "print(f\"Chi-squared per dof: {chi_squared_dof:.2f}\")\n",
    "\n",
    "# Diagnostic plot of the fit\n",
    "plt.figure(figsize=(8, 6))\n",
    "plt.errorbar(x_data, y_data, yerr=y_errors, fmt='o', label='Data', color='black')\n",
    "plt.plot(x_data, fit, label='Fit', color='red')\n",
    "plt.plot(x_data, signal, '--', label='Signal', color='blue')\n",
    "plt.plot(x_data, background, '--', label='Background', color='green')\n",
    "plt.xlabel(\"Mass (GeV)\" , fontsize=15)\n",
    "plt.ylabel(\"Events\" , fontsize=15)\n",
    "plt.legend()\n",
    "plt.show()\n",
    "with open(\"eN_2Iee2.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield_error}\\n\")\n",
    "    print(\"error value saved to eN_2Iee2.txt\")\n",
    "with open(\"N_2Iee2.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield}\\n\")\n",
    "    print(\"value saved to N_2Iee2.txt\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "9eecbdb4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Signal Yield: 10169.65 ± 154.14\n",
      "Background Yield: 43.03 ± 23.65\n",
      "Background Slope: -0.02 ± 0.01\n",
      "Chi-squared: 135.62\n",
      "Degrees of Freedom: 113\n",
      "Chi-squared per dof: 1.20\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "error value saved to eN_2Iee3.txt\n",
      "value saved to N_2Iee3.txt\n"
     ]
    }
   ],
   "source": [
    "###best and final 3 ###\n",
    "\n",
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionEE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_2idpass_EE_hist3;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    # Breit-Wigner (Cauchy PDF)\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    # Gaussian (Normal distribution)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    # Convolution approximation (pointwise multiplication, normalize after)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    # a: Exponential normalization (background yield)\n",
    "    # b: Exponential slope (background decay)\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    # Signal model\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield  # Scale signal by signal yield\n",
    "\n",
    "    # Exponential background model (with varying slope)\n",
    "    background = exponential_background(x, a, b)\n",
    "    \n",
    "    # Combine signal and background\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)  \n",
    "signal_fraction_guess = 0.95  # Increase signal fraction guess (e.g., 0.95 or 0.9)\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters (signal and background yield fixed)\n",
    "initial_params = [\n",
    "    91.1876,  # m: Breit-Wigner mass\n",
    "    2.4952,   # gamma: Breit-Wigner width\n",
    "    91.0,     # mu: Gaussian mean\n",
    "    2.0,      # sigma: Gaussian standard deviation\n",
    "    1.0,      # a: Exponential constant term (background normalization)\n",
    "    -0.01,    # b: Exponential slope (background decay)\n",
    "    signal_yield_guess,   # sig_yield: Signal yield\n",
    "]\n",
    "\n",
    "# Bounds for Parameters (background yield and slope are allowed to vary)\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],  # Lower bounds\n",
    "    [94, 5.5, 94, 5.0, np.inf, 1.0, total_yield * 1.5]  # Upper bounds\n",
    ")\n",
    "\n",
    "# Fit the data\n",
    "popt, pcov = curve_fit(\n",
    "    fit_function, x_data, y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    ")\n",
    "\n",
    "# Extracting the fitted parameters\n",
    "(m, gamma, mu, sigma, a, b, sig_yield) = popt\n",
    "\n",
    "# Compute errors in the fit parameters\n",
    "sig_yield_error = np.sqrt(pcov[6, 6])  # Error for sig_yield (7th parameter)\n",
    "background_error = np.sqrt(pcov[4, 4])  # Error for background (5th parameter)\n",
    "\n",
    "# Print the results\n",
    "print(f\"Signal Yield: {sig_yield:.2f} ± {sig_yield_error:.2f}\")\n",
    "print(f\"Background Yield: {a:.2f} ± {background_error:.2f}\")\n",
    "print(f\"Background Slope: {b:.2f} ± {np.sqrt(pcov[5, 5]):.2f}\")\n",
    "\n",
    "# Generate the signal and background components for plotting\n",
    "signal = convoluted_signal(x_data, m, gamma, mu, sigma)\n",
    "signal *= sig_yield\n",
    "\n",
    "background = exponential_background(x_data, a, b)\n",
    "\n",
    "# Generate the fit curve\n",
    "fit = signal + background\n",
    "\n",
    "# Compute the Chi-squared value\n",
    "residuals = (y_data - fit) / y_errors  # Residuals\n",
    "chi_squared = np.sum(residuals**2)  # Chi-squared value\n",
    "dof = len(x_data) - len(popt)  # Degrees of freedom\n",
    "chi_squared_dof = chi_squared / dof  # Chi-squared per dof\n",
    "\n",
    "# Print Chi-squared and Degrees of Freedom\n",
    "print(f\"Chi-squared: {chi_squared:.2f}\")\n",
    "print(f\"Degrees of Freedom: {dof}\")\n",
    "print(f\"Chi-squared per dof: {chi_squared_dof:.2f}\")\n",
    "\n",
    "# Diagnostic plot of the fit\n",
    "plt.figure(figsize=(8, 6))\n",
    "plt.errorbar(x_data, y_data, yerr=y_errors, fmt='o', label='Data', color='black')\n",
    "plt.plot(x_data, fit, label='Fit', color='red')\n",
    "plt.plot(x_data, signal, '--', label='Signal', color='blue')\n",
    "plt.plot(x_data, background, '--', label='Background', color='green')\n",
    "plt.xlabel(\"Mass (GeV)\" , fontsize=15)\n",
    "plt.ylabel(\"Events\" , fontsize=15)\n",
    "plt.legend()\n",
    "plt.show()\n",
    "with open(\"eN_2Iee3.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield_error}\\n\")\n",
    "    print(\"error value saved to eN_2Iee3.txt\")\n",
    "with open(\"N_2Iee3.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield}\\n\")\n",
    "    print(\"value saved to N_2Iee3.txt\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "4c73c0b8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Signal Yield: 4057.50 ± 163.75\n",
      "Background Yield: 42.57 ± 37.08\n",
      "Background Slope: -0.02 ± 0.01\n",
      "Chi-squared: 102.28\n",
      "Degrees of Freedom: 113\n",
      "Chi-squared per dof: 0.91\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 504x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "error value saved to eN_1Iee1.txt\n",
      "value saved to N_1Iee1.txt\n"
     ]
    }
   ],
   "source": [
    "###best and final 4 ###\n",
    "\n",
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionEE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_1idpass_EE_hist1;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    # Breit-Wigner (Cauchy PDF)\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    # Gaussian (Normal distribution)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    # Convolution approximation (pointwise multiplication, normalize after)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    # a: Exponential normalization (background yield)\n",
    "    # b: Exponential slope (background decay)\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    # Signal model\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield  # Scale signal by signal yield\n",
    "\n",
    "    # Exponential background model (with varying slope)\n",
    "    background = exponential_background(x, a, b)\n",
    "    \n",
    "    # Combine signal and background\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)  \n",
    "signal_fraction_guess = 0.95  # Increase signal fraction guess (e.g., 0.95 or 0.9)\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters (signal and background yield fixed)\n",
    "initial_params = [\n",
    "    91.1876,  # m: Breit-Wigner mass\n",
    "    2.4952,   # gamma: Breit-Wigner width\n",
    "    91.0,     # mu: Gaussian mean\n",
    "    2.0,      # sigma: Gaussian standard deviation\n",
    "    1.0,      # a: Exponential constant term (background normalization)\n",
    "    -0.01,    # b: Exponential slope (background decay)\n",
    "    signal_yield_guess,   # sig_yield: Signal yield\n",
    "]\n",
    "\n",
    "# Bounds for Parameters (background yield and slope are allowed to vary)\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],  # Lower bounds\n",
    "    [94, 10.5, 94, 12.0, np.inf, 1.0, total_yield * 1.5]  # Upper bounds\n",
    ")\n",
    "\n",
    "# Fit the data\n",
    "popt, pcov = curve_fit(\n",
    "    fit_function, x_data, y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    ")\n",
    "\n",
    "# Extracting the fitted parameters\n",
    "(m, gamma, mu, sigma, a, b, sig_yield) = popt\n",
    "\n",
    "# Compute errors in the fit parameters\n",
    "sig_yield_error = np.sqrt(pcov[6, 6])  # Error for sig_yield (7th parameter)\n",
    "background_error = np.sqrt(pcov[4, 4])  # Error for background (5th parameter)\n",
    "\n",
    "# Print the results\n",
    "print(f\"Signal Yield: {sig_yield:.2f} ± {sig_yield_error:.2f}\")\n",
    "print(f\"Background Yield: {a:.2f} ± {background_error:.2f}\")\n",
    "print(f\"Background Slope: {b:.2f} ± {np.sqrt(pcov[5, 5]):.2f}\")\n",
    "\n",
    "# Generate the signal and background components for plotting\n",
    "signal = convoluted_signal(x_data, m, gamma, mu, sigma)\n",
    "signal *= sig_yield\n",
    "\n",
    "background = exponential_background(x_data, a, b)\n",
    "\n",
    "# Generate the fit curve\n",
    "fit = signal + background\n",
    "\n",
    "# Compute the Chi-squared value\n",
    "residuals = (y_data - fit) / y_errors  # Residuals\n",
    "chi_squared = np.sum(residuals**2)  # Chi-squared value\n",
    "dof = len(x_data) - len(popt)  # Degrees of freedom\n",
    "chi_squared_dof = chi_squared / dof  # Chi-squared per dof\n",
    "\n",
    "# Print Chi-squared and Degrees of Freedom\n",
    "print(f\"Chi-squared: {chi_squared:.2f}\")\n",
    "print(f\"Degrees of Freedom: {dof}\")\n",
    "print(f\"Chi-squared per dof: {chi_squared_dof:.2f}\")\n",
    "\n",
    "# Diagnostic plot of the fit\n",
    "plt.figure(figsize=(7, 6))\n",
    "plt.errorbar(x_data, y_data, yerr=y_errors, fmt='o', label='Data', color='black')\n",
    "plt.plot(x_data, fit, label='Fit', color='red')\n",
    "plt.plot(x_data, signal, '--', label='Signal', color='blue')\n",
    "plt.plot(x_data, background, '--', label='Background', color='green')\n",
    "plt.xlabel(\"Mass (GeV)\" , fontsize=15)\n",
    "plt.ylabel(\"Events\" , fontsize=15)\n",
    "plt.legend()\n",
    "plt.show()\n",
    "with open(\"eN_1Iee1.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield_error}\\n\")\n",
    "    print(\"error value saved to eN_1Iee1.txt\")\n",
    "with open(\"N_1Iee1.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield}\\n\")\n",
    "    print(\"value saved to N_1Iee1.txt\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "a6741d67",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Signal Yield: 3314.33 ± 129.26\n",
      "Background Yield: 85.09 ± 63.97\n",
      "Background Slope: -0.03 ± 0.01\n",
      "Chi-squared: 140.00\n",
      "Degrees of Freedom: 113\n",
      "Chi-squared per dof: 1.24\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "error value saved to eN_1Iee2.txt\n",
      "value saved to N_1Iee2.txt\n"
     ]
    }
   ],
   "source": [
    "###best and final 5 ###\n",
    "\n",
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionEE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_1idpass_EE_hist2;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    # Breit-Wigner (Cauchy PDF)\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    # Gaussian (Normal distribution)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    # Convolution approximation (pointwise multiplication, normalize after)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    # a: Exponential normalization (background yield)\n",
    "    # b: Exponential slope (background decay)\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    # Signal model\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield  # Scale signal by signal yield\n",
    "\n",
    "    # Exponential background model (with varying slope)\n",
    "    background = exponential_background(x, a, b)\n",
    "    \n",
    "    # Combine signal and background\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)  \n",
    "signal_fraction_guess = 0.95  # Increase signal fraction guess (e.g., 0.95 or 0.9)\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters (signal and background yield fixed)\n",
    "initial_params = [\n",
    "    91.1876,  # m: Breit-Wigner mass\n",
    "    2.4952,   # gamma: Breit-Wigner width\n",
    "    91.0,     # mu: Gaussian mean\n",
    "    2.0,      # sigma: Gaussian standard deviation\n",
    "    1.0,      # a: Exponential constant term (background normalization)\n",
    "    -0.01,    # b: Exponential slope (background decay)\n",
    "    signal_yield_guess,   # sig_yield: Signal yield\n",
    "]\n",
    "\n",
    "# Bounds for Parameters (background yield and slope are allowed to vary)\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],  # Lower bounds\n",
    "    [94, 5.5, 94, 5.0, np.inf, 1.0, total_yield * 1.5]  # Upper bounds\n",
    ")\n",
    "\n",
    "# Fit the data\n",
    "popt, pcov = curve_fit(\n",
    "    fit_function, x_data, y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    ")\n",
    "\n",
    "# Extracting the fitted parameters\n",
    "(m, gamma, mu, sigma, a, b, sig_yield) = popt\n",
    "\n",
    "# Compute errors in the fit parameters\n",
    "sig_yield_error = np.sqrt(pcov[6, 6])  # Error for sig_yield (7th parameter)\n",
    "background_error = np.sqrt(pcov[4, 4])  # Error for background (5th parameter)\n",
    "\n",
    "# Print the results\n",
    "print(f\"Signal Yield: {sig_yield:.2f} ± {sig_yield_error:.2f}\")\n",
    "print(f\"Background Yield: {a:.2f} ± {background_error:.2f}\")\n",
    "print(f\"Background Slope: {b:.2f} ± {np.sqrt(pcov[5, 5]):.2f}\")\n",
    "\n",
    "# Generate the signal and background components for plotting\n",
    "signal = convoluted_signal(x_data, m, gamma, mu, sigma)\n",
    "signal *= sig_yield\n",
    "\n",
    "background = exponential_background(x_data, a, b)\n",
    "\n",
    "# Generate the fit curve\n",
    "fit = signal + background\n",
    "\n",
    "# Compute the Chi-squared value\n",
    "residuals = (y_data - fit) / y_errors  # Residuals\n",
    "chi_squared = np.sum(residuals**2)  # Chi-squared value\n",
    "dof = len(x_data) - len(popt)  # Degrees of freedom\n",
    "chi_squared_dof = chi_squared / dof  # Chi-squared per dof\n",
    "\n",
    "# Print Chi-squared and Degrees of Freedom\n",
    "print(f\"Chi-squared: {chi_squared:.2f}\")\n",
    "print(f\"Degrees of Freedom: {dof}\")\n",
    "print(f\"Chi-squared per dof: {chi_squared_dof:.2f}\")\n",
    "\n",
    "# Diagnostic plot of the fit\n",
    "plt.figure(figsize=(8, 6))\n",
    "plt.errorbar(x_data, y_data, yerr=y_errors, fmt='o', label='Data', color='black')\n",
    "plt.plot(x_data, fit, label='Fit', color='red')\n",
    "plt.plot(x_data, signal, '--', label='Signal', color='blue')\n",
    "plt.plot(x_data, background, '--', label='Background', color='green')\n",
    "plt.xlabel(\"Mass (GeV)\" , fontsize=15)\n",
    "plt.ylabel(\"Events\" , fontsize=15)\n",
    "plt.legend()\n",
    "plt.show()\n",
    "with open(\"eN_1Iee2.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield_error}\\n\")\n",
    "    print(\"error value saved to eN_1Iee2.txt\")\n",
    "with open(\"N_1Iee2.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield}\\n\")\n",
    "    print(\"value saved to N_1Iee2.txt\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "c233b4d0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Signal Yield: 2617.24 ± 153.14\n",
      "Background Yield: 170.06 ± 135.54\n",
      "Background Slope: -0.04 ± 0.01\n",
      "Chi-squared: 114.01\n",
      "Degrees of Freedom: 113\n",
      "Chi-squared per dof: 1.01\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "error value saved to eN_1Iee3.txt\n",
      "value saved to N_1Iee3.txt\n"
     ]
    }
   ],
   "source": [
    "###best and final 6 ###\n",
    "\n",
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionEE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_1idpass_EE_hist3;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    # Breit-Wigner (Cauchy PDF)\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    # Gaussian (Normal distribution)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    # Convolution approximation (pointwise multiplication, normalize after)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    # a: Exponential normalization (background yield)\n",
    "    # b: Exponential slope (background decay)\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    # Signal model\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield  # Scale signal by signal yield\n",
    "\n",
    "    # Exponential background model (with varying slope)\n",
    "    background = exponential_background(x, a, b)\n",
    "    \n",
    "    # Combine signal and background\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)  \n",
    "signal_fraction_guess = 0.95  # Increase signal fraction guess (e.g., 0.95 or 0.9)\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters (signal and background yield fixed)\n",
    "initial_params = [\n",
    "    91.1876,  # m: Breit-Wigner mass\n",
    "    2.4952,   # gamma: Breit-Wigner width\n",
    "    91.0,     # mu: Gaussian mean\n",
    "    2.0,      # sigma: Gaussian standard deviation\n",
    "    1.0,      # a: Exponential constant term (background normalization)\n",
    "    -0.01,    # b: Exponential slope (background decay)\n",
    "    signal_yield_guess,   # sig_yield: Signal yield\n",
    "]\n",
    "\n",
    "# Bounds for Parameters (background yield and slope are allowed to vary)\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],  # Lower bounds\n",
    "    [94, 5.5, 94, 7.0, np.inf, 1.0, total_yield * 1.5]  # Upper bounds\n",
    ")\n",
    "\n",
    "# Fit the data\n",
    "popt, pcov = curve_fit(\n",
    "    fit_function, x_data, y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    ")\n",
    "\n",
    "# Extracting the fitted parameters\n",
    "(m, gamma, mu, sigma, a, b, sig_yield) = popt\n",
    "\n",
    "# Compute errors in the fit parameters\n",
    "sig_yield_error = np.sqrt(pcov[6, 6])  # Error for sig_yield (7th parameter)\n",
    "background_error = np.sqrt(pcov[4, 4])  # Error for background (5th parameter)\n",
    "\n",
    "# Print the results\n",
    "print(f\"Signal Yield: {sig_yield:.2f} ± {sig_yield_error:.2f}\")\n",
    "print(f\"Background Yield: {a:.2f} ± {background_error:.2f}\")\n",
    "print(f\"Background Slope: {b:.2f} ± {np.sqrt(pcov[5, 5]):.2f}\")\n",
    "\n",
    "# Generate the signal and background components for plotting\n",
    "signal = convoluted_signal(x_data, m, gamma, mu, sigma)\n",
    "signal *= sig_yield\n",
    "\n",
    "background = exponential_background(x_data, a, b)\n",
    "\n",
    "# Generate the fit curve\n",
    "fit = signal + background\n",
    "\n",
    "# Compute the Chi-squared value\n",
    "residuals = (y_data - fit) / y_errors  # Residuals\n",
    "chi_squared = np.sum(residuals**2)  # Chi-squared value\n",
    "dof = len(x_data) - len(popt)  # Degrees of freedom\n",
    "chi_squared_dof = chi_squared / dof  # Chi-squared per dof\n",
    "\n",
    "# Print Chi-squared and Degrees of Freedom\n",
    "print(f\"Chi-squared: {chi_squared:.2f}\")\n",
    "print(f\"Degrees of Freedom: {dof}\")\n",
    "print(f\"Chi-squared per dof: {chi_squared_dof:.2f}\")\n",
    "\n",
    "\n",
    "# Diagnostic plot of the fit\n",
    "plt.figure(figsize=(8, 6))\n",
    "plt.errorbar(x_data, y_data, yerr=y_errors, fmt='o', label='Data', color='black')\n",
    "plt.plot(x_data, fit, label='Fit', color='red')\n",
    "plt.plot(x_data, signal, '--', label='Signal', color='blue')\n",
    "plt.plot(x_data, background, '--', label='Background', color='green')\n",
    "plt.xlabel(\"Mass (GeV)\" , fontsize=15)\n",
    "plt.ylabel(\"Events\" , fontsize=15)\n",
    "plt.legend()\n",
    "plt.show()\n",
    "with open(\"eN_1Iee3.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield_error}\\n\")\n",
    "    print(\"error value saved to eN_1Iee3.txt\")\n",
    "with open(\"N_1Iee3.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield}\\n\")\n",
    "    print(\"value saved to N_1Iee3.txt\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "670c9273",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Efficiency_EE_hist1: 0.8742 ± 0.0136\n"
     ]
    }
   ],
   "source": [
    "# eff cal for EE_hist1 #\n",
    "\n",
    "import numpy as np\n",
    "\n",
    "# Given data with uncertainties\n",
    "Nsig1 = 4057.50 \n",
    "Nsig1_error = 163.75\n",
    "Nsig2 =  14091.75 \n",
    "Nsig2_error = 210.84 \n",
    "\n",
    "# Calculate efficiency\n",
    "efficiency = (2*Nsig2) / ((2*Nsig2) + Nsig1)\n",
    "\n",
    "# Partial derivatives\n",
    "d_eta_d_Nsig1 = -Nsig2 / (Nsig1 + Nsig2)**2\n",
    "d_eta_d_Nsig2 = 1 / (Nsig1 + Nsig2)\n",
    "\n",
    "# Propagated uncertainty\n",
    "efficiency_error = np.sqrt((d_eta_d_Nsig1 * Nsig1_error)**2 + (d_eta_d_Nsig2 * Nsig2_error)**2)\n",
    "\n",
    "print(f\"Efficiency_EE_hist1: {efficiency:.4f} ± {efficiency_error:.4f}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "9e1f78da",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Efficiency_EE_hist2: 0.8811 ± 0.0120\n"
     ]
    }
   ],
   "source": [
    "# eff cal for EE_hist2 #\n",
    "\n",
    "import numpy as np\n",
    "\n",
    "# Given data with uncertainties\n",
    "Nsig1 = 3314.33\n",
    "Nsig1_error = 126.18\n",
    "Nsig2 = 12274.78\n",
    "Nsig2_error = 159.35\n",
    "\n",
    "# Calculate efficiency\n",
    "efficiency = (2*Nsig2) / ((2*Nsig2) + Nsig1)\n",
    "\n",
    "# Partial derivatives\n",
    "d_eta_d_Nsig1 = -Nsig2 / (Nsig1 + Nsig2)**2\n",
    "d_eta_d_Nsig2 = 1 / (Nsig1 + Nsig2)\n",
    "\n",
    "# Propagated uncertainty\n",
    "efficiency_error = np.sqrt((d_eta_d_Nsig1 * Nsig1_error)**2 + (d_eta_d_Nsig2 * Nsig2_error)**2)\n",
    "\n",
    "print(f\"Efficiency_EE_hist2: {efficiency:.4f} ± {efficiency_error:.4f}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "004f2ce7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Efficiency_EE_hist3: 0.8860 ± 0.0131\n"
     ]
    }
   ],
   "source": [
    "# eff cal for EE_hist3 #\n",
    "\n",
    "import numpy as np\n",
    "\n",
    "# Given data with uncertainties\n",
    "Nsig1 = 2617.24\n",
    "Nsig1_error = 92.87\n",
    "Nsig2 = 10169.65\n",
    "Nsig2_error = 150.83\n",
    "\n",
    "# Calculate efficiency\n",
    "efficiency = (2*Nsig2) / ((2*Nsig2) + Nsig1)\n",
    "\n",
    "# Partial derivatives\n",
    "d_eta_d_Nsig1 = -Nsig2 / (Nsig1 + Nsig2)**2\n",
    "d_eta_d_Nsig2 = 1 / (Nsig1 + Nsig2)\n",
    "\n",
    "# Propagated uncertainty\n",
    "efficiency_error = np.sqrt((d_eta_d_Nsig1 * Nsig1_error)**2 + (d_eta_d_Nsig2 * Nsig2_error)**2)\n",
    "\n",
    "print(f\"Efficiency_EE_hist3: {efficiency:.4f} ± {efficiency_error:.4f}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "722b346e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 5 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "### best and final 1 ###\n",
    "\n",
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionEE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_2idpass_EE_hist1;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield\n",
    "    background = exponential_background(x, a, b)\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)\n",
    "signal_fraction_guess = 0.95\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters\n",
    "initial_params = [\n",
    "    91.1876, 2.4952, 91.0, 2.0, 1.0, -0.01, signal_yield_guess\n",
    "]\n",
    "\n",
    "# Bounds for Parameters\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],\n",
    "    [94, 5.5, 94, 7.0, np.inf, 1.0, total_yield * 1.5]\n",
    ")\n",
    "\n",
    "# Number of bootstrap iterations\n",
    "n_bootstrap = 500\n",
    "\n",
    "# Arrays to store fitted parameters\n",
    "signal_params = []  # For signal-related parameters (m, gamma, mu, sigma, sig_yield)\n",
    "background_params = []  # For background-related parameters (a, b)\n",
    "\n",
    "# Perform bootstrapping\n",
    "for _ in range(n_bootstrap):\n",
    "    # Generate a resampled histogram with replacement\n",
    "    resampled_y_data = np.random.poisson(y_data)  # Resample assuming Poisson statistics\n",
    "\n",
    "    try:\n",
    "        # Fit the resampled data\n",
    "        popt_resampled, _ = curve_fit(\n",
    "            fit_function, x_data, resampled_y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    "        )\n",
    "        \n",
    "        # Store signal parameters\n",
    "        signal_params.append(popt_resampled[:5])  # m, gamma, mu, sigma, sig_yield\n",
    "        \n",
    "        # Store background parameters\n",
    "        background_params.append(popt_resampled[4:6])  # a, b\n",
    "    \n",
    "    except RuntimeError:\n",
    "        # Skip fits that fail to converge\n",
    "        continue\n",
    "\n",
    "# Convert collected parameters to numpy arrays for easier indexing\n",
    "signal_params = np.array(signal_params)\n",
    "background_params = np.array(background_params)\n",
    "\n",
    "# Plotting signal parameter distributions\n",
    "plt.figure(figsize=(12, 8))\n",
    "signal_labels = [\"Mass (m)\", \"Width (gamma)\", \"Mean (mu)\", \"Sigma\", \"Signal Yield\"]\n",
    "for i, param in enumerate(signal_labels):\n",
    "    plt.subplot(3, 2, i + 1)\n",
    "    plt.hist(signal_params[:, i], bins=30, color='blue', alpha=0.7)\n",
    "    if param == \"Sigma\":\n",
    "        plt.hist(signal_params[:, i],range=(0,5), bins=100, color='blue', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n",
    "# Plotting background parameter distributions\n",
    "plt.figure(figsize=(12, 4))\n",
    "background_labels = [\"Background Yield (a)\", \"Background Slope (b)\"]\n",
    "for i, param in enumerate(background_labels):\n",
    "    plt.subplot(1, 2, i + 1)\n",
    "    plt.hist(background_params[:, i], bins=30, color='green', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "1b58f93d",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 5 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "### best and final 1 ###\n",
    "\n",
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionEE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_2idpass_EE_hist2;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield\n",
    "    background = exponential_background(x, a, b)\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)\n",
    "signal_fraction_guess = 0.95\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters\n",
    "initial_params = [\n",
    "    91.1876, 2.4952, 91.0, 2.0, 1.0, -0.01, signal_yield_guess\n",
    "]\n",
    "\n",
    "# Bounds for Parameters\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],\n",
    "    [94, 5.5, 94, 7.0, np.inf, 1.0, total_yield * 1.5]\n",
    ")\n",
    "\n",
    "# Number of bootstrap iterations\n",
    "n_bootstrap = 500\n",
    "\n",
    "# Arrays to store fitted parameters\n",
    "signal_params = []  # For signal-related parameters (m, gamma, mu, sigma, sig_yield)\n",
    "background_params = []  # For background-related parameters (a, b)\n",
    "\n",
    "# Perform bootstrapping\n",
    "for _ in range(n_bootstrap):\n",
    "    # Generate a resampled histogram with replacement\n",
    "    resampled_y_data = np.random.poisson(y_data)  # Resample assuming Poisson statistics\n",
    "\n",
    "    try:\n",
    "        # Fit the resampled data\n",
    "        popt_resampled, _ = curve_fit(\n",
    "            fit_function, x_data, resampled_y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    "        )\n",
    "        \n",
    "        # Store signal parameters\n",
    "        signal_params.append(popt_resampled[:5])  # m, gamma, mu, sigma, sig_yield\n",
    "        \n",
    "        # Store background parameters\n",
    "        background_params.append(popt_resampled[4:6])  # a, b\n",
    "    \n",
    "    except RuntimeError:\n",
    "        # Skip fits that fail to converge\n",
    "        continue\n",
    "\n",
    "# Convert collected parameters to numpy arrays for easier indexing\n",
    "signal_params = np.array(signal_params)\n",
    "background_params = np.array(background_params)\n",
    "\n",
    "# Plotting signal parameter distributions\n",
    "plt.figure(figsize=(12, 8))\n",
    "signal_labels = [\"Mass (m)\", \"Width (gamma)\", \"Mean (mu)\", \"Sigma\", \"Signal Yield\"]\n",
    "for i, param in enumerate(signal_labels):\n",
    "    plt.subplot(3, 2, i + 1)\n",
    "    plt.hist(signal_params[:, i], bins=30, color='blue', alpha=0.7)\n",
    "    if param == \"Sigma\":\n",
    "        plt.hist(signal_params[:, i],range=(0,5), bins=100, color='blue', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n",
    "# Plotting background parameter distributions\n",
    "plt.figure(figsize=(12, 4))\n",
    "background_labels = [\"Background Yield (a)\", \"Background Slope (b)\"]\n",
    "for i, param in enumerate(background_labels):\n",
    "    plt.subplot(1, 2, i + 1)\n",
    "    plt.hist(background_params[:, i], bins=30, color='green', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "3c65dfdb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 5 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "### best and final 1 ###\n",
    "\n",
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionEE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_2idpass_EE_hist3;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield\n",
    "    background = exponential_background(x, a, b)\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)\n",
    "signal_fraction_guess = 0.95\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters\n",
    "initial_params = [\n",
    "    91.1876, 2.4952, 91.0, 2.0, 1.0, -0.01, signal_yield_guess\n",
    "]\n",
    "\n",
    "# Bounds for Parameters\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],\n",
    "    [94, 5.5, 94, 7.0, np.inf, 1.0, total_yield * 1.5]\n",
    ")\n",
    "\n",
    "# Number of bootstrap iterations\n",
    "n_bootstrap = 500\n",
    "\n",
    "# Arrays to store fitted parameters\n",
    "signal_params = []  # For signal-related parameters (m, gamma, mu, sigma, sig_yield)\n",
    "background_params = []  # For background-related parameters (a, b)\n",
    "\n",
    "# Perform bootstrapping\n",
    "for _ in range(n_bootstrap):\n",
    "    # Generate a resampled histogram with replacement\n",
    "    resampled_y_data = np.random.poisson(y_data)  # Resample assuming Poisson statistics\n",
    "\n",
    "    try:\n",
    "        # Fit the resampled data\n",
    "        popt_resampled, _ = curve_fit(\n",
    "            fit_function, x_data, resampled_y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    "        )\n",
    "        \n",
    "        # Store signal parameters\n",
    "        signal_params.append(popt_resampled[:5])  # m, gamma, mu, sigma, sig_yield\n",
    "        \n",
    "        # Store background parameters\n",
    "        background_params.append(popt_resampled[4:6])  # a, b\n",
    "    \n",
    "    except RuntimeError:\n",
    "        # Skip fits that fail to converge\n",
    "        continue\n",
    "\n",
    "# Convert collected parameters to numpy arrays for easier indexing\n",
    "signal_params = np.array(signal_params)\n",
    "background_params = np.array(background_params)\n",
    "\n",
    "# Plotting signal parameter distributions\n",
    "plt.figure(figsize=(12, 8))\n",
    "signal_labels = [\"Mass (m)\", \"Width (gamma)\", \"Mean (mu)\", \"Sigma\", \"Signal Yield\"]\n",
    "for i, param in enumerate(signal_labels):\n",
    "    plt.subplot(3, 2, i + 1)\n",
    "    plt.hist(signal_params[:, i], bins=30, color='blue', alpha=0.7)\n",
    "    if param == \"Sigma\":\n",
    "        plt.hist(signal_params[:, i],range=(0,5), bins=100, color='blue', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n",
    "# Plotting background parameter distributions\n",
    "plt.figure(figsize=(12, 4))\n",
    "background_labels = [\"Background Yield (a)\", \"Background Slope (b)\"]\n",
    "for i, param in enumerate(background_labels):\n",
    "    plt.subplot(1, 2, i + 1)\n",
    "    plt.hist(background_params[:, i], bins=30, color='green', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "01d3bd49",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 5 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "### best and final 1 ###\n",
    "\n",
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionEE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_1idpass_EE_hist1;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield\n",
    "    background = exponential_background(x, a, b)\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)\n",
    "signal_fraction_guess = 0.95\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters\n",
    "initial_params = [\n",
    "    91.1876, 2.4952, 91.0, 2.0, 1.0, -0.01, signal_yield_guess\n",
    "]\n",
    "\n",
    "# Bounds for Parameters\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],\n",
    "    [94, 5.5, 94, 12.0, np.inf, 1.0, total_yield * 1.5]\n",
    ")\n",
    "\n",
    "# Number of bootstrap iterations\n",
    "n_bootstrap = 500\n",
    "\n",
    "# Arrays to store fitted parameters\n",
    "signal_params = []  # For signal-related parameters (m, gamma, mu, sigma, sig_yield)\n",
    "background_params = []  # For background-related parameters (a, b)\n",
    "\n",
    "# Perform bootstrapping\n",
    "for _ in range(n_bootstrap):\n",
    "    # Generate a resampled histogram with replacement\n",
    "    resampled_y_data = np.random.poisson(y_data)  # Resample assuming Poisson statistics\n",
    "\n",
    "    try:\n",
    "        # Fit the resampled data\n",
    "        popt_resampled, _ = curve_fit(\n",
    "            fit_function, x_data, resampled_y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    "        )\n",
    "        \n",
    "        # Store signal parameters\n",
    "        signal_params.append(popt_resampled[:5])  # m, gamma, mu, sigma, sig_yield\n",
    "        \n",
    "        # Store background parameters\n",
    "        background_params.append(popt_resampled[4:6])  # a, b\n",
    "    \n",
    "    except RuntimeError:\n",
    "        # Skip fits that fail to converge\n",
    "        continue\n",
    "\n",
    "# Convert collected parameters to numpy arrays for easier indexing\n",
    "signal_params = np.array(signal_params)\n",
    "background_params = np.array(background_params)\n",
    "\n",
    "# Plotting signal parameter distributions\n",
    "plt.figure(figsize=(12, 8))\n",
    "signal_labels = [\"Mass (m)\", \"Width (gamma)\", \"Mean (mu)\", \"Sigma\", \"Signal Yield\"]\n",
    "for i, param in enumerate(signal_labels):\n",
    "    plt.subplot(3, 2, i + 1)\n",
    "    plt.hist(signal_params[:, i], bins=30, color='blue', alpha=0.7)\n",
    "    if param == \"Sigma\":\n",
    "        plt.hist(signal_params[:, i],range=(0,5), bins=100, color='blue', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n",
    "# Plotting background parameter distributions\n",
    "plt.figure(figsize=(12, 4))\n",
    "background_labels = [\"Background Yield (a)\", \"Background Slope (b)\"]\n",
    "for i, param in enumerate(background_labels):\n",
    "    plt.subplot(1, 2, i + 1)\n",
    "    plt.hist(background_params[:, i], bins=30, color='green', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "dce27046",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 5 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "### best and final 1 ###\n",
    "\n",
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionEE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_1idpass_EE_hist2;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield\n",
    "    background = exponential_background(x, a, b)\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)\n",
    "signal_fraction_guess = 0.95\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters\n",
    "initial_params = [\n",
    "    91.1876, 2.4952, 91.0, 2.0, 1.0, -0.01, signal_yield_guess\n",
    "]\n",
    "\n",
    "# Bounds for Parameters\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],\n",
    "    [94, 5.5, 94, 7.0, np.inf, 1.0, total_yield * 1.5]\n",
    ")\n",
    "\n",
    "# Number of bootstrap iterations\n",
    "n_bootstrap = 500\n",
    "\n",
    "# Arrays to store fitted parameters\n",
    "signal_params = []  # For signal-related parameters (m, gamma, mu, sigma, sig_yield)\n",
    "background_params = []  # For background-related parameters (a, b)\n",
    "\n",
    "# Perform bootstrapping\n",
    "for _ in range(n_bootstrap):\n",
    "    # Generate a resampled histogram with replacement\n",
    "    resampled_y_data = np.random.poisson(y_data)  # Resample assuming Poisson statistics\n",
    "\n",
    "    try:\n",
    "        # Fit the resampled data\n",
    "        popt_resampled, _ = curve_fit(\n",
    "            fit_function, x_data, resampled_y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    "        )\n",
    "        \n",
    "        # Store signal parameters\n",
    "        signal_params.append(popt_resampled[:5])  # m, gamma, mu, sigma, sig_yield\n",
    "        \n",
    "        # Store background parameters\n",
    "        background_params.append(popt_resampled[4:6])  # a, b\n",
    "    \n",
    "    except RuntimeError:\n",
    "        # Skip fits that fail to converge\n",
    "        continue\n",
    "\n",
    "# Convert collected parameters to numpy arrays for easier indexing\n",
    "signal_params = np.array(signal_params)\n",
    "background_params = np.array(background_params)\n",
    "\n",
    "# Plotting signal parameter distributions\n",
    "plt.figure(figsize=(12, 8))\n",
    "signal_labels = [\"Mass (m)\", \"Width (gamma)\", \"Mean (mu)\", \"Sigma\", \"Signal Yield\"]\n",
    "for i, param in enumerate(signal_labels):\n",
    "    plt.subplot(3, 2, i + 1)\n",
    "    plt.hist(signal_params[:, i], bins=30, color='blue', alpha=0.7)\n",
    "    if param == \"Sigma\":\n",
    "        plt.hist(signal_params[:, i],range=(0,5), bins=100, color='blue', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n",
    "# Plotting background parameter distributions\n",
    "plt.figure(figsize=(12, 4))\n",
    "background_labels = [\"Background Yield (a)\", \"Background Slope (b)\"]\n",
    "for i, param in enumerate(background_labels):\n",
    "    plt.subplot(1, 2, i + 1)\n",
    "    plt.hist(background_params[:, i], bins=30, color='green', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "26981693",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 5 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "### best and final 1 ###\n",
    "\n",
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionEE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_1idpass_EE_hist3;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield\n",
    "    background = exponential_background(x, a, b)\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)\n",
    "signal_fraction_guess = 0.95\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters\n",
    "initial_params = [\n",
    "    91.1876, 2.4952, 91.0, 2.0, 1.0, -0.01, signal_yield_guess\n",
    "]\n",
    "\n",
    "# Bounds for Parameters\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],\n",
    "    [94, 5.5, 94, 12.0, np.inf, 1.0, total_yield * 1.5]\n",
    ")\n",
    "\n",
    "# Number of bootstrap iterations\n",
    "n_bootstrap = 500\n",
    "\n",
    "# Arrays to store fitted parameters\n",
    "signal_params = []  # For signal-related parameters (m, gamma, mu, sigma, sig_yield)\n",
    "background_params = []  # For background-related parameters (a, b)\n",
    "\n",
    "# Perform bootstrapping\n",
    "for _ in range(n_bootstrap):\n",
    "    # Generate a resampled histogram with replacement\n",
    "    resampled_y_data = np.random.poisson(y_data)  # Resample assuming Poisson statistics\n",
    "\n",
    "    try:\n",
    "        # Fit the resampled data\n",
    "        popt_resampled, _ = curve_fit(\n",
    "            fit_function, x_data, resampled_y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    "        )\n",
    "        \n",
    "        # Store signal parameters\n",
    "        signal_params.append(popt_resampled[:5])  # m, gamma, mu, sigma, sig_yield\n",
    "        \n",
    "        # Store background parameters\n",
    "        background_params.append(popt_resampled[4:6])  # a, b\n",
    "    \n",
    "    except RuntimeError:\n",
    "        # Skip fits that fail to converge\n",
    "        continue\n",
    "\n",
    "# Convert collected parameters to numpy arrays for easier indexing\n",
    "signal_params = np.array(signal_params)\n",
    "background_params = np.array(background_params)\n",
    "\n",
    "# Plotting signal parameter distributions\n",
    "plt.figure(figsize=(12, 8))\n",
    "signal_labels = [\"Mass (m)\", \"Width (gamma)\", \"Mean (mu)\", \"Sigma\", \"Signal Yield\"]\n",
    "for i, param in enumerate(signal_labels):\n",
    "    plt.subplot(3, 2, i + 1)\n",
    "    plt.hist(signal_params[:, i], bins=30, color='blue', alpha=0.7)\n",
    "    if param == \"Sigma\":\n",
    "        plt.hist(signal_params[:, i],range=(0,5), bins=100, color='blue', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n",
    "# Plotting background parameter distributions\n",
    "plt.figure(figsize=(12, 4))\n",
    "background_labels = [\"Background Yield (a)\", \"Background Slope (b)\"]\n",
    "for i, param in enumerate(background_labels):\n",
    "    plt.subplot(1, 2, i + 1)\n",
    "    plt.hist(background_params[:, i], bins=30, color='green', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "b0a6d94e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Signal Yield: 4070.17 ± 169.98\n",
      "Background Yield: 76.63 ± 68.56\n",
      "ID efficiency : 0.7774 ± 0.0112\n",
      "Background Slope: -0.02 ± 0.01\n",
      "Chi-squared: 49.78\n",
      "Degrees of Freedom: 53\n",
      "Chi-squared per dof: 0.94\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 504x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionEE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_1idpass_EE_hist1;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "\n",
    "# Re-bin the data to 60 bins\n",
    "new_bin_count = 60\n",
    "new_hist_values, new_hist_edges = np.histogram(\n",
    "    x_data, bins=new_bin_count, weights=y_data\n",
    ")\n",
    "x_data = (new_hist_edges[:-1] + new_hist_edges[1:]) / 2  # Bin centers\n",
    "y_data = new_hist_values\n",
    "y_errors = np.sqrt(y_data)  # Recalculate errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    # Breit-Wigner (Cauchy PDF)\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    # Gaussian (Normal distribution)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    # Convolution approximation (pointwise multiplication, normalize after)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    # a: Exponential normalization (background yield)\n",
    "    # b: Exponential slope (background decay)\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    # Signal model\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield  # Scale signal by signal yield\n",
    "\n",
    "    # Exponential background model (with varying slope)\n",
    "    background = exponential_background(x, a, b)\n",
    "    \n",
    "    # Combine signal and background\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)  \n",
    "signal_fraction_guess = 0.95  # Increase signal fraction guess (e.g., 0.95 or 0.9)\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters (signal and background yield fixed)\n",
    "initial_params = [\n",
    "    91.1876,  # m: Breit-Wigner mass\n",
    "    2.4952,   # gamma: Breit-Wigner width\n",
    "    91.0,     # mu: Gaussian mean\n",
    "    2.0,      # sigma: Gaussian standard deviation\n",
    "    1.0,      # a: Exponential constant term (background normalization)\n",
    "    -0.01,    # b: Exponential slope (background decay)\n",
    "    signal_yield_guess,   # sig_yield: Signal yield\n",
    "]\n",
    "\n",
    "# Bounds for Parameters (background yield and slope are allowed to vary)\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],  # Lower bounds\n",
    "    [94, 5.5, 94, 7.0, np.inf, 1.0, total_yield * 1.5]  # Upper bounds\n",
    ")\n",
    "\n",
    "# Fit the data\n",
    "popt, pcov = curve_fit(\n",
    "    fit_function, x_data, y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    ")\n",
    "\n",
    "# Extracting the fitted parameters\n",
    "(m, gamma, mu, sigma, a, b, sig_yield) = popt\n",
    "\n",
    "# Compute errors in the fit parameters\n",
    "sig_yield_error = np.sqrt(pcov[6, 6])  # Error for sig_yield (7th parameter)\n",
    "background_error = np.sqrt(pcov[4, 4])  # Error for background (5th parameter)\n",
    "\n",
    "# Print the results\n",
    "print(f\"Signal Yield: {sig_yield:.2f} ± {sig_yield_error:.2f}\")\n",
    "print(f\"Background Yield: {a:.2f} ± {background_error:.2f}\")\n",
    "print(f\"ID efficiency : 0.7774 ± 0.0112\")\n",
    "print(f\"Background Slope: {b:.2f} ± {np.sqrt(pcov[5, 5]):.2f}\")\n",
    "\n",
    "# Generate the signal and background components for plotting\n",
    "signal = convoluted_signal(x_data, m, gamma, mu, sigma)\n",
    "signal *= sig_yield\n",
    "\n",
    "background = exponential_background(x_data, a, b)\n",
    "\n",
    "# Generate the fit curve\n",
    "fit = signal + background\n",
    "\n",
    "# Compute the Chi-squared value\n",
    "residuals = (y_data - fit) / y_errors  # Residuals\n",
    "chi_squared = np.sum(residuals**2)  # Chi-squared value\n",
    "dof = len(x_data) - len(popt)  # Degrees of freedom\n",
    "chi_squared_dof = chi_squared / dof  # Chi-squared per dof\n",
    "\n",
    "# Print Chi-squared and Degrees of Freedom\n",
    "print(f\"Chi-squared: {chi_squared:.2f}\")\n",
    "print(f\"Degrees of Freedom: {dof}\")\n",
    "print(f\"Chi-squared per dof: {chi_squared_dof:.2f}\")\n",
    "\n",
    "# Diagnostic plot of the fit\n",
    "plt.figure(figsize=(7, 6))\n",
    "plt.errorbar(x_data, y_data, yerr=y_errors, fmt='o', label='Data', color='black')\n",
    "plt.plot(x_data, fit, label='Fit', color='red')\n",
    "plt.plot(x_data, signal, '--', label='Signal', color='blue')\n",
    "plt.plot(x_data, background, '--', label='Background', color='green')\n",
    "plt.xlabel(\"Mass\")\n",
    "plt.ylabel(\"Events\")\n",
    "plt.legend()\n",
    "plt.title(\"Signal and Background Fit with Varying Exponential Background Slope\")\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e6f21d25",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "62899da1",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a3ad2d76",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
