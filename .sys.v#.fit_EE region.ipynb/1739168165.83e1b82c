{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "f3153cb6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Signal Yield: 14091.75 ± 210.84\n",
      "Background Yield: 14.34 ± 13.45\n",
      "ID efficiency : 0.7774 ± 0.0112\n",
      "Background Slope: -0.00 ± 0.01\n",
      "Chi-squared: 107.88\n",
      "Degrees of Freedom: 113\n",
      "Chi-squared per dof: 0.95\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 504x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "error value saved to eN_2Iee1.txt\n",
      "value saved to N_2Iee1.txt\n"
     ]
    }
   ],
   "source": [
    "###best and final 1 ###\n",
    "\n",
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionEE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_2idpass_EE_hist1;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    # Breit-Wigner (Cauchy PDF)\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    # Gaussian (Normal distribution)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    # Convolution approximation (pointwise multiplication, normalize after)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    # a: Exponential normalization (background yield)\n",
    "    # b: Exponential slope (background decay)\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    # Signal model\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield  # Scale signal by signal yield\n",
    "\n",
    "    # Exponential background model (with varying slope)\n",
    "    background = exponential_background(x, a, b)\n",
    "    \n",
    "    # Combine signal and background\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)  \n",
    "signal_fraction_guess = 0.95  # Increase signal fraction guess (e.g., 0.95 or 0.9)\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters (signal and background yield fixed)\n",
    "initial_params = [\n",
    "    91.1876,  # m: Breit-Wigner mass\n",
    "    2.4952,   # gamma: Breit-Wigner width\n",
    "    91.0,     # mu: Gaussian mean\n",
    "    2.0,      # sigma: Gaussian standard deviation\n",
    "    1.0,      # a: Exponential constant term (background normalization)\n",
    "    -0.01,    # b: Exponential slope (background decay)\n",
    "    signal_yield_guess,   # sig_yield: Signal yield\n",
    "]\n",
    "\n",
    "# Bounds for Parameters (background yield and slope are allowed to vary)\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],  # Lower bounds\n",
    "    [94, 5.5, 94, 7.0, np.inf, 1.0, total_yield * 1.5]  # Upper bounds\n",
    ")\n",
    "\n",
    "# Fit the data\n",
    "popt, pcov = curve_fit(\n",
    "    fit_function, x_data, y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    ")\n",
    "\n",
    "# Extracting the fitted parameters\n",
    "(m, gamma, mu, sigma, a, b, sig_yield) = popt\n",
    "\n",
    "# Compute errors in the fit parameters\n",
    "sig_yield_error = np.sqrt(pcov[6, 6])  # Error for sig_yield (7th parameter)\n",
    "background_error = np.sqrt(pcov[4, 4])  # Error for background (5th parameter)\n",
    "\n",
    "# Print the results\n",
    "print(f\"Signal Yield: {sig_yield:.2f} ± {sig_yield_error:.2f}\")\n",
    "print(f\"Background Yield: {a:.2f} ± {background_error:.2f}\")\n",
    "print(f\"ID efficiency : 0.7774 ± 0.0112\")\n",
    "print(f\"Background Slope: {b:.2f} ± {np.sqrt(pcov[5, 5]):.2f}\")\n",
    "\n",
    "# Generate the signal and background components for plotting\n",
    "signal = convoluted_signal(x_data, m, gamma, mu, sigma)\n",
    "signal *= sig_yield\n",
    "\n",
    "background = exponential_background(x_data, a, b)\n",
    "\n",
    "# Generate the fit curve\n",
    "fit = signal + background\n",
    "\n",
    "# Compute the Chi-squared value\n",
    "residuals = (y_data - fit) / y_errors  # Residuals\n",
    "chi_squared = np.sum(residuals**2)  # Chi-squared value\n",
    "dof = len(x_data) - len(popt)  # Degrees of freedom\n",
    "chi_squared_dof = chi_squared / dof  # Chi-squared per dof\n",
    "\n",
    "# Print Chi-squared and Degrees of Freedom\n",
    "print(f\"Chi-squared: {chi_squared:.2f}\")\n",
    "print(f\"Degrees of Freedom: {dof}\")\n",
    "print(f\"Chi-squared per dof: {chi_squared_dof:.2f}\")\n",
    "\n",
    "\n",
    "\n",
    "# Diagnostic plot of the fit\n",
    "plt.figure(figsize=(7, 6))\n",
    "plt.errorbar(x_data, y_data, yerr=y_errors, fmt='o', label='Data', color='black')\n",
    "plt.plot(x_data, fit, label='Fit', color='red')\n",
    "plt.plot(x_data, signal, '--', label='Signal', color='blue')\n",
    "plt.plot(x_data, background, '--', label='Background', color='green')\n",
    "\n",
    "plt.xlabel(\"Mass (GeV)\" , fontsize=15)\n",
    "plt.ylabel(\"Events\" , fontsize=15)\n",
    "plt.legend()\n",
    "plt.show()\n",
    "with open(\"eN_2Iee1.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield_error}\\n\")\n",
    "    print(\"error value saved to eN_2Iee1.txt\")\n",
    "with open(\"N_2Iee1.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield}\\n\")\n",
    "    print(\"value saved to N_2Iee1.txt\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "e89771e3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Signal Yield: 12274.78 ± 177.34\n",
      "Background Yield: 40.38 ± 29.05\n",
      "Background Slope: -0.02 ± 0.01\n",
      "Chi-squared: 121.36\n",
      "Degrees of Freedom: 113\n",
      "Chi-squared per dof: 1.07\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "error value saved to eN_2Iee2.txt\n",
      "value saved to N_2Iee2.txt\n"
     ]
    }
   ],
   "source": [
    "###best and final 2 ###\n",
    "\n",
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionEE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_2idpass_EE_hist2;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    # Breit-Wigner (Cauchy PDF)\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    # Gaussian (Normal distribution)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    # Convolution approximation (pointwise multiplication, normalize after)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    # a: Exponential normalization (background yield)\n",
    "    # b: Exponential slope (background decay)\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    # Signal model\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield  # Scale signal by signal yield\n",
    "\n",
    "    # Exponential background model (with varying slope)\n",
    "    background = exponential_background(x, a, b)\n",
    "    \n",
    "    # Combine signal and background\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)  \n",
    "signal_fraction_guess = 0.95  # Increase signal fraction guess (e.g., 0.95 or 0.9)\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters (signal and background yield fixed)\n",
    "initial_params = [\n",
    "    91.1876,  # m: Breit-Wigner mass\n",
    "    2.4952,   # gamma: Breit-Wigner width\n",
    "    91.0,     # mu: Gaussian mean\n",
    "    2.0,      # sigma: Gaussian standard deviation\n",
    "    1.0,      # a: Exponential constant term (background normalization)\n",
    "    -0.01,    # b: Exponential slope (background decay)\n",
    "    signal_yield_guess,   # sig_yield: Signal yield\n",
    "]\n",
    "\n",
    "# Bounds for Parameters (background yield and slope are allowed to vary)\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],  # Lower bounds\n",
    "    [94, 10.5, 94, 7.0, np.inf, 1.0, total_yield * 1.5]  # Upper bounds\n",
    ")\n",
    "\n",
    "# Fit the data\n",
    "popt, pcov = curve_fit(\n",
    "    fit_function, x_data, y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    ")\n",
    "\n",
    "# Extracting the fitted parameters\n",
    "(m, gamma, mu, sigma, a, b, sig_yield) = popt\n",
    "\n",
    "# Compute errors in the fit parameters\n",
    "sig_yield_error = np.sqrt(pcov[6, 6])  # Error for sig_yield (7th parameter)\n",
    "background_error = np.sqrt(pcov[4, 4])  # Error for background (5th parameter)\n",
    "\n",
    "# Print the results\n",
    "print(f\"Signal Yield: {sig_yield:.2f} ± {sig_yield_error:.2f}\")\n",
    "print(f\"Background Yield: {a:.2f} ± {background_error:.2f}\")\n",
    "print(f\"Background Slope: {b:.2f} ± {np.sqrt(pcov[5, 5]):.2f}\")\n",
    "\n",
    "# Generate the signal and background components for plotting\n",
    "signal = convoluted_signal(x_data, m, gamma, mu, sigma)\n",
    "signal *= sig_yield\n",
    "\n",
    "background = exponential_background(x_data, a, b)\n",
    "\n",
    "# Generate the fit curve\n",
    "fit = signal + background\n",
    "\n",
    "# Compute the Chi-squared value\n",
    "residuals = (y_data - fit) / y_errors  # Residuals\n",
    "chi_squared = np.sum(residuals**2)  # Chi-squared value\n",
    "dof = len(x_data) - len(popt)  # Degrees of freedom\n",
    "chi_squared_dof = chi_squared / dof  # Chi-squared per dof\n",
    "\n",
    "# Print Chi-squared and Degrees of Freedom\n",
    "print(f\"Chi-squared: {chi_squared:.2f}\")\n",
    "print(f\"Degrees of Freedom: {dof}\")\n",
    "print(f\"Chi-squared per dof: {chi_squared_dof:.2f}\")\n",
    "\n",
    "# Diagnostic plot of the fit\n",
    "plt.figure(figsize=(8, 6))\n",
    "plt.errorbar(x_data, y_data, yerr=y_errors, fmt='o', label='Data', color='black')\n",
    "plt.plot(x_data, fit, label='Fit', color='red')\n",
    "plt.plot(x_data, signal, '--', label='Signal', color='blue')\n",
    "plt.plot(x_data, background, '--', label='Background', color='green')\n",
    "plt.xlabel(\"Mass (GeV)\")\n",
    "plt.ylabel(\"Events\" , fontsiz)\n",
    "plt.legend()\n",
    "plt.show()\n",
    "with open(\"eN_2Iee2.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield_error}\\n\")\n",
    "    print(\"error value saved to eN_2Iee2.txt\")\n",
    "with open(\"N_2Iee2.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield}\\n\")\n",
    "    print(\"value saved to N_2Iee2.txt\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "9eecbdb4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Signal Yield: 10169.65 ± 154.14\n",
      "Background Yield: 43.03 ± 23.65\n",
      "Background Slope: -0.02 ± 0.01\n",
      "Chi-squared: 135.62\n",
      "Degrees of Freedom: 113\n",
      "Chi-squared per dof: 1.20\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "error value saved to eN_2Iee3.txt\n",
      "value saved to N_2Iee3.txt\n"
     ]
    }
   ],
   "source": [
    "###best and final 3 ###\n",
    "\n",
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionEE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_2idpass_EE_hist3;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    # Breit-Wigner (Cauchy PDF)\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    # Gaussian (Normal distribution)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    # Convolution approximation (pointwise multiplication, normalize after)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    # a: Exponential normalization (background yield)\n",
    "    # b: Exponential slope (background decay)\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    # Signal model\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield  # Scale signal by signal yield\n",
    "\n",
    "    # Exponential background model (with varying slope)\n",
    "    background = exponential_background(x, a, b)\n",
    "    \n",
    "    # Combine signal and background\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)  \n",
    "signal_fraction_guess = 0.95  # Increase signal fraction guess (e.g., 0.95 or 0.9)\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters (signal and background yield fixed)\n",
    "initial_params = [\n",
    "    91.1876,  # m: Breit-Wigner mass\n",
    "    2.4952,   # gamma: Breit-Wigner width\n",
    "    91.0,     # mu: Gaussian mean\n",
    "    2.0,      # sigma: Gaussian standard deviation\n",
    "    1.0,      # a: Exponential constant term (background normalization)\n",
    "    -0.01,    # b: Exponential slope (background decay)\n",
    "    signal_yield_guess,   # sig_yield: Signal yield\n",
    "]\n",
    "\n",
    "# Bounds for Parameters (background yield and slope are allowed to vary)\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],  # Lower bounds\n",
    "    [94, 5.5, 94, 5.0, np.inf, 1.0, total_yield * 1.5]  # Upper bounds\n",
    ")\n",
    "\n",
    "# Fit the data\n",
    "popt, pcov = curve_fit(\n",
    "    fit_function, x_data, y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    ")\n",
    "\n",
    "# Extracting the fitted parameters\n",
    "(m, gamma, mu, sigma, a, b, sig_yield) = popt\n",
    "\n",
    "# Compute errors in the fit parameters\n",
    "sig_yield_error = np.sqrt(pcov[6, 6])  # Error for sig_yield (7th parameter)\n",
    "background_error = np.sqrt(pcov[4, 4])  # Error for background (5th parameter)\n",
    "\n",
    "# Print the results\n",
    "print(f\"Signal Yield: {sig_yield:.2f} ± {sig_yield_error:.2f}\")\n",
    "print(f\"Background Yield: {a:.2f} ± {background_error:.2f}\")\n",
    "print(f\"Background Slope: {b:.2f} ± {np.sqrt(pcov[5, 5]):.2f}\")\n",
    "\n",
    "# Generate the signal and background components for plotting\n",
    "signal = convoluted_signal(x_data, m, gamma, mu, sigma)\n",
    "signal *= sig_yield\n",
    "\n",
    "background = exponential_background(x_data, a, b)\n",
    "\n",
    "# Generate the fit curve\n",
    "fit = signal + background\n",
    "\n",
    "# Compute the Chi-squared value\n",
    "residuals = (y_data - fit) / y_errors  # Residuals\n",
    "chi_squared = np.sum(residuals**2)  # Chi-squared value\n",
    "dof = len(x_data) - len(popt)  # Degrees of freedom\n",
    "chi_squared_dof = chi_squared / dof  # Chi-squared per dof\n",
    "\n",
    "# Print Chi-squared and Degrees of Freedom\n",
    "print(f\"Chi-squared: {chi_squared:.2f}\")\n",
    "print(f\"Degrees of Freedom: {dof}\")\n",
    "print(f\"Chi-squared per dof: {chi_squared_dof:.2f}\")\n",
    "\n",
    "# Diagnostic plot of the fit\n",
    "plt.figure(figsize=(8, 6))\n",
    "plt.errorbar(x_data, y_data, yerr=y_errors, fmt='o', label='Data', color='black')\n",
    "plt.plot(x_data, fit, label='Fit', color='red')\n",
    "plt.plot(x_data, signal, '--', label='Signal', color='blue')\n",
    "plt.plot(x_data, background, '--', label='Background', color='green')\n",
    "plt.xlabel(\"Mass\")\n",
    "plt.ylabel(\"Events\")\n",
    "plt.legend()\n",
    "plt.title(\"Signal and Background Fit with Varying Exponential Background Slope\")\n",
    "plt.show()\n",
    "with open(\"eN_2Iee3.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield_error}\\n\")\n",
    "    print(\"error value saved to eN_2Iee3.txt\")\n",
    "with open(\"N_2Iee3.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield}\\n\")\n",
    "    print(\"value saved to N_2Iee3.txt\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "4c73c0b8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Signal Yield: 4057.50 ± 163.75\n",
      "Background Yield: 42.57 ± 37.08\n",
      "Background Slope: -0.02 ± 0.01\n",
      "Chi-squared: 102.28\n",
      "Degrees of Freedom: 113\n",
      "Chi-squared per dof: 0.91\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 504x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "error value saved to eN_1Iee1.txt\n",
      "value saved to N_1Iee1.txt\n"
     ]
    }
   ],
   "source": [
    "###best and final 4 ###\n",
    "\n",
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionEE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_1idpass_EE_hist1;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    # Breit-Wigner (Cauchy PDF)\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    # Gaussian (Normal distribution)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    # Convolution approximation (pointwise multiplication, normalize after)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    # a: Exponential normalization (background yield)\n",
    "    # b: Exponential slope (background decay)\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    # Signal model\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield  # Scale signal by signal yield\n",
    "\n",
    "    # Exponential background model (with varying slope)\n",
    "    background = exponential_background(x, a, b)\n",
    "    \n",
    "    # Combine signal and background\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)  \n",
    "signal_fraction_guess = 0.95  # Increase signal fraction guess (e.g., 0.95 or 0.9)\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters (signal and background yield fixed)\n",
    "initial_params = [\n",
    "    91.1876,  # m: Breit-Wigner mass\n",
    "    2.4952,   # gamma: Breit-Wigner width\n",
    "    91.0,     # mu: Gaussian mean\n",
    "    2.0,      # sigma: Gaussian standard deviation\n",
    "    1.0,      # a: Exponential constant term (background normalization)\n",
    "    -0.01,    # b: Exponential slope (background decay)\n",
    "    signal_yield_guess,   # sig_yield: Signal yield\n",
    "]\n",
    "\n",
    "# Bounds for Parameters (background yield and slope are allowed to vary)\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],  # Lower bounds\n",
    "    [94, 10.5, 94, 12.0, np.inf, 1.0, total_yield * 1.5]  # Upper bounds\n",
    ")\n",
    "\n",
    "# Fit the data\n",
    "popt, pcov = curve_fit(\n",
    "    fit_function, x_data, y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    ")\n",
    "\n",
    "# Extracting the fitted parameters\n",
    "(m, gamma, mu, sigma, a, b, sig_yield) = popt\n",
    "\n",
    "# Compute errors in the fit parameters\n",
    "sig_yield_error = np.sqrt(pcov[6, 6])  # Error for sig_yield (7th parameter)\n",
    "background_error = np.sqrt(pcov[4, 4])  # Error for background (5th parameter)\n",
    "\n",
    "# Print the results\n",
    "print(f\"Signal Yield: {sig_yield:.2f} ± {sig_yield_error:.2f}\")\n",
    "print(f\"Background Yield: {a:.2f} ± {background_error:.2f}\")\n",
    "print(f\"Background Slope: {b:.2f} ± {np.sqrt(pcov[5, 5]):.2f}\")\n",
    "\n",
    "# Generate the signal and background components for plotting\n",
    "signal = convoluted_signal(x_data, m, gamma, mu, sigma)\n",
    "signal *= sig_yield\n",
    "\n",
    "background = exponential_background(x_data, a, b)\n",
    "\n",
    "# Generate the fit curve\n",
    "fit = signal + background\n",
    "\n",
    "# Compute the Chi-squared value\n",
    "residuals = (y_data - fit) / y_errors  # Residuals\n",
    "chi_squared = np.sum(residuals**2)  # Chi-squared value\n",
    "dof = len(x_data) - len(popt)  # Degrees of freedom\n",
    "chi_squared_dof = chi_squared / dof  # Chi-squared per dof\n",
    "\n",
    "# Print Chi-squared and Degrees of Freedom\n",
    "print(f\"Chi-squared: {chi_squared:.2f}\")\n",
    "print(f\"Degrees of Freedom: {dof}\")\n",
    "print(f\"Chi-squared per dof: {chi_squared_dof:.2f}\")\n",
    "\n",
    "# Diagnostic plot of the fit\n",
    "plt.figure(figsize=(7, 6))\n",
    "plt.errorbar(x_data, y_data, yerr=y_errors, fmt='o', label='Data', color='black')\n",
    "plt.plot(x_data, fit, label='Fit', color='red')\n",
    "plt.plot(x_data, signal, '--', label='Signal', color='blue')\n",
    "plt.plot(x_data, background, '--', label='Background', color='green')\n",
    "plt.xlabel(\"Mass\")\n",
    "plt.ylabel(\"Events\")\n",
    "plt.legend()\n",
    "plt.title(\"Signal and Background Fit with Varying Exponential Background Slope\")\n",
    "plt.show()\n",
    "with open(\"eN_1Iee1.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield_error}\\n\")\n",
    "    print(\"error value saved to eN_1Iee1.txt\")\n",
    "with open(\"N_1Iee1.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield}\\n\")\n",
    "    print(\"value saved to N_1Iee1.txt\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "a6741d67",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Signal Yield: 3314.33 ± 129.26\n",
      "Background Yield: 85.09 ± 63.97\n",
      "Background Slope: -0.03 ± 0.01\n",
      "Chi-squared: 140.00\n",
      "Degrees of Freedom: 113\n",
      "Chi-squared per dof: 1.24\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "error value saved to eN_1Iee2.txt\n",
      "value saved to N_1Iee2.txt\n"
     ]
    }
   ],
   "source": [
    "###best and final 5 ###\n",
    "\n",
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionEE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_1idpass_EE_hist2;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    # Breit-Wigner (Cauchy PDF)\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    # Gaussian (Normal distribution)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    # Convolution approximation (pointwise multiplication, normalize after)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    # a: Exponential normalization (background yield)\n",
    "    # b: Exponential slope (background decay)\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    # Signal model\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield  # Scale signal by signal yield\n",
    "\n",
    "    # Exponential background model (with varying slope)\n",
    "    background = exponential_background(x, a, b)\n",
    "    \n",
    "    # Combine signal and background\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)  \n",
    "signal_fraction_guess = 0.95  # Increase signal fraction guess (e.g., 0.95 or 0.9)\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters (signal and background yield fixed)\n",
    "initial_params = [\n",
    "    91.1876,  # m: Breit-Wigner mass\n",
    "    2.4952,   # gamma: Breit-Wigner width\n",
    "    91.0,     # mu: Gaussian mean\n",
    "    2.0,      # sigma: Gaussian standard deviation\n",
    "    1.0,      # a: Exponential constant term (background normalization)\n",
    "    -0.01,    # b: Exponential slope (background decay)\n",
    "    signal_yield_guess,   # sig_yield: Signal yield\n",
    "]\n",
    "\n",
    "# Bounds for Parameters (background yield and slope are allowed to vary)\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],  # Lower bounds\n",
    "    [94, 5.5, 94, 5.0, np.inf, 1.0, total_yield * 1.5]  # Upper bounds\n",
    ")\n",
    "\n",
    "# Fit the data\n",
    "popt, pcov = curve_fit(\n",
    "    fit_function, x_data, y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    ")\n",
    "\n",
    "# Extracting the fitted parameters\n",
    "(m, gamma, mu, sigma, a, b, sig_yield) = popt\n",
    "\n",
    "# Compute errors in the fit parameters\n",
    "sig_yield_error = np.sqrt(pcov[6, 6])  # Error for sig_yield (7th parameter)\n",
    "background_error = np.sqrt(pcov[4, 4])  # Error for background (5th parameter)\n",
    "\n",
    "# Print the results\n",
    "print(f\"Signal Yield: {sig_yield:.2f} ± {sig_yield_error:.2f}\")\n",
    "print(f\"Background Yield: {a:.2f} ± {background_error:.2f}\")\n",
    "print(f\"Background Slope: {b:.2f} ± {np.sqrt(pcov[5, 5]):.2f}\")\n",
    "\n",
    "# Generate the signal and background components for plotting\n",
    "signal = convoluted_signal(x_data, m, gamma, mu, sigma)\n",
    "signal *= sig_yield\n",
    "\n",
    "background = exponential_background(x_data, a, b)\n",
    "\n",
    "# Generate the fit curve\n",
    "fit = signal + background\n",
    "\n",
    "# Compute the Chi-squared value\n",
    "residuals = (y_data - fit) / y_errors  # Residuals\n",
    "chi_squared = np.sum(residuals**2)  # Chi-squared value\n",
    "dof = len(x_data) - len(popt)  # Degrees of freedom\n",
    "chi_squared_dof = chi_squared / dof  # Chi-squared per dof\n",
    "\n",
    "# Print Chi-squared and Degrees of Freedom\n",
    "print(f\"Chi-squared: {chi_squared:.2f}\")\n",
    "print(f\"Degrees of Freedom: {dof}\")\n",
    "print(f\"Chi-squared per dof: {chi_squared_dof:.2f}\")\n",
    "\n",
    "# Diagnostic plot of the fit\n",
    "plt.figure(figsize=(8, 6))\n",
    "plt.errorbar(x_data, y_data, yerr=y_errors, fmt='o', label='Data', color='black')\n",
    "plt.plot(x_data, fit, label='Fit', color='red')\n",
    "plt.plot(x_data, signal, '--', label='Signal', color='blue')\n",
    "plt.plot(x_data, background, '--', label='Background', color='green')\n",
    "plt.xlabel(\"Mass\")\n",
    "plt.ylabel(\"Events\")\n",
    "plt.legend()\n",
    "plt.title(\"Signal and Background Fit with Varying Exponential Background Slope\")\n",
    "plt.show()\n",
    "with open(\"eN_1Iee2.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield_error}\\n\")\n",
    "    print(\"error value saved to eN_1Iee2.txt\")\n",
    "with open(\"N_1Iee2.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield}\\n\")\n",
    "    print(\"value saved to N_1Iee2.txt\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "c233b4d0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Signal Yield: 2617.24 ± 153.14\n",
      "Background Yield: 170.06 ± 135.54\n",
      "Background Slope: -0.04 ± 0.01\n",
      "Chi-squared: 114.01\n",
      "Degrees of Freedom: 113\n",
      "Chi-squared per dof: 1.01\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "error value saved to eN_1Iee3.txt\n",
      "value saved to N_1Iee3.txt\n"
     ]
    }
   ],
   "source": [
    "###best and final 6 ###\n",
    "\n",
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionEE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_1idpass_EE_hist3;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    # Breit-Wigner (Cauchy PDF)\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    # Gaussian (Normal distribution)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    # Convolution approximation (pointwise multiplication, normalize after)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    # a: Exponential normalization (background yield)\n",
    "    # b: Exponential slope (background decay)\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    # Signal model\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield  # Scale signal by signal yield\n",
    "\n",
    "    # Exponential background model (with varying slope)\n",
    "    background = exponential_background(x, a, b)\n",
    "    \n",
    "    # Combine signal and background\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)  \n",
    "signal_fraction_guess = 0.95  # Increase signal fraction guess (e.g., 0.95 or 0.9)\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters (signal and background yield fixed)\n",
    "initial_params = [\n",
    "    91.1876,  # m: Breit-Wigner mass\n",
    "    2.4952,   # gamma: Breit-Wigner width\n",
    "    91.0,     # mu: Gaussian mean\n",
    "    2.0,      # sigma: Gaussian standard deviation\n",
    "    1.0,      # a: Exponential constant term (background normalization)\n",
    "    -0.01,    # b: Exponential slope (background decay)\n",
    "    signal_yield_guess,   # sig_yield: Signal yield\n",
    "]\n",
    "\n",
    "# Bounds for Parameters (background yield and slope are allowed to vary)\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],  # Lower bounds\n",
    "    [94, 5.5, 94, 7.0, np.inf, 1.0, total_yield * 1.5]  # Upper bounds\n",
    ")\n",
    "\n",
    "# Fit the data\n",
    "popt, pcov = curve_fit(\n",
    "    fit_function, x_data, y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    ")\n",
    "\n",
    "# Extracting the fitted parameters\n",
    "(m, gamma, mu, sigma, a, b, sig_yield) = popt\n",
    "\n",
    "# Compute errors in the fit parameters\n",
    "sig_yield_error = np.sqrt(pcov[6, 6])  # Error for sig_yield (7th parameter)\n",
    "background_error = np.sqrt(pcov[4, 4])  # Error for background (5th parameter)\n",
    "\n",
    "# Print the results\n",
    "print(f\"Signal Yield: {sig_yield:.2f} ± {sig_yield_error:.2f}\")\n",
    "print(f\"Background Yield: {a:.2f} ± {background_error:.2f}\")\n",
    "print(f\"Background Slope: {b:.2f} ± {np.sqrt(pcov[5, 5]):.2f}\")\n",
    "\n",
    "# Generate the signal and background components for plotting\n",
    "signal = convoluted_signal(x_data, m, gamma, mu, sigma)\n",
    "signal *= sig_yield\n",
    "\n",
    "background = exponential_background(x_data, a, b)\n",
    "\n",
    "# Generate the fit curve\n",
    "fit = signal + background\n",
    "\n",
    "# Compute the Chi-squared value\n",
    "residuals = (y_data - fit) / y_errors  # Residuals\n",
    "chi_squared = np.sum(residuals**2)  # Chi-squared value\n",
    "dof = len(x_data) - len(popt)  # Degrees of freedom\n",
    "chi_squared_dof = chi_squared / dof  # Chi-squared per dof\n",
    "\n",
    "# Print Chi-squared and Degrees of Freedom\n",
    "print(f\"Chi-squared: {chi_squared:.2f}\")\n",
    "print(f\"Degrees of Freedom: {dof}\")\n",
    "print(f\"Chi-squared per dof: {chi_squared_dof:.2f}\")\n",
    "\n",
    "\n",
    "# Diagnostic plot of the fit\n",
    "plt.figure(figsize=(8, 6))\n",
    "plt.errorbar(x_data, y_data, yerr=y_errors, fmt='o', label='Data', color='black')\n",
    "plt.plot(x_data, fit, label='Fit', color='red')\n",
    "plt.plot(x_data, signal, '--', label='Signal', color='blue')\n",
    "plt.plot(x_data, background, '--', label='Background', color='green')\n",
    "plt.xlabel(\"Mass\")\n",
    "plt.ylabel(\"Events\")\n",
    "plt.legend()\n",
    "plt.title(\"Signal and Background Fit with Varying Exponential Background Slope\")\n",
    "plt.show()\n",
    "with open(\"eN_1Iee3.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield_error}\\n\")\n",
    "    print(\"error value saved to eN_1Iee3.txt\")\n",
    "with open(\"N_1Iee3.txt\", \"w\") as file:\n",
    "    file.write(f\"{sig_yield}\\n\")\n",
    "    print(\"value saved to N_1Iee3.txt\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "670c9273",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Efficiency_EE_hist1: 0.8742 ± 0.0136\n"
     ]
    }
   ],
   "source": [
    "# eff cal for EE_hist1 #\n",
    "\n",
    "import numpy as np\n",
    "\n",
    "# Given data with uncertainties\n",
    "Nsig1 = 4057.50 \n",
    "Nsig1_error = 163.75\n",
    "Nsig2 =  14091.75 \n",
    "Nsig2_error = 210.84 \n",
    "\n",
    "# Calculate efficiency\n",
    "efficiency = (2*Nsig2) / ((2*Nsig2) + Nsig1)\n",
    "\n",
    "# Partial derivatives\n",
    "d_eta_d_Nsig1 = -Nsig2 / (Nsig1 + Nsig2)**2\n",
    "d_eta_d_Nsig2 = 1 / (Nsig1 + Nsig2)\n",
    "\n",
    "# Propagated uncertainty\n",
    "efficiency_error = np.sqrt((d_eta_d_Nsig1 * Nsig1_error)**2 + (d_eta_d_Nsig2 * Nsig2_error)**2)\n",
    "\n",
    "print(f\"Efficiency_EE_hist1: {efficiency:.4f} ± {efficiency_error:.4f}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "9e1f78da",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Efficiency_EE_hist2: 0.8811 ± 0.0120\n"
     ]
    }
   ],
   "source": [
    "# eff cal for EE_hist2 #\n",
    "\n",
    "import numpy as np\n",
    "\n",
    "# Given data with uncertainties\n",
    "Nsig1 = 3314.33\n",
    "Nsig1_error = 126.18\n",
    "Nsig2 = 12274.78\n",
    "Nsig2_error = 159.35\n",
    "\n",
    "# Calculate efficiency\n",
    "efficiency = (2*Nsig2) / ((2*Nsig2) + Nsig1)\n",
    "\n",
    "# Partial derivatives\n",
    "d_eta_d_Nsig1 = -Nsig2 / (Nsig1 + Nsig2)**2\n",
    "d_eta_d_Nsig2 = 1 / (Nsig1 + Nsig2)\n",
    "\n",
    "# Propagated uncertainty\n",
    "efficiency_error = np.sqrt((d_eta_d_Nsig1 * Nsig1_error)**2 + (d_eta_d_Nsig2 * Nsig2_error)**2)\n",
    "\n",
    "print(f\"Efficiency_EE_hist2: {efficiency:.4f} ± {efficiency_error:.4f}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "004f2ce7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Efficiency_EE_hist3: 0.8860 ± 0.0131\n"
     ]
    }
   ],
   "source": [
    "# eff cal for EE_hist3 #\n",
    "\n",
    "import numpy as np\n",
    "\n",
    "# Given data with uncertainties\n",
    "Nsig1 = 2617.24\n",
    "Nsig1_error = 92.87\n",
    "Nsig2 = 10169.65\n",
    "Nsig2_error = 150.83\n",
    "\n",
    "# Calculate efficiency\n",
    "efficiency = (2*Nsig2) / ((2*Nsig2) + Nsig1)\n",
    "\n",
    "# Partial derivatives\n",
    "d_eta_d_Nsig1 = -Nsig2 / (Nsig1 + Nsig2)**2\n",
    "d_eta_d_Nsig2 = 1 / (Nsig1 + Nsig2)\n",
    "\n",
    "# Propagated uncertainty\n",
    "efficiency_error = np.sqrt((d_eta_d_Nsig1 * Nsig1_error)**2 + (d_eta_d_Nsig2 * Nsig2_error)**2)\n",
    "\n",
    "print(f\"Efficiency_EE_hist3: {efficiency:.4f} ± {efficiency_error:.4f}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "722b346e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA1gAAAI4CAYAAAB3HEhGAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjguMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/H5lhTAAAACXBIWXMAAAsTAAALEwEAmpwYAABgwElEQVR4nO3deZxkVX3//9dbQBFBkTDgsAyjERckCjiuREWRBJVFk4gYNbgkhLjE9aegRlETQzQazNcYg6gguLAoyBg3RHGJyioCCooiAjIyA4osogh+fn/c21I0vVR1V3VVdb+ej0c/qu7+uaer6/TnnnPPTVUhSZIkSZq/uww7AEmSJElaLEywJEmSJKlPTLAkSZIkqU9MsCRJkiSpT0ywJEmSJKlPTLAkSZIkqU9MsDTSkrw/yT/1aV8rktyYZL12+vQkf9uPfbf7+1ySA/q1vx6O+89Jrkny84U+dq+S/GuSV8xx239MclifQ5Ik65rujtu3uma28k5SSe4/w/LLkjy5h+MtS/KDJBv2GusoSfLuJAcNOw7NzgRLQ9N+Qd6c5IYk1yX5ZpKDkvzhc1lVB1XV27rc14xftlV1eVVtXFW39SH2Q5McO2n/T6mqo+e77x7j2BZ4NbBDVd1niuW7tRXVpybNf1g7//QFCpUky4C/Af5njrs4Anhuki36F5Wkxc66Zv66qGt+kGS/juld2zpm8rwbk6zfbXm32x2V5J/neQoHAx+uqt/Mcz/D9k7gDUnuOuxANDMTLA3b3lW1CbAdcBjwOuCD/T5IkvX7vc8RsR1wbVWtnWGddcBjk/xRx7wDgB8ONLI7ez7w2aq6eS4btxXj52iSNEnqhXXN/MxW13wNeELH9OOBi6eY982qunUwIU4tyd1o6rxjZ1t31FXVGppy3WfYsWhmJlgaCVX1q6o6BXgWcECSHeGOV66SbJ7kM+0VyF8k+XqSuyQ5BlgBrG6vjr02ycr26tmLklwOfLljXmcF+MdJzkzyqySfTrJZe6zdklzZGePElcskewKvB57VHu+77fI/dANp43pjkp8mWZvkI0nu1S6biOOAJJe3XS7eMF3ZJLlXu/26dn9vbPf/ZOBUYKs2jqOm2cUtwMnA/u3+1gP2Az466TjvSXJFkuuTnJPkcR3LHpnk7HbZ1Une3c7fMMmxSa5tfy9nJdlymjieAny1Y5+7Jbmy/X2tTbImydOTPDXJD9vf8esn7eN04GnTlZUkzcS6ZmB1zddoEqgJjwP+bYp5X5tc3u30/9fWAVcleWHH/AOB5wCvbY+9umN/OyU5vy3T4zJ9979HAddV1R/KOcl9k3wtTavml5L8VzpaCpOckOTn7b6/luQhHcuOSvK+NF01b0zyf0nuk+TwJL9McnGSnTvWv6w9v/OT3JTkg0m2bLefOP69uzl263SsB0eeCZZGSlWdCVxJ80U82avbZcuALWkqnqqq5wGX01yh3Liq3tGxzROABwN/Ps0h/wZ4IbAVcCvwn13E+Hng7cBx7fEeNsVqz29/ngjcD9gYeO+kdf4UeCCwO/CmJA+e5pD/D7hXu58ntDG/oKq+RJO0XNXG8fwZwv4It7f8/DnwPeCqSeucBewEbAZ8DDiho8J6D/Ceqron8MfA8e38A9rYtgX+CDgImK6F6k+AH0yadx9gQ2Br4E3AB4DnAg+n+Qy8Kcn9Ota/CJiqvCWpa9Y1U5pPXfNV4CFJNkvT9XIVcBywace8x9ImWJ3aRPI1wB7A9sAfumBW1RE0FwPf0R57745N9wP2BO4LPLQth6lMVfd8DDiTpt46FHjepOWfa2PZAjiXSRck22O/Edgc+C3wrXa9zYETgXdPWv8v2/N7ALB3u//Xt+vfBfjHHo5tPTgGTLA0iq6i+Sd/st8By4Htqup3VfX1qqpZ9nVoVd00Q7e0Y6rqwqq6CfgnYL+0NybP03OAd1fVpVV1I3AIsP+kK5pvqaqbq+q7wHeZ4guzjeVZwCFVdUNVXQa8iztXBjOqqm8CmyV5IE2l+ZEp1jm2qq6tqlur6l3A3WgqZWjK/v5JNq+qG6vq2x3z/wi4f1XdVlXnVNX104SxKXDDpHm/A/6lqn4HfIKmsnlPe67fo0kEH9qx/g00/wBI0nxZ17TmW9dU1eU0yefj2v1f0pbF/3XM2xA4Y4rN96O5P2qifA7t5pjAf1bVVVX1C2A1zQXCqWxKR92TZAXwCOBNVXVLVX0DOGXS+XyoLYfftvE8bKJlsHVSW9/9BjgJ+E1VfaS97+44YGfu6P9V1dVV9TPg68AZVfWddv8nda7fxbFvaM9JI8wES6Noa+AXU8x/J/Aj4ItJLk1ycBf7uqKH5T8FNqD5J3++tmr317nv9Wmuhk7oHInp1zRXHifbHLjrFPvaeg4xHQO8lOZK50mTFyZ5dZKL2m4J19EkMhNl8SKaK28Xp+kGuFfHPr8AfKLt2vGOJBtMc/xfAptMmndtx43gE/+YXN2x/GbuWC6bAL+a5TwlqRvWNbfrR10z0U3w8TRJBMA3Ouad0SYNk23FncunG92cF9y57tkK+EVV/bpj3h+On2S9JIcl+XGS64HL2kWdv6/J9dRM9VbX63d57E2A69BIM8HSSEnyCJov9G9MXtZe0Xl1Vd2Ppon9VUl2n1g8zS5nu+q4bcf7FTRXLq8BbgI26ohrPZruIt3u9yqam4I7930rd/xS7cY1bUyT9/WzHvcDTTL0YpqBJjorFtLcb/U6miuJ966qTWkSmQBU1SVV9WyaLgv/BpyY5B7t1d23VNUONN0/9mL6QSjOp0nS5uPBNFdgJWnOrGvupB91zUSC9ThuT7C+3jHvTt0DW2u4c/l0mq0MZjO57llD06Njo455ncf/a2Bfmq6K9wJWtvMzzzi60c2xrQfHgAmWRkKSe7atIp8Ajq2qC6ZYZ68k908S4HrgtvYHmsrkfpO36cJzk+zQftG+FTixbVH5IbBhkqe1LTJvpOkyN+FqYGU6hvmd5OPAK9sbaTfm9n70PY2e1MZyPPAvSTZJsh3wKuYwGlJV/YSmX/1UNzlvQlMprwPWT/Im4J4TC5M8N8myqvo9t185uy3JE5P8SftPwfU0FfR0QxN/ljuOKDUXT6Dpny5JPbOumVqf6pqv0XR1ewJN10CAC2jukXoi0ydYxwPP7yifN09aPtcyn3Amzb1gWwNU1U+Bs4FDk9w1yWNoEukJm9DcV3UtTfL79nkcu1fdHNt6cAyYYGnYVie5gaZ5/g00N4a+YJp1twe+BNxIc0Pp+6rq9HbZvwJvTDPq02t6OP4xwFE0XQ02pL3RtKp+RdPacyTNFbybaG56nnBC+3ptknOn2O+H2n1/DfgJ8BvgZT3E1ell7fEvpbna+rF2/z2rqm9U1eTBLaDp5vc5msr+pzTxdnbZ2BP4XpIbaQa82L/te34fmht6r6e58farTF8hfwR4apK7zyX2dsCNpwIL+vwXSYuCdc3s5lXXVNUPgbXAmqq6rp33e5oE557AN6fZ7nPA4cCXabpmfnnSKh8EdmjL/OSuz+b2/d9CU/bP7Zj9HOAxNInMP9PcNzXRffEjNPXgz4DvA99m4cx47CTLgR1oRgbWCMvs921KUn8keTuwtqoOn8O2LwO2rarX9j0wSdKileZB918Hdp5qIJIkxwEXV9Xk1rORkuRdwI+r6n3DjkUzM8GSJEnSktHeg/cLmla/P6NpEXpMVX1nmHFp8VisTxyXJEmSpnIf4FM0jxm5EvgHkyv1ky1YkiRJktQnDnIhSZIkSX0yFl0EN99881q5cuWww5AkDcg555xzTVUtm33N8WC9JUmL33R111gkWCtXruTss88edhiSpAFJ8tNhx9BP1luStPhNV3fZRVCSJEmS+sQES5IkSZL6xARLkiRJkvrEBEuSJEmS+sQES5IkSZL6ZCxGEZSWmr337m391asHE4ckaeH1Ugf4/S+NHluwJEmSJKlPTLAkSZIkqU9MsCRJkiSpT0ywJEmSJKlPBj7IRZL1gLOBn1XVXkk2A44DVgKXAftV1S8HHYfUDW8sliRJ0nwsRAvWy4GLOqYPBk6rqu2B09ppSZIkSRp7A02wkmwDPA04smP2vsDR7fujgacPMgZJkiRJWiiD7iJ4OPBaYJOOeVtW1RqAqlqTZIupNkxyIHAgwIoVKwYcpharXp8nNUijFIskaWmyK7w0eANrwUqyF7C2qs6Zy/ZVdURVraqqVcuWLetzdJIkSZLUf4NswdoV2CfJU4ENgXsmORa4OsnytvVqObB2gDFIkiRJ0oIZWIJVVYcAhwAk2Q14TVU9N8k7gQOAw9rXTw8qBmmQ7PInSZKkyYbxHKzDgD2SXALs0U5LkiRJ0tgb+HOwAKrqdOD09v21wO4LcVxJkiRJWkjDaMGSJEmSpEXJBEuSpA5J1kvynSSfaac3S3Jqkkva13sPO0ZJ0ugywZIk6Y5eDlzUMX0wcFpVbQ+c1k5LkjQlEyxJklpJtgGeBhzZMXtf4Oj2/dHA0xc4LEnSGDHBkiTpdocDrwV+3zFvy6paA9C+bjHVhkkOTHJ2krPXrVs38EAlSaPJBEuSJCDJXsDaqjpnLttX1RFVtaqqVi1btqzP0UmSxsWCDNMuabB6eejx6tWDi0Mac7sC+yR5KrAhcM8kxwJXJ1leVWuSLAfWDjVKSdJIM8GSJAmoqkOAQwCS7Aa8pqqem+SdwAHAYe3rp4cVozRZLxfYJC0MuwhKkjSzw4A9klwC7NFOS5I0JVuwJEmapKpOB05v318L7D7MeCRJ48MWLEmSJEnqExMsSZIkSeoTuwhq7HhDryRJkkaVLViSJEmS1CcmWJIkSZLUJ3YRlCRJ0oLqpbv/6tWDi0MaBFuwJEmSJKlPbMHS0DlohSRJkhYLW7AkSZIkqU9MsCRJkiSpTwbWRTDJhsDXgLu1xzmxqt6cZDPgOGAlcBmwX1X9clBxSJIkabDs7i/drqsWrCQ7zmHfvwWeVFUPA3YC9kzyaOBg4LSq2h44rZ2WJKmv5lh3SZI0L912EXx/kjOTvDjJpt1sUI0b28kN2p8C9gWObucfDTy9+3AlSepaz3WXJEnz1VWCVVV/CjwH2BY4O8nHkuwx23ZJ1ktyHrAWOLWqzgC2rKo17X7XAFtMs+2BSc5Ocva6deu6OxtJklpzrbskSZqPrge5qKpLgDcCrwOeAPxnkouT/MUM29xWVTsB2wCP7KW7RlUdUVWrqmrVsmXLut1MkqQ/mEvdJUnSfHR7D9ZDk/wHcBHwJGDvqnpw+/4/Ztu+qq4DTgf2BK5Osrzd73Ka1i1JkvpqvnWXJElz0W0L1nuBc4GHVdVLqupcgKq6iubK4J0kWTbR5z3J3YEnAxcDpwAHtKsdAHx6ztFLkjS9nusuSZLmq9th2p8K3FxVtwEkuQuwYVX9uqqOmWab5cDRSdajSeSOr6rPJPkWcHySFwGXA8+c3ylIkjSlnuouHy8iSeqHbluwvgTcvWN6o3betKrq/KrauaoeWlU7VtVb2/nXVtXuVbV9+/qLuYUuSdKMeq27fLyIJGneuk2wNuwYcp32/UaDCUmSpL7oqe7y8SKSpH7oNsG6KckuExNJHg7cPJiQJEnqi57rrvk8XkSSJOj+HqxXACckuaqdXg48ayARSZLUH6+gx7qrvV9rp3aQppN6ebxIkgOBAwFWrFgxl3glSYtAVwlWVZ2V5EHAA4EAF1fV7wYamaSB2Hvv3tZfvXowcUiDNp+6q6quS3I6HY8Xqao1Mz1epKqOAI4AWLVqVfXjHCRJ46fbFiyAR9CMoLQ+sHMSquojA4lKkqT+6LruSrIM+F2bXE08XuTfuP3xIofh40XU6vVilebOC4MaN10lWEmOAf4YOA+4rZ1dgAmWJGkkzaHu8vEikqR567YFaxWwQ1XZ5UGSNC56qruq6nxg5ynmXwvs3ufYJEmLVLejCF4I3GeQgUiS1GfWXZKkBddtC9bmwPeTnEnzIEYAqmqfgUQlSdL8WXdJkhZctwnWoYMMQpKkATh02AFIkpaebodp/2qS7YDtq+pLSTYC1htsaJIkzZ11lzQ/jpQozU1X92Al+TvgROB/2llbAycPKCZJkubNukuSNAzdDnLxEmBX4HqAqroE2GJQQUmS1AfWXZKkBddtgvXbqrplYiLJ+jTPEpEkaVRZd0mSFly3CdZXk7weuHuSPYATAJ+TLUkaZdZdkqQF122CdTCwDrgA+Hvgs8AbBxWUJEl9YN0lSVpw3Y4i+HvgA+2PJEkjz7pLkjQMXSVYSX7CFP3Wq+p+fY9IkqQ+sO6SJA1Dtw8aXtXxfkPgmcBm/Q9HkqS+se6SJC24ru7BqqprO35+VlWHA08abGiSJM2ddZckaRi67SK4S8fkXWiuCm4yyzbbAh8B7gP8Hjiiqt6TZDPgOGAlcBmwX1X9sufIJUmawVzqLklLy95797b+aschVRe67SL4ro73t9ImRrNscyvw6qo6N8kmwDlJTgWeD5xWVYclOZhmlKfX9RS1JEmzm0vdJUnSvHQ7iuATe91xVa0B1rTvb0hyEbA1sC+wW7va0cDpmGBJkvpsLnWXJEnz1W0XwVfNtLyq3j3L9iuBnYEzgC3b5IuqWpNki2m2ORA4EGDFihXdhClJ0h/Mt+6SJGkuun3Q8CrgH2haoLYGDgJ2oOnLPtu9WBsDnwReUVXXdxtYVR1RVauqatWyZcu63UySpAlzrrskSZqrbu/B2hzYpapuAEhyKHBCVf3tTBsl2YAmufpoVX2qnX11kuVt69VyYO3cQpckaUY91V0OzrS09TrYgSRNp9sEawVwS8f0LTQVzbSSBPggcNGkbhinAAcAh7Wvn+42WA2Po+xIGkO91l0OziRJmrduE6xjgDOTnAQU8Ayaq3wz2RV4HnBBkvPaea+nSayOT/Ii4HKaBz9KktRvPdVdDs4kSeqHbkcR/JcknwMe1856QVV9Z5ZtvgFkmsW7dx+iJEm9m0vdNcHBmaTxZXdPDVu3LVgAGwHXV9WHkyxLct+q+smgAtN488tN0ojoue6aPDhT0+N9dlV1BHAEwKpVq2qecUuSxlRXowgmeTNNd4hD2lkbAMcOKihJkuZrLnXXTIMztcsdnEmSNKNuh2l/BrAPcBNAVV2FQ9xKkkZbT3VXF4MzgYMzSZJm0W0XwVuqqpIUQJJ7DDAmSSOkl+6ejh6pEdNr3eXgTJKkees2wTo+yf8Amyb5O+CFwAcGF5YkSfPWU93l4EySpH6YNcFqu0wcBzwIuB54IPCmqjp1wLFJkjQn1l2SpGGZNcFqu1ecXFUPB6yYFhFH+pO0WFl3SZKGpdtBLr6d5BEDjUSSpP6y7pIkLbhu78F6InBQkstoRmMKzQXChw4qMEmS5sm6S5K04GZMsJKsqKrLgacsUDySloheu6g6QqG6Zd0lSRqm2VqwTgZ2qaqfJvlkVf3lAsQkSdJ8nIx116LkhRlJ42C2e7A6h6u93yADkSSpT6y7JElDM1sLVk3zXpKkUWXdJcDRciUNx2wJ1sOSXE9zNfDu7Xu4/Ubhew40OkmSemfdJUkamhkTrKpab6ECkSSpH6y7JEnD1O1zsCRJkiRJszDBkiRJkqQ+6fZBw5I0q0HeUN7Lvh2aWZIkDYstWJIkSZLUJyZYkiRJktQnA+simORDwF7A2qrasZ23GXAcsBK4DNivqn45qBgWA7tFSZIkjZ9eu837f9ziMcgWrKOAPSfNOxg4raq2B05rpyVJkiRpURhYglVVXwN+MWn2vsDR7fujgacP6viSJPUqyYeSrE1yYce8zZKcmuSS9vXew4xRkjTaFnoUwS2rag1AVa1JssV0KyY5EDgQYMWKFQsU3ngb5AhukrREHAW8F/hIx7yJ3heHJTm4nX7dEGKTJI2BkR3koqqOqKpVVbVq2bJlww5HkrQE2PtCkjRfC51gXZ1kOUD7unaBjy9JUq/u0PsCmLb3hSRJC91F8BTgAOCw9vXTC3x8SZIGwq7tDUdO02I2Krdj+Hc22gbWgpXk48C3gAcmuTLJi2gSqz2SXALs0U5LkjTKuup9Ydd2SRIMsAWrqp49zaLdB3VMSZIGwN4XAzQqLQKS1C8L3UVQkgbOrhOaq7b3xW7A5kmuBN5Mk1gd3/bEuBx45vAilCSNOhMsSZJa9r6QJM3XyA7TLkmSJEnjxgRLkiRJkvrELoKSJEnSIjbIwWS8j/nObMGSJEmSpD4xwZIkSZKkPrGLoCRJkjRkPhNu8bAFS5IkSZL6xBasIfAKhTRavPlXkiT1iy1YkiRJktQnJliSJEmS1Cd2EZQkaYnptVusXV0lTaeX75Ol8l1iC5YkSZIk9YktWH3goBWSpuOVPUmSlhYTLEmSRpDd+CQtZeP8HWgXQUmSJEnqE1uwJGlEDPJqnc/6kiRpYZhgSZKkGXmvsaR+GOR3ySjd82wXQUmSJEnqk6G0YCXZE3gPsB5wZFUdNuhjevVN0mLj99rCGkbdJUkaPwvegpVkPeC/gKcAOwDPTrLDQschSVK3rLskSd0aRhfBRwI/qqpLq+oW4BPAvkOIQ5Kkbll3SZK6MowuglsDV3RMXwk8avJKSQ4EDmwnb0zygwWIbZxsDlwz7CDGiOXVG8urN0u6vJI5bTa5zLbrSzCDM2vd1ed6q+fP1Bx/D4vFkv4bnAPLqzeWV29Gvrz6+H05Zd01jARrqlOqO82oOgI4YvDhjKckZ1fVqmHHMS4sr95YXr2xvHo3hmU2a93Vz3prDMtnqCyv3lhevbG8emN5DaeL4JXAth3T2wBXDSEOSZK6Zd0lSerKMBKss4Dtk9w3yV2B/YFThhCHJEndsu6SJHVlwbsIVtWtSV4KfIFmqNsPVdX3FjqORcDuk72xvHpjefXG8urdWJXZEOqusSqfEWB59cby6o3l1ZslX16putPtT5IkSZKkORhGF0FJkiRJWpRMsCRJkiSpT0ywRkySlye5MMn3kryinffMdvr3SaYc9jLJtkm+kuSidt2XL2jgQzTXMuvYfr0k30nymQUJeMjmU15JNk1yYpKL28/aYxYs8CGZZ3m9sl3vwiQfT7LhggU+JNOU1zvbz8z5SU5Ksuk02+6Z5AdJfpTk4IWMexiSbJjkzCTfbcvrLVOsc68kqzvWecEwYh0lM31np/Gf7Wfo/CS7DCPGUTFLWT2nLaPzk3wzycOGEeMo6eb/gSSPSHJbkr9ayNhG0WzllWS3JOe1311fXej4hskEa4Qk2RH4O+CRwMOAvZJsD1wI/AXwtRk2vxV4dVU9GHg08JIkOww45KGbZ5lNeDlw0cCCHCF9KK/3AJ+vqge12y/qcptPeSXZGvhHYFVV7UgzMML+Aw96iGYor1OBHavqocAPgUOm2HY94L+ApwA7AM9eAt9hvwWeVFUPA3YC9kzy6EnrvAT4frvObsC72lEMl7KZvrOfAmzf/hwI/PdCBTWiZiqrnwBPaP8u34YDE8As/w+031P/RjPYjWYor/ZC2vuAfarqIcAzFzCuoTPBGi0PBr5dVb+uqluBrwLPqKqLquoHM21YVWuq6tz2/Q00H/itBx7x8M25zACSbAM8DThywHGOijmXV5J7Ao8HPghQVbdU1XWDDnjI5vX5ohmp9e5J1gc2YvE/N2m68vpiOw3wbZpnSE32SOBHVXVpVd0CfALYd0GiHpJq3NhObtD+TB55qoBNkgTYGPgFzQW1JamL7+x9gY+0ZfttYNMkyxcswBEyW1lV1Ter6pft5HR/l0tGl/8PvAz4JLB2QYIaYV2U118Dn6qqywGqakmVmQnWaLkQeHySP0qyEfBU7vhgy64kWQnsDJzR3/BG0nzL7HDgtcDvBxDbKJpPed0PWAd8uO0ScGSSewwq0BEx5/Kqqp8B/w5cDqwBflVVXxxYpKOhm/J6IfC5KbbdGriiY/pKlsBForaLzXk0/7CdWlWTv7ffS5O4XgVcALy8qpbK99VUDmfm7+wl+TmaxuF0X7+9iKn/LpeSw5mhvNpeCc8A3r+AMY2yw5n58/UA4N5JTk9yTpK/WbDIRoAJ1gipqotomp5PBT4PfJcer1Qm2Zjm6sorqur6vgc5YuZTZkn2AtZW1TmDi3C0zPMztj6wC/DfVbUzcBOwqO+Tmefn6940V9PvC2wF3CPJcwcU6kiYrbySvKGd/ugUm2eqXQ4gzJFSVbdV1U40rQePbLtZdvpz4Dyaz9BOwHvb1uQlp8vv7CX5OZqsl/otyRNpEqzXDTywEdVleR0OvK6qbluYqEZXl+W1PvBwmlauPwf+KckDFiK+UWCCNWKq6oNVtUtVPZ6mK8gl3W6bZAOa5OqjVfWpQcU4auZRZrsC+yS5jKY70pOSHDugMEfGPMrrSuDKjivsJ9IkXIvaPMrrycBPqmpdVf0O+BTw2EHFOSqmK68kBwB7Ac+pqR/AeCV3bO3ahsXfpfIP2u62pwN7Tlr0AppuNlVVP6K5b+ZBCxvdyOjmO3tJf446dFW/JXkoTRevfavq2oUNcaR0U16rgE+06/wV8L4kT1/IIEdIt3+Ln6+qm6rqGpp7lpfMQComWCMmyRbt6wqam+g/3uV2obk35qKqevfgIhw9cy2zqjqkqrapqpU0gw98uaoWdQsDzKu8fg5ckeSB7azdge8PJMgRMtfyouka+OgkG7V/n7uzyAcFganLK8meNFfH96mqX0+z6VnA9knu2w7isD9wykLEPCxJlrU3gpPk7jRJ+cWTVruc5rNDki2BBwKXLmCYI6PL7+xTgL9J49E0XXPXLHSsw9ZNWbV/o58CnldVPxxCmCOjm/KqqvtW1cp2nROBF1fVyQse7Ajo8m/x08Djkqzfdhl/FEugDpxggjV6Ppnk+8Bq4CVV9cskz0hyJfAY4H+TfAEgyVZJPttutyvwPJqrCOe1P08dyhksvLmW2VI1n/J6GfDRJOfTdFd6+wLHPgxzKq+2pe9E4Fyae2fuwtIYpetO5UVzH9EmwKntd9P74U7ldSvwUprRuS4Cjq+q7w3lDBbOcuAr7d/TWTT3YH0myUFJDmrXeRvw2CQXAKfRdFG6ZkjxjqRJ5fVZmgT0R8AHgBcPLbARNKms3gT8EU1LzHlJzh5iaCNpUnlpFp3l1XYZ/zxwPnAmcGRVXTjM+BZSpu6pIUmSJEnqlS1YkiRJktQnJliSJEmS1CcmWJIkSZLUJyZYkiRJktQnJliSJEmS1CcmWNI8JKkkx3RMr59kXZLPDPCYhyd5fA/rL0vy+UHFI0laOEn+I8krOqa/kOTIjul3JXlVkn2SHDzNPm5sX1cm+euO+c9P8t4u4zgxyf3mfCIDluSuSb6WZP1hx6KlxwRLmp+bgB3bh4QC7AH8bFAHS7IZ8Oiq+lq321TVOmBNkl0HFZckacF8E3gsQJK7AJsDD+lY/ljg/6rqlKo6bJZ9rQT+epZ17iTJQ4D1qmpkH3pdVbfQPDvuWcOORUuPCZY0f58Dnta+fzbw8YkFSR6Z5JtJvtO+PrCd/5AkZ7YPdzw/yfZJ7pHkf5N8N8mFSaaqFP6K5sF9E/u/LMnbk3wrydlJdmmvZv540sMRTwae0+8TlyQtuP+jTbBoEqsLgRuS3DvJ3YAHA9/pbI1Kct+2njgryds69nUY8Li2LnplO2+rJJ9PckmSd0wTw3OAT09MJHlRkh8mOT3JBzqOu3eSM9o68EtJtmznH5rk6CRfbOuxv0jyjiQXtMfeoF1v1jouycZJTktybrv9vh1xnox1n4bABEuav08A+yfZEHgocEbHsouBx1fVzsCbgLe38w8C3lNVOwGrgCuBPYGrquphVbUjHYlUh12BcybNu6KqHgN8HTiKJgl7NPDWjnXOBh431xOUJI2GqroKuDXJCppE61s09c5jaOqT89vWm07vAf67qh4B/Lxj/sHA16tqp6r6j3beTjStPn8CPCvJtlOE8Ye6KMlWwD/R1Dt7AA/qWO8bNL0udqapK1/bseyPaS5O7gscC3ylqv4EuJnbL1rC7HXcb4BnVNUuwBOBdyVJu+xC4BFTxC8NlP1SpXmqqvOTrKRpvfrspMX3Ao5Osj1QwAbt/G8Bb0iyDfCpqrokyQXAvyf5N+AzVfX1KQ63HFg3ad4p7esFwMZVdQPN1czfJNm0qq4D1gJbzetEJUmjYqIV67HAu4Gt2/e/oulCONmuwF+2748B/m2GfZ9WVb8CSPJ9YDvgiknrdNZFjwS+WlW/aLc5AXhAu2wb4Lgky4G7Aj/p2Mfnqup3bd23HrdfVLyApuvihBnrOJqu+m9v703+fVsWWwI/r6rbktySZJN2O2lB2IIl9ccpwL/T0T2w9Taaq3I7AnsDGwJU1ceAfWiu1H0hyZOq6ofAw2kqkX9N8qYpjnPzxD46/LZ9/X3H+4npiYsoG7bbSpLG38R9WH9C00rzbZoWrMfSJF9TqS733VmP3MbUF+M766JMsXzC/wPe27ZM/T13rL9+C1BVvwd+V1UT8XXWXZ3xTFfHPQdYBjy87RVy9aTj3I2mlUtaMCZYUn98CHhrVV0waf69uH3Qi+dPzGxHXrq0qv6TJjl7aNvN4tdVdSxNsrbLFMe5CLj/HOJ7AE0lLEkaf/8H7AX8oqpua1uPNqVJsr41zfr7t+8770m6AdhkDsfvrIvOBJ7Q3gO2Pre3lMEd68AD5nCcbtwLWNu2hj2RpsUNgCR/BKyrqt8N6NjSlEywpD6oqiur6j1TLHoHTWvU/9F0gZjwLODCJOfR9Ff/CM2VyDPbeW8A/nmK/f0vsNscQnxiu60kafxdQDN64LcnzftVVV0zxfovB16S5CyahGTC+TT3c323Y5CLbvyhLqqqn9HcX3wG8CXg+zRdFQEOBU5I8nVgqrj64aPAqiRn0ySPF3cseyJ37rovDVxub5GVNA6SfAPYq723qtttvgbsW1W/HFhgkqQloX00yVeAXdv7nDauqhvbFqyTgA9V1UnDjRKSfAo4pKp+MOxYtLTYgiWNn1cDK7pdOcky4N0mV5Kkfqiqm4E30wwoAXBo2/viQpqBLE4eTmS3S3JX4GSTKw2DLViSJEmS1Ce2YEmSJElSn5hgSZIkSVKfmGBJkiRJUp+YYEmSJElSn5hgSZIkSVKfmGBJkiRJUp+YYEmSJElSn5hgSZIkSVKfmGBJkiRJUp+YYEmSJElSn5hgaWQkeX+Sf+rTvlYkuTHJeu306Un+th/7bvf3uSQH9Gt/PRz3n5Nck+TnC33suUryZ0lOHtC+353koEHsW5IGxfquq+POub4bVszShFTVsGPQEpDkMmBL4FbgNuD7wEeAI6rq93PY199W1Zd62OZ04NiqOrKXY7XbHgrcv6qe2+u2/ZRkW+CHwHZVtXaK5bsBXwFOqqq/6Jj/MOA84KtVtdtCxDoprrOBl1bVtwew7+XAmcAfV9Ut/d6/JPXK+m7+Zqvv2nVeD/wdsAy4Dvi/qnrWggUpzcAWLC2kvatqE2A74DDgdcAH+32QJOv3e58jYjvg2ukqm9Y64LFJ/qhj3gE0FdWCS/II4F6DSK4AqmoNcDGwzyD2L0lzZH03PzPWd23r1POAJ1fVxsAq4LQFjE+akQmWFlxV/aqqTgGeBRyQZEeAJEcl+ef2/eZJPpPkuiS/SPL1JHdJcgywAljddol4bZKVSSrJi5JcDny5Y15n5fPHSc5M8qskn06yWXus3ZJc2RljksuSPDnJnsDrgWe1x/tuu/wPXTDauN6Y5KdJ1ib5SJJ7tcsm4jggyeVtd4c3TFc2Se7Vbr+u3d8b2/0/GTgV2KqN46hpdnELcDKwf7u/9YD9gI9OOs6Dkpzalu0PkuzXsexpSb6T5PokV7RXNCeW9XQ+wFOAr046diV5cZJLktyQ5G1J/jjJt9pjHp/kru26z0/yjSm2v3/HrNOBp80QgyQNhfXdwOq7RwBfqKoft+X886o6omPfnTGvl+RdbTw/SfLSzvJq1/3nJN9sj7c6yR8l+WhbJ52VZGXHvt/T1o3XJzknyeNm/hRoKTLB0tBU1ZnAlcBUX06vbpcto+lq8fpmk3oecDnN1cGNq+odHds8AXgw8OfTHPJvgBcCW9F03fjPLmL8PPB24Lj2eA+bYrXntz9PBO4HbAy8d9I6fwo8ENgdeFOSB09zyP8H3KvdzxPamF/Qdg95CnBVG8fzZwj7I+120JTF94CrJhYmuQdN5fUxYAvg2cD7kjykXeWmdvtNaRKXf0jy9Dmez58AP5hi/p7Aw4FHA68FjgCeA2wL7NjG1K2LgKl+L5I0EqzvpjSf+u7bwN8k+f+SrGovJk7n79r97QTsAjx9inX2p2kR2xr4Y+BbwIeBzWjqmDd3rHtWu6/NaOrRE5JsOMPxtQSZYGnYrqL5kprsd8Bymv7Xv6uqr9fsNwweWlU3VdXN0yw/pqourKqbgH8C9pvlS7lbzwHeXVWXVtWNwCHA/pOuJr6lqm6uqu8C32WKhKCN5VnAIVV1Q1VdBryL5ku/a1X1TWCzJA+kqbA+MmmVvYDLqurDVXVrVZ0LfBL4q3b706vqgqr6fVWdD3ycpvLrNOv5tDYFbphi/r9V1fVV9T3gQuCLbfn9CvgcsHMPp3xDexxJGmXWd6351ndVdSzwMpoE86vA2iQHT7P6fsB7qurKqvolTZfNyT5cVT/uqIN+XFVfqqpbgRPoqJOq6tiquratP98F3I0moZT+wARLw7Y18Isp5r8T+BHwxSSXzvDF2emKHpb/FNgA2LyrKGe2Vbu/zn2vT3MlckLnKEi/prnqN9nmwF2n2NfWc4jpGOClNFcZT5q0bDvgUW13lOuSXEdTad4HIMmjknyl7bbxK+Ag7lxO3ZwPwC+BTaaYf3XH+5unmJ5uf1PZhOYGZ0kaZdZ3t5t3fVdVH62qJ9NcYDsIeGuSqVr0tuKO5TFV2XVdJyV5dZKL2u6X19G0wvWjbLWImGBpaNIMgLA18I3Jy9orWq+uqvsBewOvSrL7xOJpdjnbFb9tO96voLlqeA1Nl7iNOuJaj6arRrf7vYomaenc963c8Qu6G9e0MU3e18963A80CdaLgc9W1a8nLbuCZkTBTTt+Nq6qf2iXfww4Bdi2qu4FvB/IHGIAOB94wBy3hTv/bu4zxToPprlKKkkjyfruTvpW37WtfifQ1Dc7TrHKGmCbjultp1inK+39Vq+jaRW7d1VtCvyKudeRWqRMsLTgktwzyV7AJ2iGkr1ginX2SnL/JAGupxnq9rZ28dU0fbZ79dwkOyTZCHgrcGJV3UYzwt6GaQZ32AB4I02T/4SrgZVJpvt7+TjwyiT3TbIxt/dhv7WX4NpYjgf+JckmSbYDXgUc28t+2n39hKZb31Q3GH8GeECS5yXZoP15REc/+U2AX1TVb5I8EvjrXo/f4bPcuXthL74LPCTJTm0f90OnWOcJNF06JGmkWN9Nbb71XZoBkJ7WbnuXJE8BHgKcMcXqxwMvT7J1kk1pEqS52oQmoVwHrJ/kTcA957E/LVImWFpIq5PcQNOC8gbg3cALpll3e+BLwI00N5u+r6pOb5f9K/DGtnvba3o4/jHAUTTdFzYE/hGaUZ5oWnuOpLl6dhPNDccTTmhfr01y7hT7/VC7768BPwF+Q9M3fC5e1h7/UpornR9r99+zqvpGVV01xfwbgD+juan3Kpry+Ddur2RfTNPV4gbgTTSV05y093f9Ksmj5rj9D2n+OfgScAmTrv6meQ7WDjQjJ0rSqLC+m9186rvraQYDuZymi/g7gH+oqju1EAIfAL5I08L1HZoLfxPPKOvVF2gu6P2Qpkvjb5i9u6aWIB80LGmgkvwZ8OKqevoA9v0umpuR39fvfUuSFp+2tev9VbXdrCtLc2SCJUmSpEUpyd1pBnz6Is1gHJ8Evl1VrxhmXFrcTLAkSZK0KLX3oX0VeBDNiID/C7y8qq4famBa1EywJEmSJKlPHORCkiRJkvpk/dlXGb7NN9+8Vq5cOewwJEkDcs4551xTVctmX3OwklwG3EAzwtitVbUqyWbAccBK4DJgv6r65Uz7sd6SpMVvurprLBKslStXcvbZZw87DEnSgCT56bBj6PDEqrqmY/pg4LSqOizJwe30jM/Ssd6SpMVvurrLLoKSJM1sX+Do9v3RwNOHF4okadSZYEmSdLsCvpjknCQHtvO2rKo1AO3rFlNtmOTAJGcnOXvdunULFK4kadSMRRdBSZIWyK5VdVWSLYBTk1zc7YZVdQRwBMCqVascoleSlihbsCRJalXVVe3rWuAk4JHA1UmWA7Sva4cXoSRp1NmCJS0xe+/d2/qrVy/uOKQJSe4B3KWqbmjf/xnwVuAU4ADgsPb108OLUpJGw0Q9bv18ZyZYkiQ1tgROSgJN/fixqvp8krOA45O8CLgceOYQY5QkjTgTLEmSgKq6FHjYFPOvBXZf+IgkSePIBEtaBHrtbidJkqTBcJALSZIkSeoTEyxJkiRJ6hMTLEmSJEnqExMsSZIkSeoTB7mQRpCDVkiSJI0nW7AkSZIkqU9MsCRJkiSpT+wiKGlGvXRXXL16cHFIkiSNA1uwJEmSJKlPTLAkSZIkqU9MsCRJkiSpTwaeYCVZL8l3knymnd4syalJLmlf7z3oGCRJkiRpISxEC9bLgYs6pg8GTquq7YHT2mlJkiRJGnsDTbCSbAM8DTiyY/a+wNHt+6OBpw8yBkmSJElaKINuwToceC3w+455W1bVGoD2dYsBxyBJkiRJC2JgCVaSvYC1VXXOHLc/MMnZSc5et25dn6OTJEmSpP4bZAvWrsA+SS4DPgE8KcmxwNVJlgO0r2un2riqjqiqVVW1atmyZQMMU5Kk2zk4kyRpPgaWYFXVIVW1TVWtBPYHvlxVzwVOAQ5oVzsA+PSgYpAkaQ4cnEmSNGfDeA7WYcAeSS4B9minJUkaOgdnkiTN1/oLcZCqOh04vX1/LbD7QhxXkqQeHU4zONMmHfPuMDhTkikHZ0pyIHAgwIoVKwYcpiRpVA2jBUuSpJEz38GZvHdYkgQL1IIlSdIYmBic6anAhsA9Owdnaluvph2cSZIkMMGS1Ed77z3sCKS5q6pDgEMAkuwGvKaqnpvknTSDMh2GgzNJkmZhF0FJkmbm4EySpK7ZgiVJ0iQOziRJmitbsCRJkiSpT0ywJEmSJKlPTLAkSZIkqU9MsCRJkiSpT0ywJEmSJKlPTLAkSZIkqU9MsCRJkiSpT7p6DlaSHavqwkEHI0lSv1h3SVJ/7b33sCMYD922YL0/yZlJXpxk00EGJElSn1h3SZIWXFcJVlX9KfAcYFvg7CQfS7LHQCOTJGkerLskScPQ9T1YVXUJ8EbgdcATgP9McnGSvxhUcJIkzYd1lyRpoXWVYCV5aJL/AC4CngTsXVUPbt//xwDjkyRpTqy7JEnD0NUgF8B7gQ8Ar6+qmydmVtVVSd44kMgkSZof6y5J0oLrNsF6KnBzVd0GkOQuwIZV9euqOmaqDZJsCHwNuFt7nBOr6s1JNgOOA1YClwH7VdUv53UWkiTdWc91lyRJ89XtPVhfAu7eMb1RO28mvwWeVFUPA3YC9kzyaOBg4LSq2h44rZ2WJKnf5lJ3SZI0L90mWBtW1Y0TE+37jWbaoBoT22zQ/hSwL3B0O/9o4Om9BCxJUpd6rrskSZqvbrsI3pRkl6o6FyDJw4GbZ9mGJOsB5wD3B/6rqs5IsmVVrQGoqjVJtphm2wOBAwFWrFjRZZiSFqteHm64evXg4tBY6anusmu7JKkfuk2wXgGckOSqdno58KzZNmr7ve/UPuDxpCQ7dhtYVR0BHAGwatWq6nY7SZJar6C3umuia/uNSTYAvpHkc8Bf0HRtPyzJwTRd2183wLglSWOsqwSrqs5K8iDggUCAi6vqd90epKquS3I6sCdwdZLlbevVcmDtHOKWJGlGvdZdVVXAdF3bd2vnHw2cjgmWJGkaXT9oGHgE8FBgZ+DZSf5mppWTLGtbrkhyd+DJwMXAKcAB7WoHAJ/uMWZJkrrVa921XpLzaC7+nVpVZwB36NoOTNu1PcnZSc5et25dP89BkjRGumrBSnIM8MfAecBt7ewCPjLDZsuBo9v7sO4CHF9Vn0nyLeD4JC8CLgeeOcfYJUma1lzqLru2S5Lmq9t7sFYBO7TdJ7pSVefTXDGcPP9aYPdu9yMtFr0M0iCpL3quuybYtV2SNFfddhG8ELjPIAORJKnPeqq77NouSeqHbluwNge+n+RMmlGWAKiqfQYSlSRJ89dr3WXXdknSvHWbYB06yCAkSRqAQ3tZ2a7tkqR+6HaY9q8m2Q7Yvqq+lGQjYL3BhiZJ0txZd0mShqGre7CS/B1wIvA/7aytgZMHFJMkSfNm3SVJGoZuuwi+BHgkcAZAVV2SZMrngEiSNCKsuyRpDjpHPl69em7bdeplH4tBt6MI/raqbpmYSLI+zbNEJEkaVdZdkqQF120L1leTvB64e5I9gBcDSywXlSSNGesuSRown/N5Z922YB0MrAMuAP4e+CzwxkEFJUlSH1h3SZIWXLejCP4e+ED7I0nSyLPukiQNQ1cJVpKfMEW/9aq6X98jkvqo12brpXYTprSYWXdJ0mhYaoNfdHsP1qqO9xvSPMV+s/6HI0lS31h3SZIWXLddBK+dNOvwJN8A3tT/kCRJmj/rLkmaPwex6F23XQR36Zi8C81VwU0GEpE0JvzCkUabdZckaRi67SL4ro73twKXAfv1PRpJkvrHukuStOC67SL4xEEHIklSP1l3SZI6TfQ+GvTgGt12EXzVTMur6t39CUeSpP6w7pIkDUO3DxpeBfwDsHX7cxCwA01f9in7syfZNslXklyU5HtJXt7O3yzJqUkuaV/vPf/TkCTpTnquuyRJmq9u78HaHNilqm4ASHIocEJV/e0M29wKvLqqzk2yCXBOklOB5wOnVdVhSQ4GDgZeN9cTkCRpGnOpuyRp0escqGuxPotqmLptwVoB3NIxfQuwcqYNqmpNVZ3bvr8BuIjmCuK+wNHtakcDT+8+XEmSutZT3WXPC0lSP3TbgnUMcGaSk4ACngF8pNuDJFkJ7AycAWxZVWugScKSbDHNNgcCBwKsWLGi20NJ8+LQ69Ki0mvdZc8LSdK8ddWCVVX/ArwA+CVwHfCCqnp7N9sm2Rj4JPCKqrq+28Cq6oiqWlVVq5YtW9btZpIkAb3XXfa8kCT1Q7ddBAE2Aq6vqvcAVya572wbJNmAJrn6aFV9qp19dZLl7fLlwNoeY5YkqVs9110wc88LYMqeF5IkQffDtL+ZZjSmBwIfBjYAjgV2nWGbAB8ELpo0FO4pwAHAYe3rp+cUuSRJM5hL3dVud4eeF0111tXx7NouST2Y6taMxTDoRrctWM8A9gFuAqiqq5h9iNtdgecBT0pyXvvzVJrEao8klwB7tNOSJPVbz3XXfHpe2LVdkgTdD3JxS1VVkgJIco/ZNqiqbwDTXfbbvcvjSpI0Vz3VXfa8kLQUTbQiLYaWo1HRbYJ1fJL/ATZN8nfAC4EPDC4sSZq7XkeDtFJZtHqtuyZ6XlyQ5Lx23utpEqvjk7wIuBx45uBCliSNu1kTrPaK3nHAg4Drafqyv6mqTh1wbJIkzclc6i57XkiS+mHWBKvtXnFyVT0cMKmSJI086y5J6o3PAu2fbge5+HaSRww0EkmS+su6S5K04Lq9B+uJwEFJLqMZjSk0FwgfOqjAJEmaJ+suSdKCmzHBSrKiqi4HnrJA8UjSSHMAjdFn3SVJGqbZWrBOBnapqp8m+WRV/eUCxCRJ0nycjHWXJGlIZrsHq3M0pfsNMhBJkvrEukuSNDSztWDVNO+lvrHLlaQ+s+6SJA3NbAnWw5JcT3M18O7te7j9RuF7DjQ6SZJ6Z90lSdzxIrYXqBfOjAlWVa23UIFIktQP1l2SpGHq9jlYkiRJkqRZdPscLEmSJElaMOPaxdEES9KS1+tAK5IkSdOxi6AkSZKksbH33qN9cdQES5IkSZL6xC6CGjujfMVCkiRJS5sJliRJkrTIjcsF6nGJcyYD6yKY5ENJ1ia5sGPeZklOTXJJ+3rvQR1fkiRJkhbaIO/BOgrYc9K8g4HTqmp74LR2WpKkkeDFQUnSfA0swaqqrwG/mDR7X+Do9v3RwNMHdXxJkubgKLw4KEmah4UeRXDLqloD0L5uMd2KSQ5McnaSs9etW7dgAUqSli4vDkqS5mtkh2mvqiOqalVVrVq2bNmww5EkLV1dXRz0wqAkCRY+wbo6yXKA9nXtAh9fkqSB8MKgJAkWPsE6BTigfX8A8OkFPr4kSb3y4qAkqWsDew5Wko8DuwGbJ7kSeDNwGHB8khcBlwPPHNTxJUnqk4mLg4fhxUFJI24xPEdq3A0swaqqZ0+zaPdBHVOSpPnw4qAkab4GlmBJkjRuvDgoSeOvsxVv9eqFP/7IjiIoSZIkSePGBEuSJEmS+sQugpIkSZJG2lSDdwy7K+B0bMGSJEmSpD6xBUsD4RChkiRJWopswZIkSZKkPrEFawh6ad0Zpf6kkiRJkmZmgiVJkiSNiVEd2EG3s4ugJEmSJPWJLViSNECDHPDFK5eSpAkOMDY6bMGSJEmSpD6xBasPxvWKwbjGLUmSJI0qEyxJkiRJY22UGg7sIihJkiRJfWILliSNKQfQkCRpZsNo2bIFS5IkSZL6ZCgJVpI9k/wgyY+SHDyMGCRJ6oV1lySpGwveRTDJesB/AXsAVwJnJTmlqr4/yOOO0o1vvRjXuCWNt16+e5ZCd8Jh1V2SBNN/J/t/4mgaRgvWI4EfVdWlVXUL8Alg3yHEIUlSt6y7JEldGcYgF1sDV3RMXwk8avJKSQ4EDmwnb0zyg3ked3PgmnnuY6my7ObOsps7y27uFrTskr7sZru+7GVwZq27rLemtRjOw3MYDZ7DaBj7c0j6dg5T1l3DSLCmqorrTjOqjgCO6NtBk7OralW/9reUWHZzZ9nNnWU3d5bdQMxad1lvTW0xnIfnMBo8h9HgOcxuGF0ErwS27ZjeBrhqCHFIktQt6y5JUleGkWCdBWyf5L5J7grsD5wyhDgkSeqWdZckqSsL3kWwqm5N8lLgC8B6wIeq6nsLcOi+ddtYgiy7ubPs5s6ymzvLrs+GVHctlt/jYjgPz2E0eA6jwXOYRarudPuTJEmSJGkOhvKgYUmSJElajEywJEmSJKlPxj7BSvLKJN9LcmGSjyfZsJ3/siQ/aJe9Y5ptL0tyQZLzkpy9sJEP31Rll+S4tjzOa8vnvGm23bMt3x8lOXiBQx+6eZadn7s7l91OSb49USZJHjnNtn7u5l52S/pzN24Ww2c9yYeSrE1y4bBjmYsk2yb5SpKL2r+7lw87pl613xFnJvluew5vGXZMc5VkvSTfSfKZYccyV4vhezjJpklOTHJx+7fxmGHH1IskD+z4X+28JNcneUXfD1RVY/tD8+DHnwB3b6ePB54PPBH4EnC3dv4W02x/GbD5sM9jlMpu0jrvAt40xbbrAT8G7gfcFfgusMOwz2kcyq5d5ufuzn+zXwSe0s57KnD6FNv6uZtj2bXLluznbtx+FstnHXg8sAtw4bBjmWP8y4Fd2vebAD8ct98DzfPbNm7fbwCcATx62HHN8VxeBXwM+MywY5nHOYz99zBwNPC37fu7ApsOO6Z5nMt6wM+B7fq977FvwaIZCfHuSdYHNqJ5Lsk/AIdV1W8BqmrtEOMbZVOVHQBJAuwHfHyK7R4J/KiqLq2qW4BPAPsuQLyjZK5lp6nLroB7tsvvxdTPF/JzN/ey03hZFJ/1qvoa8IthxzFXVbWmqs5t398AXERzoWNsVOPGdnKD9mfsRjdLsg3wNODIYceylCW5J82Fkw8CVNUtVXXdUIOan92BH1fVT/u947FOsKrqZ8C/A5cDa4BfVdUXgQcAj0tyRpKvJnnEdLsAvpjknCQHLkzUo2GGspvwOODqqrpkis23Bq7omL6SMat05mOeZQd+7qYqu1cA70xyRbv8kCk293M397KDJfy5G0NL+rM+ipKsBHamaQEaK23XuvOAtcCpVTV25wAcDrwW+P2Q45ivcf8evh+wDvhw213zyCT3GHZQ87A/A7oYPtYJVpJ701zVuy+wFXCPJM+lucp7b+DRwP8HHN+2Kky2a1XtAjwFeEmSxy9M5MM3Q9lNeDbTf+imKsuxuyI2V/MsO/BzN1XZ/QPwyqraFngl7dWxyZtPMc/PXXdlB0v4czeGlvRnfdQk2Rj4JPCKqrp+2PH0qqpuq6qdgG2ARybZccgh9STJXsDaqjpn2LH0wbh/D69P0+33v6tqZ+AmYFzvEb0rsA9wwiD2P9YJFvBk4CdVta6qfgd8CngszdW+T7VN42fSXPHYfPLGVXVV+7oWOImmW8ZSMV3Z0XY/+gvguGm2vRLYtmN6G5ZWt6T5lJ2fu6nL7oD2PTRfdlOViZ+7uZfdUv/cjZul/lkfGUk2oEmuPlpVn5pt/VHWduU6HdhzuJH0bFdgnySX0XSXfVKSY4cb0twsgu/hK4ErO1pBT6RJuMbRU4Bzq+rqQex83BOsy4FHJ9mobaHanaaP9MnAkwCSPIDmJrxrOjdMco8km0y8B/4MGMuRjuZourKD5h+5i6vqymm2PQvYPsl92ysA+wOnDDzi0THnsvNzN23ZXQU8oV3nScBU3Sv93M2x7PzcjZ2l/lkfCe3f2QeBi6rq3cOOZy6SLEuyafv+7rR11FCD6lFVHVJV21TVSpq/hS9X1XNn2WzkLIbv4ar6OXBFkge2s3YHvj/EkOZjtt5G87L+oHa8EKrqjCQnAucCtwLfAY6g6UrxoTRDw94CHFBVlWQr4MiqeiqwJXBS23NwfeBjVfX5YZzHMMxQdjBFn9TOsquqW5O8FPgCzQgsH6qq7y1c9MM1n7LDz910Zfcd4D1tC+BvgAPBz12n+ZQdS/xzN24Wy2c9yceB3YDNk1wJvLmqpuvCOop2BZ4HXJDbH7vx+qr67PBC6tly4Ogk69FcVD++qsZ2mPMxt1i+h18GfLS9+HMp8IIhx9OzJBsBewB/P7BjVNmtW5IkSZL6Ydy7CEqSJEnSyDDBkiRJkqQ+McGSJEmSpD4xwZIkSZKkPjHBkiRJkqQ+McGSJEkSAEnekOR7Sc5Pcl6SRyU5MskOw45NGhcmWFIPklSSYzqm10+yLsnAnyuS5PAkj+/Tvj6RZPt+7EuStDgkeQywF7BLVT2U5sHEV1TV31bVuD5QVlpwJlhSb24Cdkxy93Z6D+Bngz5oks2AR1fV1/q0y/8GXtunfUmSFoflwDVV9VuAqrqmqq5KcnqSVQBJXpTkh+28DyR5bzv/qCT/neQrSS5N8oQkH0pyUZKjJg7QrnN220r2lmGcpDRoJlhS7z4HPK19/2zg4xMLktyjrVDOSvKdJPu281cm+XqSc9ufx7bzd2srqROTXJzko2kf8z7JXwGf7zjOZUnenuRbbUW1S5IvJPlxkoM69v2Zjm3em+T57eTXgScnWb9/xSJJGnNfBLZtE6j3JXlC58IkWwH/BDya5gLjgyZtf2/gScArgdXAfwAPAf4kyU7tOm+oqlXAQ4EnJHnooE5GGhYTLKl3nwD2T7IhTQVxRseyNwBfrqpHAE8E3pnkHsBaYI+q2gV4FvCfHdvsDLwC2AG4H7DrFMfcFThn0rwrquoxNMnSUTRJ2KOBt852AlX1e+BHwMNmW1eStDRU1Y3Aw4EDgXXAcR0X5gAeCXy1qn5RVb8DTpi0i9VVVcAFwNVVdUFb33wPWNmus1+Sc4Hv0CRf3tulRcer11KPqur8JCtpWq8+O2nxnwH7JHlNO70hsAK4CnhvewXvNuABHducWVVXAiQ5j6YS+sak/S6nqew6ndK+XgBsXFU3ADck+U2STbs4lbXAVtw5cZMkLVFVdRtwOnB6kguAAzoWT9XDotNv29ffd7yfmF4/yX2B1wCPqKpftl0HN+xH3NIosQVLmptTgH+no3tgK8BfVtVO7c+KqrqIprvE1TQtRquAu3Zs01kJ3cbUFz5u5s6V0IwVGXArd/wbn7z9hu1+JUkiyQMnDYC0E/DTjukzabr13bvtYv6XPR7injT3Mv8qyZbAU+YTrzSqTLCkufkQ8NaqumDS/C8AL5u4jyrJzu38ewFr2q4SzwPW6/F4FwH373GbnwI7JLlbknsBu09a/gCabhuSJAFsDByd5PtJzqfpvnfoxMKq+hnwdpqu8V8Cvg/8qtudV9V3aboGfo+mHv2/vkUujRC7CEpz0Hbpe88Ui94GHA6c3yZZl9EMefs+4JNJngl8heYKXi/+F/h74MgeYrwiyfHA+cAlNJUaAO2Vw5urak2PcUiSFqmqOgd47BSLdut4/7GqOqJtwTqJZmAMqur5Hfu5DNixY/r5U72XFqs09yJKGnVJvgHsVVXX9WFfrwSur6oPzjswSdKSkeTfaZ6PtSFNcvXy8p9J6Q5MsKQxkeRRNK1O5/dhXy8AjqmqW+cfmSRJkiaYYEmSJElSnzjIhSRJkiT1iQmWJEmSJPWJCZYkSZIk9YkJliRJkiT1iQmWJEmSJPWJCZYkSZIk9YkJliRJkiT1iQmWJEmSJPWJCZYkSZIk9YkJloYqyfuT/FOf9rUiyY1J1munT0/yt/3Yd7u/zyU5oF/76+G4/5zkmiQ/n8O2CxJzkqOS/PMctntOki/24xhJKsn9e41BkiSpn0ywNDBJLktyc5IbklyX5JtJDkryh89dVR1UVW/rcl9Pnmmdqrq8qjauqtv6EPuhSY6dtP+nVNXR8913j3FsC7wa2KGq7jPNOq9P8pM2ubwyyXETy4YR86TYHpLkV0keMGn+aUn+tao+WlV/Nqz4JEmS+s0ES4O2d1VtAmwHHAa8Dvhgvw+SZP1+73NEbAdcW1Vrp1rYtk49D3hyVW0MrAJOW8D4ZlRV3wP+HfhgkgAkeRGwNfCWYcYmSZI0CCZYWhBV9auqOgV4FnBAkh3hjt2+kmye5DNta9cvknw9yV2SHAOsAFa3rTSvTbKy7RL2oiSXA1/umNeZbP1xkjPbVpRPJ9msPdZuSa7sjHGilSzJnsDrgWe1x/tuu/wPXQ7buN6Y5KdJ1ib5SJJ7tcsm4jggyeVt9743TFc2Se7Vbr+u3d8b2/0/GTgV2KqN46gpNn8E8IWq+nFbzj+vqiM69t0Z83pJ3tXG85MkL+0sr3bdtyX5v7bV8YtJNu/Y1wlJft6W5deSPGSWX/uEfwU2Bl6cZEvg34AXVtVvkjw/yTc6jvGgJKe2v/8fJNlvhnL7/5KsSXJVkhd2GYskSdJAmWBpQVXVmcCVwOOmWPzqdtkyYEuaJKeq6nnA5TStYRtX1Ts6tnkC8GDgz6c55N8ALwS2Am4F/rOLGD8PvB04rj3ew6ZY7fntzxOB+9EkEO+dtM6fAg8EdgfelOTB0xzy/wH3avfzhDbmF1TVl4CnAFe1cTx/im2/DfxNm2ysSnv/2TT+rt3fTsAuwNOnWOevgRcAWwB3BV7TsexzwPbtsnOBj85wrD+oqltpfgdvA44Fjq2qb05eL8k9aBLKj7XHeDbwvqkSuTYJfg2wRxvTjN1HJUmSFooJlobhKmCzKeb/DlgObFdVv6uqr1dVzbKvQ6vqpqq6eZrlx1TVhVV1E/BPwH6zJCHdeg7w7qq6tKpuBA4B9p/UevaWqrq5qr4LfBe4U6LWxvIs4JCquqGqLgPeRdPtb1ZVdSzwMpoE86vA2iQHT7P6fsB7qurKqvolTZfNyT5cVT9sy/N4mmRs4lgfamP8LXAo8LCJVrsu4vwOTdfQB9MkzlPZC7isqj5cVbdW1bnAJ4G/muZcPtzxuz20mzgkSZIGzQRLw7A18Isp5r8T+BHwxSSXzpAodLqih+U/BTYANp9m3V5s1e6vc9/r07S8Tegc9e/XNK1ck21O01I0eV9bdxtIO1DEk4FNgYOAtyaZqkVvK+5YHlOV3ZQxt90LD0vy4yTXA5d1xN+t79EkUL+eZvl2wKPaLqLXJbmOJpGdanCPyefy0ynWkSRJWnAmWFpQSR5Bkzx8Y/KytnXk1VV1P2Bv4FVJdp9YPM0uZ2vh2rbj/QqaVrJrgJuAjTriWo+ma2K3+72KJiHo3PetwNWzbDfZNW1Mk/f1sx73Q9vqdwJwPrDjFKusAbbpmN52inWm89fAvjRd8e4FrGznp9c4Z3AF8NWq2rTjZ+Oq+ocp1l3DnX+3kiRJQ2eCpQWR5J5J9gI+QXMPzgVTrLNXkvu3o81dD9zW/kCTuNxvDod+bpIdkmwEvBU4sR3G/YfAhkmelmQD4I3A3Tq2uxpYmY4h5Sf5OPDKJPdNsjG337N1ay/BtbEcD/xLkk2SbAe8iuZepVm1g0Q8rd32LkmeAjwEOGOK1Y8HXp5k6ySb0ozo2K1NgN8C19Ikpm/vYdtufQZ4QJLnJdmg/XnENPeuHQ88v+N3++YBxCNJktQzEywN2uokN9C0TrwBeDfNIApT2R74EnAj8C3gfVV1ervsX4E3tl3HXjPN9lM5BjiKpuvbhsA/QjOqIfBi4Eia1qKbaAbYmHBC+3ptknOn2O+H2n1/DfgJ8Buae6Hm4mXt8S+ladn7WLv/blxPc0/T5cB1wDuAf6iqO7UQAh8AvkjTwvUd4LM0rW7dPDfsIzTd8H4GfJ9mcI2+qqobgD8D9qdpIfw5zYiDd5ti3c8BhwNfpulW+uV+xyNJkjQXmX0MAUmLUdva9f6q2m7WlSVJktQVW7CkJSLJ3ZM8Ncn6Sbam6VZ30rDjkiRJWkxswZKWiPZepa8CDwJuBv4XeHlVXT/UwCRJkhYREyxJkiRJ6hO7CEqSJElSn6w/7AC6sfnmm9fKlSuHHYYkaUDOOeeca6pq2exrSpI02sYiwVq5ciVnn332sMOQJA1Ikp8OOwZJkvrBLoKSJEmS1CcmWJIkSZLUJyZYkiRJktQnJliSJEmS1CdjMcjFMOy9d/frrl49uDgkSZIkjQ9bsCRJkiSpT0ywJEmSJKlPTLAkSZIkqU9MsCRJkiSpT0ywJEmSJKlPTLAkSZIkqU9MsCRJkiSpT0ywJEmSJKlPTLAkSZIkqU9MsCRJkiSpT0ywJEmSJKlPTLAkSZIkqU/WH+TOk7wS+FuggAuAFwAbAccBK4HLgP2q6peDjANg770HfQRJkiRJS93AWrCSbA38I7CqqnYE1gP2Bw4GTquq7YHT2mlJkiRJGnuD7iK4PnD3JOvTtFxdBewLHN0uPxp4+oBjkCRJkqQFMbAEq6p+Bvw7cDmwBvhVVX0R2LKq1rTrrAG2GFQMkiRJkrSQBtlF8N40rVX3BbYC7pHkuT1sf2CSs5OcvW7dukGFKUmSJEl9M8gugk8GflJV66rqd8CngMcCVydZDtC+rp1q46o6oqpWVdWqZcuWDTBMSZIkSeqPQSZYlwOPTrJRkgC7AxcBpwAHtOscAHx6gDFIkiRJ0oIZ2DDtVXVGkhOBc4Fbge8ARwAbA8cneRFNEvbMQcUgSZIkSQtpoM/Bqqo3A2+eNPu3NK1ZkiRJkrSoDHqYdkmSJElaMkywJEmSJKlPTLAkSZIkqU8Geg/WUrH33r2tv3r1YOKQJEmSNFy2YEmSJElSn5hgSZIkSVKfmGBJkiRJUp+YYEmSJElSn5hgSZIkSVKfmGBJkiRJUp+YYEmSJElSn5hgSZIkSVKfmGBJkiRJUp+YYEmSJElSn3SVYCXZcdCBSJIkSdK467YF6/1Jzkzy4iSbDjIgSZIkSRpXXSVYVfWnwHOAbYGzk3wsyR4DjUySJEmSxkzX92BV1SXAG4HXAU8A/jPJxUn+YlDBSZIkSdI46fYerIcm+Q/gIuBJwN5V9eD2/X/MsN2mSU5sE7GLkjwmyWZJTk1ySft6776ciSRJkiQNWbctWO8FzgUeVlUvqapzAarqKppWrem8B/h8VT0IeBhNgnYwcFpVbQ+c1k5LkiRJ0thbv8v1ngrcXFW3ASS5C7BhVf26qo6ZaoMk9wQeDzwfoKpuAW5Jsi+wW7va0cDpNN0OJUmSJGmsdduC9SXg7h3TG7XzZnI/YB3w4STfSXJkknsAW1bVGoD2dYseY5YkSZKkkdRtgrVhVd04MdG+32iWbdYHdgH+u6p2Bm6ih+6ASQ5McnaSs9etW9ftZpIkSZI0NN0mWDcl2WViIsnDgZtn2eZK4MqqOqOdPpEm4bo6yfJ2P8uBtVNtXFVHVNWqqlq1bNmyLsOUJEmSpOHp9h6sVwAnJLmqnV4OPGumDarq50muSPLAqvoBsDvw/fbnAOCw9vXTcwlckiRJkkZNVwlWVZ2V5EHAA4EAF1fV77rY9GXAR5PcFbgUeAFNq9nxSV4EXA48c06RS5IkSdKI6bYFC+ARwMp2m52TUFUfmWmDqjoPWDXFot17OK4kSZIkjYWuEqwkxwB/DJwH3NbOLmDGBEuSJEmSlpJuW7BWATtUVQ0yGEmSJEkaZ92OInghcJ9BBiJJkiRJ467bFqzNge8nORP47cTMqtpnIFFJkiRJ0hjqNsE6dJBBSJIkSdJi0O0w7V9Nsh2wfVV9KclGwHqDDU2SJEmSxktX92Al+TvgROB/2llbAycPKCZJkiRJGkvdDnLxEmBX4HqAqroE2GJQQUmSJEnSOOo2wfptVd0yMZFkfZrnYEmSJEmSWt0mWF9N8nrg7kn2AE4AVg8uLEmSJEkaP90mWAcD64ALgL8HPgu8cVBBSZIkSdI46nYUwd8DH2h/JEmSJElT6CrBSvITprjnqqru1/eIdAd77939uqvttClJkiQNVbcPGl7V8X5D4JnAZv0PR5IkSZLGV1f3YFXVtR0/P6uqw4EnDTY0SZIkSRov3XYR3KVj8i40LVqbDCQiSZIkSRpT3XYRfFfH+1uBy4D9+h7NEtHLfVWSJEmSxke3owg+cdCBSJIkSdK467aL4KtmWl5V7+5POJIkSZI0vrp90PAq4B+Ardufg4AdaO7DmvFerCTrJflOks+005slOTXJJe3rveceviRJkiSNjm4TrM2BXarq1VX1auDhwDZV9Zaqesss274cuKhj+mDgtKraHjitnZYkSZKksddtgrUCuKVj+hZg5WwbJdkGeBpwZMfsfYGj2/dHA0/vMgZJkiRJGmndjiJ4DHBmkpOAAp4BfKSL7Q4HXssduxFuWVVrAKpqTZItptowyYHAgQArVqzoMkxJkiRJGp5uHzT8L8ALgF8C1wEvqKq3z7RNkr2AtVV1zlwCq6ojqmpVVa1atmzZXHYhSZIkSQuq2xYsgI2A66vqw0mWJblvVf1khvV3BfZJ8lRgQ+CeSY4Frk6yvG29Wg6snXv4kiRJkjQ6umrBSvJm4HXAIe2sDYBjZ9qmqg6pqm2qaiWwP/DlqnoucApwQLvaAcCn5xC3JEmSJI2cbge5eAawD3ATQFVdxSzDs8/gMGCPJJcAe7TTkiRJkjT2uu0ieEtVVZICSHKPXg5SVacDp7fvrwV272V7SZIkSRoH3SZYxyf5H2DTJH8HvBD4wODC0lzsvXdv669ePZg4JEmSpKVq1gQrSYDjgAcB1wMPBN5UVacOODZJkiRJGiuzJlht18CTq+rhgEmVJEmSJE2j2y6C307yiKo6a6DRaEH10qXQ7oSSJEnS7LpNsJ4IHJTkMpqRBEPTuPXQQQUmSZIkSeNmxgQryYqquhx4ygLFI0mSJElja7YWrJOBXarqp0k+WVV/uQAxSZIkSdJYmu1Bw+l4f79BBiJJkiRJ4262BKumeS9JkiRJmmS2LoIPS3I9TUvW3dv3cPsgF/ccaHSSJEmSNEZmTLCqar2FCkSSJEmSxt1sXQQlSZIkSV0ywZIkSZKkPjHBkiRJkqQ+mW2QCwmAvffubf3VqwcThyRJkjTKbMGSJEmSpD4xwZIkSZKkPjHBkiRJkqQ+GViClWTbJF9JclGS7yV5eTt/sySnJrmkfb33oGKQJEmSpIU0yBasW4FXV9WDgUcDL0myA3AwcFpVbQ+c1k5LkiRJ0tgbWIJVVWuq6tz2/Q3ARcDWwL7A0e1qRwNPH1QMkiRJkrSQFuQerCQrgZ2BM4Atq2oNNEkYsMU02xyY5OwkZ69bt24hwpQkSZKkeRl4gpVkY+CTwCuq6vput6uqI6pqVVWtWrZs2eAClCRJkqQ+GWiClWQDmuTqo1X1qXb21UmWt8uXA2sHGYMkSZIkLZRBjiIY4IPARVX17o5FpwAHtO8PAD49qBgkSZIkaSGtP8B97wo8D7ggyXntvNcDhwHHJ3kRcDnwzAHGoCHZe+/u1129enBxSJIkSQtpYAlWVX0DyDSLdx/UcSVJkiRpWBZkFEFJkiRJWgpMsCRJkiSpT0ywJEmSJKlPTLAkSZIkqU9MsCRJkiSpT0ywJEmSJKlPTLAkSZIkqU8G+aBhaeh6eeAx+NBjSZIkzY8tWJIkSZLUJ7ZgaehsZZIkSdJiYQuWJEmSJPWJCZYkSZIk9YkJliRJkiT1ifdgaez0es+WJEmStFBMsKQF0kti6EAekiRJ48kES+owKkmQIytKkiSNJ+/BkiRJkqQ+sQVLmiPvBZMkSdJkQ2nBSrJnkh8k+VGSg4cRgyRJkiT124K3YCVZD/gvYA/gSuCsJKdU1fcXOhZpsVgKrWmjdM9bL0Yl7l7jGJX7ESVJGjfDaMF6JPCjqrq0qm4BPgHsO4Q4JEmSJKmvhnEP1tbAFR3TVwKPmrxSkgOBA9vJG5P8YJ7H3Ry4Zp77GCWL6XwW07mA5zMQSV92s+Dn0qe4p9P1+Qwyjj7te7u+7EWSpCEbRoI1VVVcd5pRdQRwRN8OmpxdVav6tb9hW0zns5jOBTyfUbaYzgUW3/lIkrQYDKOL4JXAth3T2wBXDSEOSZIkSeqrYSRYZwHbJ7lvkrsC+wOnDCEOSZIkSeqrBe8iWFW3Jnkp8AVgPeBDVfW9BTh037objojFdD6L6VzA8xlli+lcYPGdjyRJYy9Vd7r9SZIkSZI0B0N50LAkSZIkLUYmWJIkSZLUJ0siwUqyZ5IfJPlRkoOHHU8vkmyb5CtJLkryvSQvb+dvluTUJJe0r/cedqzdSrJeku8k+Uw7Pc7nsmmSE5Nc3P6OHjPm5/PK9nN2YZKPJ9lwnM4nyYeSrE1yYce8aeNPckj7vfCDJH8+nKinNs25vLP9rJ2f5KQkm3YsG9lzkSRpKVn0CVaS9YD/Ap4C7AA8O8kOw42qJ7cCr66qBwOPBl7Sxn8wcFpVbQ+c1k6Pi5cDF3VMj/O5vAf4fFU9CHgYzXmN5fkk2Rr4R2BVVe1IMwjN/ozX+RwF7Dlp3pTxt39H+wMPabd5X/t9MSqO4s7nciqwY1U9FPghcAiMxblIkrRkLPoEC3gk8KOqurSqbgE+Aew75Ji6VlVrqurc9v0NNP/Ab01zDke3qx0NPH0oAfYoyTbA04AjO2aP67ncE3g88EGAqrqlqq5jTM+ntT5w9yTrAxvRPKNubM6nqr4G/GLS7Oni3xf4RFX9tqp+AvyI5vtiJEx1LlX1xaq6tZ38Ns1zBGHEz0WSpKVkKSRYWwNXdExf2c4bO0lWAjsDZwBbVtUaaJIwYIshhtaLw4HXAr/vmDeu53I/YB3w4bbL45FJ7sGYnk9V/Qz4d+ByYA3wq6r6ImN6Ph2mi3/cvxteCHyufT/u5yJJ0qKxFBKsTDFv7MamT7Ix8EngFVV1/bDjmYskewFrq+qcYcfSJ+sDuwD/XVU7Azcx2t3nZtTem7QvcF9gK+AeSZ473KgGamy/G5K8gab78EcnZk2x2liciyRJi81SSLCuBLbtmN6GptvT2EiyAU1y9dGq+lQ7++oky9vly4G1w4qvB7sC+yS5jKar5pOSHMt4ngs0n60rq+qMdvpEmoRrXM/nycBPqmpdVf0O+BTwWMb3fCZMF/9YfjckOQDYC3hO3f4gw7E8F0mSFqOlkGCdBWyf5L5J7kpzI/gpQ46pa0lCc4/PRVX17o5FpwAHtO8PAD690LH1qqoOqaptqmolze/hy1X1XMbwXACq6ufAFUke2M7aHfg+Y3o+NF0DH51ko/ZztzvNPX/jej4Tpov/FGD/JHdLcl9ge+DMIcTXtSR7Aq8D9qmqX3csGrtzkSRpscrtF0AXryRPpbn3Zz3gQ1X1L8ONqHtJ/hT4OnABt9+39Hqa+7COB1bQ/GP8zKqafHP/yEqyG/CaqtoryR8xpueSZCeaATvuClwKvIDmwsW4ns9bgGfRdD/7DvC3wMaMyfkk+TiwG7A5cDXwZuBkpom/7Wr3QprzfUVVfe7Oex2Oac7lEOBuwLXtat+uqoPa9Uf2XCRJWkqWRIIlSZIkSQthKXQRlCRJkqQFYYIlSZIkSX1igiVJkiRJfWKCJUmSJEl9YoIlSZIkSX1igiV1IckbknwvyflJzkvyqHb+kUl2GMDxbpw0nSTfSPKUjnn7Jfl8kn2SHDzL/p6f5L3dHEuSJElzt/6wA5BGXZLHAHsBu1TVb5NsTvPcK6rqbxcihqqqJAcBJyT5Cs0z3f4F2LOqfswYPTxbkiRpMbMFS5rdcuCaqvotQFVdU1VXASQ5Pcmq9v2LkvywnfeBiRajJEcl+c8k30xyaZK/audvnOS0JOcmuSDJvjMFUVUXAquB19E8dPYjVfXjztapJMuSfDLJWe3PrpP3k+S+Sb7VLn9b30pJkiRJJlhSF74IbNsmT+9L8oTJKyTZCvgn4NHAHsCDJq2yHPhTmpaww9p5vwGeUVW7AE8E3pUks8TyFuCvgacA75hi+XuA/6iqRwB/CRw5zTr/3a7z81mOJ0mSpB7YRVCaRVXdmOThwONoEqHjkhxcVUd1rPZI4KtV9QuAJCcAD+hYfnJV/R74fpIt23kB3p7k8cDvga2BLZkh6amqm5IcB9w40aI2yZOBHTrytHsm2WTSOrvSJF8AxwD/Nv3ZS5IkqRcmWFIXquo24HTg9CQXAAcAR3WsMlvLU2cyNLHuc4BlwMOr6ndJLgM27CKc37c/U7kL8Jiqurlz5hQNY9XFcSRJktQjuwhKs0jywCTbd8zaCfjppNXOBJ6Q5N5J1uf2FqKZ3AtY2yZXTwS260O4XwReOjGRZKcp1vk/YP/2/XP6cExJkiS1TLCk2W0MHJ3k+0nOB3YADu1coap+BrwdOAP4EvB94Fez7PejwKokZ9MkOhf3IdZ/bPd5fpLvAwdNsc7LgZckOYsmyZMkSVKfpMqeQlI/JNm4vV9rfeAk4ENVddKw45IkSdLCsQVL6p9Dk5wHXAj8BDh5qNFIkiRpwdmCJUmSJEl9YguWJEmSJPWJCZYkSZIk9YkJliRJkiT1iQmWJEmSJPWJCZYkSZIk9cn/D7nRWJ4dVOTPAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 864x576 with 5 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "### best and final 1 ###\n",
    "\n",
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionEE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_2idpass_EE_hist1;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield\n",
    "    background = exponential_background(x, a, b)\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)\n",
    "signal_fraction_guess = 0.95\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters\n",
    "initial_params = [\n",
    "    91.1876, 2.4952, 91.0, 2.0, 1.0, -0.01, signal_yield_guess\n",
    "]\n",
    "\n",
    "# Bounds for Parameters\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],\n",
    "    [94, 5.5, 94, 7.0, np.inf, 1.0, total_yield * 1.5]\n",
    ")\n",
    "\n",
    "# Number of bootstrap iterations\n",
    "n_bootstrap = 500\n",
    "\n",
    "# Arrays to store fitted parameters\n",
    "signal_params = []  # For signal-related parameters (m, gamma, mu, sigma, sig_yield)\n",
    "background_params = []  # For background-related parameters (a, b)\n",
    "\n",
    "# Perform bootstrapping\n",
    "for _ in range(n_bootstrap):\n",
    "    # Generate a resampled histogram with replacement\n",
    "    resampled_y_data = np.random.poisson(y_data)  # Resample assuming Poisson statistics\n",
    "\n",
    "    try:\n",
    "        # Fit the resampled data\n",
    "        popt_resampled, _ = curve_fit(\n",
    "            fit_function, x_data, resampled_y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    "        )\n",
    "        \n",
    "        # Store signal parameters\n",
    "        signal_params.append(popt_resampled[:5])  # m, gamma, mu, sigma, sig_yield\n",
    "        \n",
    "        # Store background parameters\n",
    "        background_params.append(popt_resampled[4:6])  # a, b\n",
    "    \n",
    "    except RuntimeError:\n",
    "        # Skip fits that fail to converge\n",
    "        continue\n",
    "\n",
    "# Convert collected parameters to numpy arrays for easier indexing\n",
    "signal_params = np.array(signal_params)\n",
    "background_params = np.array(background_params)\n",
    "\n",
    "# Plotting signal parameter distributions\n",
    "plt.figure(figsize=(12, 8))\n",
    "signal_labels = [\"Mass (m)\", \"Width (gamma)\", \"Mean (mu)\", \"Sigma\", \"Signal Yield\"]\n",
    "for i, param in enumerate(signal_labels):\n",
    "    plt.subplot(3, 2, i + 1)\n",
    "    plt.hist(signal_params[:, i], bins=30, color='blue', alpha=0.7)\n",
    "    if param == \"Sigma\":\n",
    "        plt.hist(signal_params[:, i],range=(0,5), bins=100, color='blue', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n",
    "# Plotting background parameter distributions\n",
    "plt.figure(figsize=(12, 4))\n",
    "background_labels = [\"Background Yield (a)\", \"Background Slope (b)\"]\n",
    "for i, param in enumerate(background_labels):\n",
    "    plt.subplot(1, 2, i + 1)\n",
    "    plt.hist(background_params[:, i], bins=30, color='green', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "1b58f93d",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 5 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "### best and final 1 ###\n",
    "\n",
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionEE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_2idpass_EE_hist2;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield\n",
    "    background = exponential_background(x, a, b)\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)\n",
    "signal_fraction_guess = 0.95\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters\n",
    "initial_params = [\n",
    "    91.1876, 2.4952, 91.0, 2.0, 1.0, -0.01, signal_yield_guess\n",
    "]\n",
    "\n",
    "# Bounds for Parameters\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],\n",
    "    [94, 5.5, 94, 7.0, np.inf, 1.0, total_yield * 1.5]\n",
    ")\n",
    "\n",
    "# Number of bootstrap iterations\n",
    "n_bootstrap = 500\n",
    "\n",
    "# Arrays to store fitted parameters\n",
    "signal_params = []  # For signal-related parameters (m, gamma, mu, sigma, sig_yield)\n",
    "background_params = []  # For background-related parameters (a, b)\n",
    "\n",
    "# Perform bootstrapping\n",
    "for _ in range(n_bootstrap):\n",
    "    # Generate a resampled histogram with replacement\n",
    "    resampled_y_data = np.random.poisson(y_data)  # Resample assuming Poisson statistics\n",
    "\n",
    "    try:\n",
    "        # Fit the resampled data\n",
    "        popt_resampled, _ = curve_fit(\n",
    "            fit_function, x_data, resampled_y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    "        )\n",
    "        \n",
    "        # Store signal parameters\n",
    "        signal_params.append(popt_resampled[:5])  # m, gamma, mu, sigma, sig_yield\n",
    "        \n",
    "        # Store background parameters\n",
    "        background_params.append(popt_resampled[4:6])  # a, b\n",
    "    \n",
    "    except RuntimeError:\n",
    "        # Skip fits that fail to converge\n",
    "        continue\n",
    "\n",
    "# Convert collected parameters to numpy arrays for easier indexing\n",
    "signal_params = np.array(signal_params)\n",
    "background_params = np.array(background_params)\n",
    "\n",
    "# Plotting signal parameter distributions\n",
    "plt.figure(figsize=(12, 8))\n",
    "signal_labels = [\"Mass (m)\", \"Width (gamma)\", \"Mean (mu)\", \"Sigma\", \"Signal Yield\"]\n",
    "for i, param in enumerate(signal_labels):\n",
    "    plt.subplot(3, 2, i + 1)\n",
    "    plt.hist(signal_params[:, i], bins=30, color='blue', alpha=0.7)\n",
    "    if param == \"Sigma\":\n",
    "        plt.hist(signal_params[:, i],range=(0,5), bins=100, color='blue', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n",
    "# Plotting background parameter distributions\n",
    "plt.figure(figsize=(12, 4))\n",
    "background_labels = [\"Background Yield (a)\", \"Background Slope (b)\"]\n",
    "for i, param in enumerate(background_labels):\n",
    "    plt.subplot(1, 2, i + 1)\n",
    "    plt.hist(background_params[:, i], bins=30, color='green', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "3c65dfdb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 5 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "### best and final 1 ###\n",
    "\n",
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionEE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_2idpass_EE_hist3;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield\n",
    "    background = exponential_background(x, a, b)\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)\n",
    "signal_fraction_guess = 0.95\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters\n",
    "initial_params = [\n",
    "    91.1876, 2.4952, 91.0, 2.0, 1.0, -0.01, signal_yield_guess\n",
    "]\n",
    "\n",
    "# Bounds for Parameters\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],\n",
    "    [94, 5.5, 94, 7.0, np.inf, 1.0, total_yield * 1.5]\n",
    ")\n",
    "\n",
    "# Number of bootstrap iterations\n",
    "n_bootstrap = 500\n",
    "\n",
    "# Arrays to store fitted parameters\n",
    "signal_params = []  # For signal-related parameters (m, gamma, mu, sigma, sig_yield)\n",
    "background_params = []  # For background-related parameters (a, b)\n",
    "\n",
    "# Perform bootstrapping\n",
    "for _ in range(n_bootstrap):\n",
    "    # Generate a resampled histogram with replacement\n",
    "    resampled_y_data = np.random.poisson(y_data)  # Resample assuming Poisson statistics\n",
    "\n",
    "    try:\n",
    "        # Fit the resampled data\n",
    "        popt_resampled, _ = curve_fit(\n",
    "            fit_function, x_data, resampled_y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    "        )\n",
    "        \n",
    "        # Store signal parameters\n",
    "        signal_params.append(popt_resampled[:5])  # m, gamma, mu, sigma, sig_yield\n",
    "        \n",
    "        # Store background parameters\n",
    "        background_params.append(popt_resampled[4:6])  # a, b\n",
    "    \n",
    "    except RuntimeError:\n",
    "        # Skip fits that fail to converge\n",
    "        continue\n",
    "\n",
    "# Convert collected parameters to numpy arrays for easier indexing\n",
    "signal_params = np.array(signal_params)\n",
    "background_params = np.array(background_params)\n",
    "\n",
    "# Plotting signal parameter distributions\n",
    "plt.figure(figsize=(12, 8))\n",
    "signal_labels = [\"Mass (m)\", \"Width (gamma)\", \"Mean (mu)\", \"Sigma\", \"Signal Yield\"]\n",
    "for i, param in enumerate(signal_labels):\n",
    "    plt.subplot(3, 2, i + 1)\n",
    "    plt.hist(signal_params[:, i], bins=30, color='blue', alpha=0.7)\n",
    "    if param == \"Sigma\":\n",
    "        plt.hist(signal_params[:, i],range=(0,5), bins=100, color='blue', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n",
    "# Plotting background parameter distributions\n",
    "plt.figure(figsize=(12, 4))\n",
    "background_labels = [\"Background Yield (a)\", \"Background Slope (b)\"]\n",
    "for i, param in enumerate(background_labels):\n",
    "    plt.subplot(1, 2, i + 1)\n",
    "    plt.hist(background_params[:, i], bins=30, color='green', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "01d3bd49",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 5 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "### best and final 1 ###\n",
    "\n",
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionEE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_1idpass_EE_hist1;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield\n",
    "    background = exponential_background(x, a, b)\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)\n",
    "signal_fraction_guess = 0.95\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters\n",
    "initial_params = [\n",
    "    91.1876, 2.4952, 91.0, 2.0, 1.0, -0.01, signal_yield_guess\n",
    "]\n",
    "\n",
    "# Bounds for Parameters\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],\n",
    "    [94, 5.5, 94, 12.0, np.inf, 1.0, total_yield * 1.5]\n",
    ")\n",
    "\n",
    "# Number of bootstrap iterations\n",
    "n_bootstrap = 500\n",
    "\n",
    "# Arrays to store fitted parameters\n",
    "signal_params = []  # For signal-related parameters (m, gamma, mu, sigma, sig_yield)\n",
    "background_params = []  # For background-related parameters (a, b)\n",
    "\n",
    "# Perform bootstrapping\n",
    "for _ in range(n_bootstrap):\n",
    "    # Generate a resampled histogram with replacement\n",
    "    resampled_y_data = np.random.poisson(y_data)  # Resample assuming Poisson statistics\n",
    "\n",
    "    try:\n",
    "        # Fit the resampled data\n",
    "        popt_resampled, _ = curve_fit(\n",
    "            fit_function, x_data, resampled_y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    "        )\n",
    "        \n",
    "        # Store signal parameters\n",
    "        signal_params.append(popt_resampled[:5])  # m, gamma, mu, sigma, sig_yield\n",
    "        \n",
    "        # Store background parameters\n",
    "        background_params.append(popt_resampled[4:6])  # a, b\n",
    "    \n",
    "    except RuntimeError:\n",
    "        # Skip fits that fail to converge\n",
    "        continue\n",
    "\n",
    "# Convert collected parameters to numpy arrays for easier indexing\n",
    "signal_params = np.array(signal_params)\n",
    "background_params = np.array(background_params)\n",
    "\n",
    "# Plotting signal parameter distributions\n",
    "plt.figure(figsize=(12, 8))\n",
    "signal_labels = [\"Mass (m)\", \"Width (gamma)\", \"Mean (mu)\", \"Sigma\", \"Signal Yield\"]\n",
    "for i, param in enumerate(signal_labels):\n",
    "    plt.subplot(3, 2, i + 1)\n",
    "    plt.hist(signal_params[:, i], bins=30, color='blue', alpha=0.7)\n",
    "    if param == \"Sigma\":\n",
    "        plt.hist(signal_params[:, i],range=(0,5), bins=100, color='blue', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n",
    "# Plotting background parameter distributions\n",
    "plt.figure(figsize=(12, 4))\n",
    "background_labels = [\"Background Yield (a)\", \"Background Slope (b)\"]\n",
    "for i, param in enumerate(background_labels):\n",
    "    plt.subplot(1, 2, i + 1)\n",
    "    plt.hist(background_params[:, i], bins=30, color='green', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "dce27046",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 5 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "### best and final 1 ###\n",
    "\n",
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionEE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_1idpass_EE_hist2;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield\n",
    "    background = exponential_background(x, a, b)\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)\n",
    "signal_fraction_guess = 0.95\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters\n",
    "initial_params = [\n",
    "    91.1876, 2.4952, 91.0, 2.0, 1.0, -0.01, signal_yield_guess\n",
    "]\n",
    "\n",
    "# Bounds for Parameters\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],\n",
    "    [94, 5.5, 94, 7.0, np.inf, 1.0, total_yield * 1.5]\n",
    ")\n",
    "\n",
    "# Number of bootstrap iterations\n",
    "n_bootstrap = 500\n",
    "\n",
    "# Arrays to store fitted parameters\n",
    "signal_params = []  # For signal-related parameters (m, gamma, mu, sigma, sig_yield)\n",
    "background_params = []  # For background-related parameters (a, b)\n",
    "\n",
    "# Perform bootstrapping\n",
    "for _ in range(n_bootstrap):\n",
    "    # Generate a resampled histogram with replacement\n",
    "    resampled_y_data = np.random.poisson(y_data)  # Resample assuming Poisson statistics\n",
    "\n",
    "    try:\n",
    "        # Fit the resampled data\n",
    "        popt_resampled, _ = curve_fit(\n",
    "            fit_function, x_data, resampled_y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    "        )\n",
    "        \n",
    "        # Store signal parameters\n",
    "        signal_params.append(popt_resampled[:5])  # m, gamma, mu, sigma, sig_yield\n",
    "        \n",
    "        # Store background parameters\n",
    "        background_params.append(popt_resampled[4:6])  # a, b\n",
    "    \n",
    "    except RuntimeError:\n",
    "        # Skip fits that fail to converge\n",
    "        continue\n",
    "\n",
    "# Convert collected parameters to numpy arrays for easier indexing\n",
    "signal_params = np.array(signal_params)\n",
    "background_params = np.array(background_params)\n",
    "\n",
    "# Plotting signal parameter distributions\n",
    "plt.figure(figsize=(12, 8))\n",
    "signal_labels = [\"Mass (m)\", \"Width (gamma)\", \"Mean (mu)\", \"Sigma\", \"Signal Yield\"]\n",
    "for i, param in enumerate(signal_labels):\n",
    "    plt.subplot(3, 2, i + 1)\n",
    "    plt.hist(signal_params[:, i], bins=30, color='blue', alpha=0.7)\n",
    "    if param == \"Sigma\":\n",
    "        plt.hist(signal_params[:, i],range=(0,5), bins=100, color='blue', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n",
    "# Plotting background parameter distributions\n",
    "plt.figure(figsize=(12, 4))\n",
    "background_labels = [\"Background Yield (a)\", \"Background Slope (b)\"]\n",
    "for i, param in enumerate(background_labels):\n",
    "    plt.subplot(1, 2, i + 1)\n",
    "    plt.hist(background_params[:, i], bins=30, color='green', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "26981693",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 5 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "### best and final 1 ###\n",
    "\n",
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionEE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_1idpass_EE_hist3;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "y_errors = np.sqrt(y_data)  # Assume Poisson statistics for errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield\n",
    "    background = exponential_background(x, a, b)\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)\n",
    "signal_fraction_guess = 0.95\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters\n",
    "initial_params = [\n",
    "    91.1876, 2.4952, 91.0, 2.0, 1.0, -0.01, signal_yield_guess\n",
    "]\n",
    "\n",
    "# Bounds for Parameters\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],\n",
    "    [94, 5.5, 94, 12.0, np.inf, 1.0, total_yield * 1.5]\n",
    ")\n",
    "\n",
    "# Number of bootstrap iterations\n",
    "n_bootstrap = 500\n",
    "\n",
    "# Arrays to store fitted parameters\n",
    "signal_params = []  # For signal-related parameters (m, gamma, mu, sigma, sig_yield)\n",
    "background_params = []  # For background-related parameters (a, b)\n",
    "\n",
    "# Perform bootstrapping\n",
    "for _ in range(n_bootstrap):\n",
    "    # Generate a resampled histogram with replacement\n",
    "    resampled_y_data = np.random.poisson(y_data)  # Resample assuming Poisson statistics\n",
    "\n",
    "    try:\n",
    "        # Fit the resampled data\n",
    "        popt_resampled, _ = curve_fit(\n",
    "            fit_function, x_data, resampled_y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    "        )\n",
    "        \n",
    "        # Store signal parameters\n",
    "        signal_params.append(popt_resampled[:5])  # m, gamma, mu, sigma, sig_yield\n",
    "        \n",
    "        # Store background parameters\n",
    "        background_params.append(popt_resampled[4:6])  # a, b\n",
    "    \n",
    "    except RuntimeError:\n",
    "        # Skip fits that fail to converge\n",
    "        continue\n",
    "\n",
    "# Convert collected parameters to numpy arrays for easier indexing\n",
    "signal_params = np.array(signal_params)\n",
    "background_params = np.array(background_params)\n",
    "\n",
    "# Plotting signal parameter distributions\n",
    "plt.figure(figsize=(12, 8))\n",
    "signal_labels = [\"Mass (m)\", \"Width (gamma)\", \"Mean (mu)\", \"Sigma\", \"Signal Yield\"]\n",
    "for i, param in enumerate(signal_labels):\n",
    "    plt.subplot(3, 2, i + 1)\n",
    "    plt.hist(signal_params[:, i], bins=30, color='blue', alpha=0.7)\n",
    "    if param == \"Sigma\":\n",
    "        plt.hist(signal_params[:, i],range=(0,5), bins=100, color='blue', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n",
    "\n",
    "# Plotting background parameter distributions\n",
    "plt.figure(figsize=(12, 4))\n",
    "background_labels = [\"Background Yield (a)\", \"Background Slope (b)\"]\n",
    "for i, param in enumerate(background_labels):\n",
    "    plt.subplot(1, 2, i + 1)\n",
    "    plt.hist(background_params[:, i], bins=30, color='green', alpha=0.7)\n",
    "    plt.xlabel(param)\n",
    "    plt.ylabel(\"Frequency\")\n",
    "    plt.title(f\"Distribution of {param}\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "b0a6d94e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Signal Yield: 4070.17 ± 169.98\n",
      "Background Yield: 76.63 ± 68.56\n",
      "ID efficiency : 0.7774 ± 0.0112\n",
      "Background Slope: -0.02 ± 0.01\n",
      "Chi-squared: 49.78\n",
      "Degrees of Freedom: 53\n",
      "Chi-squared per dof: 0.94\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 504x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import uproot\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.stats import cauchy, norm\n",
    "\n",
    "# Load histogram data\n",
    "root_file_path = \"mass_regionEE.root\"\n",
    "with uproot.open(root_file_path) as file:\n",
    "    hist = file[\"h_mass_1idpass_EE_hist1;1\"]\n",
    "    hist_values, hist_edges = hist.to_numpy()\n",
    "\n",
    "# Calculate x-data (bin centers) and normalize y-data\n",
    "x_data = (hist_edges[:-1] + hist_edges[1:]) / 2\n",
    "y_data = hist_values\n",
    "\n",
    "# Re-bin the data to 60 bins\n",
    "new_bin_count = 60\n",
    "new_hist_values, new_hist_edges = np.histogram(\n",
    "    x_data, bins=new_bin_count, weights=y_data\n",
    ")\n",
    "x_data = (new_hist_edges[:-1] + new_hist_edges[1:]) / 2  # Bin centers\n",
    "y_data = new_hist_values\n",
    "y_errors = np.sqrt(y_data)  # Recalculate errors\n",
    "\n",
    "# Define the convoluted signal model (Breit-Wigner + Gaussian)\n",
    "def convoluted_signal(x, m, gamma, mu, sigma):\n",
    "    # Breit-Wigner (Cauchy PDF)\n",
    "    bw = cauchy.pdf(x, loc=m, scale=gamma)\n",
    "    # Gaussian (Normal distribution)\n",
    "    gauss = norm.pdf(x, loc=mu, scale=sigma)\n",
    "    # Convolution approximation (pointwise multiplication, normalize after)\n",
    "    conv = bw * gauss\n",
    "    conv /= np.sum(conv)  # Normalize over entire range\n",
    "    return conv\n",
    "\n",
    "# Exponential background model (with varying slope)\n",
    "def exponential_background(x, a, b):\n",
    "    # a: Exponential normalization (background yield)\n",
    "    # b: Exponential slope (background decay)\n",
    "    return a * np.exp(b * x)\n",
    "\n",
    "# Define the complete fit function for both signal and background\n",
    "def fit_function(x, m, gamma, mu, sigma, a, b, sig_yield):\n",
    "    # Signal model\n",
    "    signal = convoluted_signal(x, m, gamma, mu, sigma)\n",
    "    signal *= sig_yield  # Scale signal by signal yield\n",
    "\n",
    "    # Exponential background model (with varying slope)\n",
    "    background = exponential_background(x, a, b)\n",
    "    \n",
    "    # Combine signal and background\n",
    "    return signal + background\n",
    "\n",
    "# Total number of events in the histogram\n",
    "total_yield = np.sum(y_data)  \n",
    "signal_fraction_guess = 0.95  # Increase signal fraction guess (e.g., 0.95 or 0.9)\n",
    "signal_yield_guess = total_yield * signal_fraction_guess\n",
    "background_yield_guess = total_yield * (1 - signal_fraction_guess)\n",
    "\n",
    "# Initial Parameters (signal and background yield fixed)\n",
    "initial_params = [\n",
    "    91.1876,  # m: Breit-Wigner mass\n",
    "    2.4952,   # gamma: Breit-Wigner width\n",
    "    91.0,     # mu: Gaussian mean\n",
    "    2.0,      # sigma: Gaussian standard deviation\n",
    "    1.0,      # a: Exponential constant term (background normalization)\n",
    "    -0.01,    # b: Exponential slope (background decay)\n",
    "    signal_yield_guess,   # sig_yield: Signal yield\n",
    "]\n",
    "\n",
    "# Bounds for Parameters (background yield and slope are allowed to vary)\n",
    "bounds = (\n",
    "    [90, 0.5, 85, 0.1, 0.0, -0.5, 0],  # Lower bounds\n",
    "    [94, 5.5, 94, 7.0, np.inf, 1.0, total_yield * 1.5]  # Upper bounds\n",
    ")\n",
    "\n",
    "# Fit the data\n",
    "popt, pcov = curve_fit(\n",
    "    fit_function, x_data, y_data, p0=initial_params, sigma=y_errors, bounds=bounds\n",
    ")\n",
    "\n",
    "# Extracting the fitted parameters\n",
    "(m, gamma, mu, sigma, a, b, sig_yield) = popt\n",
    "\n",
    "# Compute errors in the fit parameters\n",
    "sig_yield_error = np.sqrt(pcov[6, 6])  # Error for sig_yield (7th parameter)\n",
    "background_error = np.sqrt(pcov[4, 4])  # Error for background (5th parameter)\n",
    "\n",
    "# Print the results\n",
    "print(f\"Signal Yield: {sig_yield:.2f} ± {sig_yield_error:.2f}\")\n",
    "print(f\"Background Yield: {a:.2f} ± {background_error:.2f}\")\n",
    "print(f\"ID efficiency : 0.7774 ± 0.0112\")\n",
    "print(f\"Background Slope: {b:.2f} ± {np.sqrt(pcov[5, 5]):.2f}\")\n",
    "\n",
    "# Generate the signal and background components for plotting\n",
    "signal = convoluted_signal(x_data, m, gamma, mu, sigma)\n",
    "signal *= sig_yield\n",
    "\n",
    "background = exponential_background(x_data, a, b)\n",
    "\n",
    "# Generate the fit curve\n",
    "fit = signal + background\n",
    "\n",
    "# Compute the Chi-squared value\n",
    "residuals = (y_data - fit) / y_errors  # Residuals\n",
    "chi_squared = np.sum(residuals**2)  # Chi-squared value\n",
    "dof = len(x_data) - len(popt)  # Degrees of freedom\n",
    "chi_squared_dof = chi_squared / dof  # Chi-squared per dof\n",
    "\n",
    "# Print Chi-squared and Degrees of Freedom\n",
    "print(f\"Chi-squared: {chi_squared:.2f}\")\n",
    "print(f\"Degrees of Freedom: {dof}\")\n",
    "print(f\"Chi-squared per dof: {chi_squared_dof:.2f}\")\n",
    "\n",
    "# Diagnostic plot of the fit\n",
    "plt.figure(figsize=(7, 6))\n",
    "plt.errorbar(x_data, y_data, yerr=y_errors, fmt='o', label='Data', color='black')\n",
    "plt.plot(x_data, fit, label='Fit', color='red')\n",
    "plt.plot(x_data, signal, '--', label='Signal', color='blue')\n",
    "plt.plot(x_data, background, '--', label='Background', color='green')\n",
    "plt.xlabel(\"Mass\")\n",
    "plt.ylabel(\"Events\")\n",
    "plt.legend()\n",
    "plt.title(\"Signal and Background Fit with Varying Exponential Background Slope\")\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e6f21d25",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "62899da1",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a3ad2d76",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
